"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3505a031 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@4149823c 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5c7039b1 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@127d5aeb 
""2019-06-28 13:44:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 13:44:49 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5fcdb74b 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@51175ad4, com.stock.xMarket.VO.OrderVO@7e5f90ab, com.stock.xMarket.VO.OrderVO@fefe7f7, com.stock.xMarket.VO.OrderVO@2f36fd3d, com.stock.xMarket.VO.OrderVO@449cd3f5, com.stock.xMarket.VO.OrderVO@46c4d905, com.stock.xMarket.VO.OrderVO@36645e75, com.stock.xMarket.VO.OrderVO@2ea39291]
""2019-06-28 13:44:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:44:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@c82efcb]
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5f498a79 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3b4c619b 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5bc26e09 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@6be92cab 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@76443b57 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@42d85c53 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@521f3026 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@52f2adeb 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@62eed4c4 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3d5a97df 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5553a9fb 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@67fd882f 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@550fbb67 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@655d1131 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@57209656 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@413e2ceb 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7c94bafd 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@681e93fb 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5fb39ea6 
""2019-06-28 13:44:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@67a8c725 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@2bf6bc47 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@6855f63a 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@235512c5 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@6d5aa7cd 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@1239938b 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@70798924 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3d2bebd7 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@1bf842a9 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@317154a4 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@ad327e1 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@20d0211e 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@52c093f8 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@25718cd2 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7b372632 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7fb52f7b 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3094e0d5 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3d68dbe6 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3b5e6316 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@403e0480 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@65082e6d 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@6c6c8e36 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@654b365f 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3a985348 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@319e83a 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@6f797923 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7eb082db 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@33d715da 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@55344791 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@40ae141b 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@1505a0d5 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@1f72265e 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@2f1d67a5 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@56bb3bdc 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@1d94ddd4 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3bc4d40 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3c48a675 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@51a7b326 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@44dbf2d6 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@42c2c229 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@650e1329 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@438c8f70 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@77c1751e 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@21191918 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@48745aac 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@70ce7354 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5d1068ba 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5eda196a 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5acb08a7 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@320499e4 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@71226af 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@70725580 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@6eadd678 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@4fc37841 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@22d85a54 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@778ecf50 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@43f71ca0 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@79f5e0d 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@230d2c90 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@470efb81 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@752e0dca 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@699dc9da 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@76391805 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@684c174f 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@299fdbb 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3e908072 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@1acc95f7 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@725e432d 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5e2deede 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@6506fe4a 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@335735e1 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@240a92e6 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@31aa2f84 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5493e21c 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@1fdb3e2b 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@4a118f65 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3d68c823 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@2c231e42 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@29a5c561 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7ce6d5b0 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5d8f0d6a 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@4360d57a 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@12b95099 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@4c47e651 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@3f24cfee 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@345609cf 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@614661c5 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@597da4e1 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@267d1210 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7e9b445d 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@c53b4ec 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@4aecc53c 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@76f55600 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@762e1880 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7c8fb1d0 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@155903d3 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5b171061 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5465f647 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@735255bb 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@587082a5 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@4dee7e58 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@34593b19 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@136a6a60 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7a02daf9 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@296e87bb 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@1dd2a347 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@39091015 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@2f81ddb 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@691c8bca 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@68d7a396 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5ed89653 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@610cd753 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@2d764090 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@57add94d 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@362bdf89 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@9c6848c 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7f481cd2 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@4bbf81e5 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  o.s.a.r.l.ConditionalRejectingErrorHandler - Execution of Rabbit message listener failed.
"org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener method 'public void com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(java.lang.String)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:198)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:127)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1552)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1478)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1466)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1461)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1410)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:870)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:854)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1137)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1043)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl.addTransactionOrder(TransactionOrderServiceImpl.java:90)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$FastClassBySpringCGLIB$$de084d54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.stock.xMarket.service.serviceImpl.TransactionOrderServiceImpl$$EnhancerBySpringCGLIB$$2366d118.addTransactionOrder(<generated>)
	at com.stock.xMarket.controller.listener.TradeOrderListener.execTradeOrder(TradeOrderListener.java:82)
	at com.stock.xMarket.controller.listener.TradeOrderListener.tradeOrderListener(TradeOrderListener.java:74)
	at sun.reflect.GeneratedMethodAccessor360.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:49)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:190)
	... 12 common frames omitted
"2019-06-28 13:44:50 [RMI TCP Connection(15)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@153552eb 
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:44:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:44:50 [RMI TCP Connection(15)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Waiting for workers to finish.
""2019-06-28 13:44:50 [RMI TCP Connection(15)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Successfully waited for workers to finish.
""2019-06-28 13:44:50 [RMI TCP Connection(15)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
""2019-06-28 13:44:50 [RMI TCP Connection(15)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 13:44:51 [RMI TCP Connection(15)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 13:44:51 [RMI TCP Connection(15)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2019-06-28 13:44:51 [RMI TCP Connection(15)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2019-06-28 13:46:01 [main] INFO  com.stock.xMarket.XMarketApplication - Starting XMarketApplication on MSI with PID 400 (D:\Workspaces\GitHub\xMarket\target\classes started by msi- in D:\Workspaces\GitHub\xMarket)
""2019-06-28 13:46:01 [main] INFO  com.stock.xMarket.XMarketApplication - No active profile set, falling back to default profiles: default
""2019-06-28 13:46:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 13:46:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91ms. Found 15 repository interfaces.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HistoryHoldPositionRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HoldPositionRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.IndexRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.NewsRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.OrderRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.ScheduledTaskRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.SelfSelectStockRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockHistoryRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TimeShareRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TradeOrderRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TransactionOrderRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundHistoryRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserRepository.
""2019-06-28 13:46:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
""2019-06-28 13:46:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jpaConfiguration' of type [com.stock.xMarket.config.JpaConfiguration$$EnhancerBySpringCGLIB$$18398e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 13:46:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a290f285] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 13:46:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8090 (http)
""2019-06-28 13:46:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2019-06-28 13:46:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.19]
""2019-06-28 13:46:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2019-06-28 13:46:02 [main] DEBUG o.s.web.context.ContextLoader - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
""2019-06-28 13:46:02 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1449 ms
""2019-06-28 13:46:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2019-06-28 13:46:03 [main] WARN  c.z.hikari.util.DriverDataSource - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
""2019-06-28 13:46:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2019-06-28 13:46:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 13:46:05 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 start
""2019-06-28 13:46:05 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 end
""2019-06-28 13:46:05 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 13:46:05 [main] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
""2019-06-28 13:46:05 [main] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
""2019-06-28 13:46:06 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/**/favicon.ico] in 'faviconHandlerMapping'
""2019-06-28 13:46:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2019-06-28 13:46:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 46 mappings in 'requestMappingHandlerMapping'
""2019-06-28 13:46:06 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2019-06-28 13:46:06 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
""2019-06-28 13:46:06 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
""2019-06-28 13:46:06 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#20b67366:0/SimpleConnection@cd9ce76 [delegate=amqp://zhang@127.0.0.1:5672/, localPort= 50979]
""2019-06-28 13:46:06 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:46:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path ''
""2019-06-28 13:46:06 [main] INFO  com.stock.xMarket.XMarketApplication - Started XMarketApplication in 5.744 seconds (JVM running for 6.362)
""2019-06-28 13:46:06 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@59f95cd1 
""2019-06-28 13:46:06 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:46:06 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=000858&userId=1013", parameters={masked}
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票000858查询用户1013
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@325ecdd8]
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3aa6900f]
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=000858", parameters={masked}
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@35d0e6a0]
""2019-06-28 13:46:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:48:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:48:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:48:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:48:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4284010f]
""2019-06-28 13:48:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:48:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:48:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:48:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:48:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5ef1e6f7]
""2019-06-28 13:48:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:48:29 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:48:29 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:48:29 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:48:29 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1a8cc6c]
""2019-06-28 13:48:29 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:49:31 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:49:31 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:49:31 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:49:31 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@718e8f41]
""2019-06-28 13:49:31 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:50:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:50:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:50:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:50:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1bebd022]
""2019-06-28 13:50:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:51:46 [main] INFO  com.stock.xMarket.XMarketApplication - Starting XMarketApplication on MSI with PID 12212 (D:\Workspaces\GitHub\xMarket\target\classes started by msi- in D:\Workspaces\GitHub\xMarket)
""2019-06-28 13:51:46 [main] INFO  com.stock.xMarket.XMarketApplication - No active profile set, falling back to default profiles: default
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 108ms. Found 15 repository interfaces.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HistoryHoldPositionRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HoldPositionRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.IndexRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.NewsRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.OrderRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.ScheduledTaskRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.SelfSelectStockRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockHistoryRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TimeShareRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TradeOrderRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TransactionOrderRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundHistoryRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserRepository.
""2019-06-28 13:51:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
""2019-06-28 13:51:47 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jpaConfiguration' of type [com.stock.xMarket.config.JpaConfiguration$$EnhancerBySpringCGLIB$$cf4f9ccb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 13:51:47 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$59a700de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 13:51:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8090 (http)
""2019-06-28 13:51:47 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2019-06-28 13:51:47 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.19]
""2019-06-28 13:51:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2019-06-28 13:51:47 [main] DEBUG o.s.web.context.ContextLoader - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
""2019-06-28 13:51:47 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1588 ms
""2019-06-28 13:51:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2019-06-28 13:51:48 [main] WARN  c.z.hikari.util.DriverDataSource - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
""2019-06-28 13:51:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2019-06-28 13:51:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 13:51:50 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 start
""2019-06-28 13:51:50 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 end
""2019-06-28 13:51:50 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 13:51:50 [main] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
""2019-06-28 13:51:50 [main] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
""2019-06-28 13:51:51 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/**/favicon.ico] in 'faviconHandlerMapping'
""2019-06-28 13:51:51 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2019-06-28 13:51:51 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 46 mappings in 'requestMappingHandlerMapping'
""2019-06-28 13:51:51 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2019-06-28 13:51:51 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
""2019-06-28 13:51:51 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
""2019-06-28 13:51:51 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#1df32c09:0/SimpleConnection@2b3ee95e [delegate=amqp://zhang@127.0.0.1:5672/, localPort= 51153]
""2019-06-28 13:51:51 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:51:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path ''
""2019-06-28 13:51:51 [main] INFO  com.stock.xMarket.XMarketApplication - Started XMarketApplication in 5.94 seconds (JVM running for 6.596)
""2019-06-28 13:51:51 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@2bea60c5 
""2019-06-28 13:51:51 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:51:51 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:53:55 [main] INFO  com.stock.xMarket.XMarketApplication - Starting XMarketApplication on MSI with PID 9728 (D:\Workspaces\GitHub\xMarket\target\classes started by msi- in D:\Workspaces\GitHub\xMarket)
""2019-06-28 13:53:55 [main] INFO  com.stock.xMarket.XMarketApplication - No active profile set, falling back to default profiles: default
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76ms. Found 15 repository interfaces.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HistoryHoldPositionRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HoldPositionRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.IndexRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.NewsRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.OrderRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.ScheduledTaskRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.SelfSelectStockRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockHistoryRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TimeShareRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TradeOrderRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TransactionOrderRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundHistoryRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserRepository.
""2019-06-28 13:53:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
""2019-06-28 13:53:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jpaConfiguration' of type [com.stock.xMarket.config.JpaConfiguration$$EnhancerBySpringCGLIB$$f4f0633a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 13:53:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7f47c74d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 13:53:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8090 (http)
""2019-06-28 13:53:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2019-06-28 13:53:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.19]
""2019-06-28 13:53:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2019-06-28 13:53:57 [main] DEBUG o.s.web.context.ContextLoader - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
""2019-06-28 13:53:57 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1281 ms
""2019-06-28 13:53:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2019-06-28 13:53:57 [main] WARN  c.z.hikari.util.DriverDataSource - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
""2019-06-28 13:53:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2019-06-28 13:53:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 13:53:59 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 start
""2019-06-28 13:53:59 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 end
""2019-06-28 13:53:59 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 13:53:59 [main] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
""2019-06-28 13:53:59 [main] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
""2019-06-28 13:54:00 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/**/favicon.ico] in 'faviconHandlerMapping'
""2019-06-28 13:54:00 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2019-06-28 13:54:00 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 46 mappings in 'requestMappingHandlerMapping'
""2019-06-28 13:54:00 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2019-06-28 13:54:00 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
""2019-06-28 13:54:00 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
""2019-06-28 13:54:00 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#1ffd0114:0/SimpleConnection@4bceac99 [delegate=amqp://zhang@127.0.0.1:5672/, localPort= 51236]
""2019-06-28 13:54:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561700582736,"sellPoint":false,"tradeOrderId":1561700582736,"buyPoint":true,"exchangeAmount":6600,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561700552896,"stockId":"000858","time":1561700582736,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 13:54:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path ''
""2019-06-28 13:54:00 [main] INFO  com.stock.xMarket.XMarketApplication - Started XMarketApplication in 5.065 seconds (JVM running for 5.597)
""2019-06-28 13:54:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@41dcef94 
""2019-06-28 13:54:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561700552896撤单
""2019-06-28 13:54:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700552896 的委托买单已被撤单，成交单存入数据库
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1008", parameters={masked}
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1008", parameters={masked}
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1008", parameters={masked}
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1008
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] ERROR c.s.x.controller.KlineController - 用户资金曲线数据获取失败，没有查询到此用户的历史资金信息
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] ERROR c.s.x.controller.BaseApiController - 暂无资金曲线
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@15daf55e]
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 13:57:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4b6810c7]
""2019-06-28 13:57:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@388e8f7e]
""2019-06-28 13:57:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:30 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1008", parameters={masked}
""2019-06-28 13:57:30 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 13:57:30 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:30 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@182b6bcd]
""2019-06-28 13:57:30 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1006", parameters={masked}
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1006", parameters={masked}
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1006", parameters={masked}
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1006
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] ERROR c.s.x.controller.KlineController - 用户资金曲线数据获取失败，没有查询到此用户的历史资金信息
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] ERROR c.s.x.controller.BaseApiController - 暂无资金曲线
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@23973316]
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@318b3130]
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3e7b62e8]
""2019-06-28 13:57:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1008", parameters={masked}
""2019-06-28 13:57:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:57:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4641e18b]
""2019-06-28 13:57:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1008", parameters={masked}
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7c707e6a]
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f703724]
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1271355e]
""2019-06-28 13:57:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:43 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1006", parameters={masked}
""2019-06-28 13:57:43 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 13:57:43 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1006", parameters={masked}
""2019-06-28 13:57:43 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1006", parameters={masked}
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1006
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] ERROR c.s.x.controller.KlineController - 用户资金曲线数据获取失败，没有查询到此用户的历史资金信息
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] ERROR c.s.x.controller.BaseApiController - 暂无资金曲线
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b182ed2]
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6bafedab]
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@64dd5b2]
""2019-06-28 13:57:44 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 13:57:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 13:57:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@40eed8e7]
""2019-06-28 13:57:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2750f30d]
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3ee3639e]
""2019-06-28 13:57:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=600000", parameters={masked}
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=600000", parameters={masked}
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：600000
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3bb514e]
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@440aee77]
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5e177a8]
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@375d210]
""2019-06-28 13:57:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@676bea52]
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3d72aad1]
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3e94042e]
""2019-06-28 13:58:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e751983]
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@94900e4]
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@25cc0105]
""2019-06-28 13:58:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:10 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:58:10 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:58:10 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:10 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@66e9487f]
""2019-06-28 13:58:10 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 13:58:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:58:21 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 13:58:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@39e058f8]
""2019-06-28 13:58:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@730e82ae]
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@247ccbf4]
""2019-06-28 13:58:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 13:58:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 13:58:47 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 13:58:47 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@358558b5, com.stock.xMarket.VO.OrderVO@1fafb40f, com.stock.xMarket.VO.OrderVO@5ebb54dd, com.stock.xMarket.VO.OrderVO@636a03d1, com.stock.xMarket.VO.OrderVO@7cb5bff9, com.stock.xMarket.VO.OrderVO@1ed863ac, com.stock.xMarket.VO.OrderVO@1ac1d116]
""2019-06-28 13:58:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@29863d14]
""2019-06-28 13:58:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6c9f271b]
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:49 [taskExecutor-13] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新股票可用余额
""2019-06-28 13:58:49 [taskExecutor-13] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 股票可用余额更新完毕
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5629370d]
""2019-06-28 13:58:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561701529402,"sellPoint":true,"tradeOrderId":1561701529402,"buyPoint":true,"exchangeAmount":100,"buyerId":1008,"sellOrderId":1561701530395,"sellerId":1008,"buyOrderId":1561699548925,"stockId":"600000","time":1561701529402,"tradePrice":12.5,"tradeType":1} 
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@1b640f11 
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701530395 的委托卖单完成交易，成交单存入数据库
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561701530395 的内容(sell):{"actualAmount":1243.748,"cancelNumber":0,"date":1561701529402,"exchangeAmount":100,"orderId":1561701530395,"ownerId":1008,"serviceTax":5.0,"stampTax":1.25,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561701529402,"totalExchangeMoney":1250.0,"tradeMarket":1,"tradePrice":12.5,"tradeType":true,"transactionOrderId":0,"transferFee":0.002,"type":1}
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新持仓信息
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 持仓信息更新完毕
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561699548925 的委托买单完成交易，成交单存入数据库
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561701530395 的内容(buy):{"actualAmount":1255.002,"cancelNumber":0,"date":1561701529402,"exchangeAmount":100,"orderId":1561699548925,"ownerId":1008,"serviceTax":5.0,"stampTax":0.0,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561701529402,"totalExchangeMoney":1250.0,"tradeMarket":1,"tradePrice":12.5,"tradeType":true,"transactionOrderId":0,"transferFee":0.002,"type":0}
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新持仓信息
""2019-06-28 13:58:49 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 持仓信息更新完毕
""2019-06-28 13:58:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 13:58:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 13:58:57 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 13:58:57 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@13a84ca0, com.stock.xMarket.VO.OrderVO@1629e305, com.stock.xMarket.VO.OrderVO@55b4f024, com.stock.xMarket.VO.OrderVO@524f1137, com.stock.xMarket.VO.OrderVO@3538a92, com.stock.xMarket.VO.OrderVO@5abb7036, com.stock.xMarket.VO.OrderVO@287c8e95]
""2019-06-28 13:58:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:58:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@210e404]
""2019-06-28 13:58:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/cancelOrder", parameters={masked}
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.cancelOrder(long) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的orderId：1561629234424
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@75240d2b]
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@426aec29, com.stock.xMarket.VO.OrderVO@3e3f72eb, com.stock.xMarket.VO.OrderVO@385e6e95, com.stock.xMarket.VO.OrderVO@1040a76e, com.stock.xMarket.VO.OrderVO@55e0aeb, com.stock.xMarket.VO.OrderVO@40b38881, com.stock.xMarket.VO.OrderVO@b526cc4]
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1e3cd117]
""2019-06-28 13:59:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 13:59:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 13:59:07 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 13:59:07 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7b010408, com.stock.xMarket.VO.OrderVO@18ea6a9d, com.stock.xMarket.VO.OrderVO@1f8a3ba2, com.stock.xMarket.VO.OrderVO@7043a258, com.stock.xMarket.VO.OrderVO@391d91c, com.stock.xMarket.VO.OrderVO@48e4e571, com.stock.xMarket.VO.OrderVO@67d80e4]
""2019-06-28 13:59:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6bc1b311]
""2019-06-28 13:59:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:59:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:59:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2594f354]
""2019-06-28 13:59:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 13:59:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:59:13 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 13:59:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@43428a6c]
""2019-06-28 13:59:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 13:59:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 13:59:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@e9e05e1]
""2019-06-28 13:59:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:23 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 13:59:23 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 13:59:23 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 13:59:23 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@292e0573, com.stock.xMarket.VO.OrderVO@390e65b9, com.stock.xMarket.VO.OrderVO@32e06bf2, com.stock.xMarket.VO.OrderVO@4448cb97, com.stock.xMarket.VO.OrderVO@1d944bf0, com.stock.xMarket.VO.OrderVO@577dc656, com.stock.xMarket.VO.OrderVO@66f398b0]
""2019-06-28 13:59:23 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:23 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6465e38a]
""2019-06-28 13:59:23 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 13:59:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 13:59:33 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 13:59:33 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4e63f6e6, com.stock.xMarket.VO.OrderVO@737bd065, com.stock.xMarket.VO.OrderVO@185d005c, com.stock.xMarket.VO.OrderVO@4e711c5a, com.stock.xMarket.VO.OrderVO@1f7417b4, com.stock.xMarket.VO.OrderVO@32a114c7, com.stock.xMarket.VO.OrderVO@428ead2f]
""2019-06-28 13:59:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@45bfae8]
""2019-06-28 13:59:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:39 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 13:59:39 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:59:39 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 13:59:39 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:39 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@157e8fc3]
""2019-06-28 13:59:39 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d88e9ce]
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e1fa7df]
""2019-06-28 13:59:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@217e5a56]
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e9faf27]
""2019-06-28 13:59:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 13:59:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 13:59:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 13:59:53 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 13:59:53 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5dd19539, com.stock.xMarket.VO.OrderVO@1e612c9b, com.stock.xMarket.VO.OrderVO@71ce67f2, com.stock.xMarket.VO.OrderVO@403c5175, com.stock.xMarket.VO.OrderVO@11157c16, com.stock.xMarket.VO.OrderVO@6878f5b, com.stock.xMarket.VO.OrderVO@4f4998e, com.stock.xMarket.VO.OrderVO@26e1d79c]
""2019-06-28 13:59:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 13:59:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1caefa9a]
""2019-06-28 13:59:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:00:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:00:03 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:00:03 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@513d1a29, com.stock.xMarket.VO.OrderVO@5817da6e, com.stock.xMarket.VO.OrderVO@17b24320, com.stock.xMarket.VO.OrderVO@4e9bd0c7, com.stock.xMarket.VO.OrderVO@774e776f, com.stock.xMarket.VO.OrderVO@116c0742, com.stock.xMarket.VO.OrderVO@1442ed0c, com.stock.xMarket.VO.OrderVO@44f0aab]
""2019-06-28 14:00:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3ee042]
""2019-06-28 14:00:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:00:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:00:07 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:00:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7da3e2a1]
""2019-06-28 14:00:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@12fd667e]
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@43238d2]
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3b2d8460]
""2019-06-28 14:00:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3b47215b]
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4ebd474d]
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@659986d9]
""2019-06-28 14:00:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/cancelOrder", parameters={masked}
""2019-06-28 14:00:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.cancelOrder(long) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:00:12 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的orderId：1561701587942
""2019-06-28 14:00:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@39bda26c]
""2019-06-28 14:00:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561701612744,"sellPoint":false,"tradeOrderId":1561701612744,"buyPoint":true,"exchangeAmount":1500,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561701587942,"stockId":"600000","time":1561701612744,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 14:00:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7e7cb3e8 
""2019-06-28 14:00:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561701587942撤单
""2019-06-28 14:00:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701587942 的委托买单已被撤单，成交单存入数据库
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6bea3bc9, com.stock.xMarket.VO.OrderVO@4cdc6fba, com.stock.xMarket.VO.OrderVO@45f58bb6, com.stock.xMarket.VO.OrderVO@66f25ea0, com.stock.xMarket.VO.OrderVO@5cfc05c4, com.stock.xMarket.VO.OrderVO@73f2005e, com.stock.xMarket.VO.OrderVO@1a339dad, com.stock.xMarket.VO.OrderVO@6e40c715]
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@52ae3d3c]
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6801bbdd, com.stock.xMarket.VO.OrderVO@59c0232e, com.stock.xMarket.VO.OrderVO@20d58462, com.stock.xMarket.VO.OrderVO@6d614a24, com.stock.xMarket.VO.OrderVO@8dbcb06, com.stock.xMarket.VO.OrderVO@505a4060, com.stock.xMarket.VO.OrderVO@5c20289d, com.stock.xMarket.VO.OrderVO@3b776957]
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6d2206c4]
""2019-06-28 14:00:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2319f670]
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6c9781df]
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@54be82a0]
""2019-06-28 14:00:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1013", parameters={masked}
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1cace0c5]
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1013", parameters={masked}
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1013", parameters={masked}
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1013
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5a5a675a]
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@612929f9]
""2019-06-28 14:00:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@23513545]
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@e74f02e]
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@31bd37c7]
""2019-06-28 14:00:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:00:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:00:26 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:00:26 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1e801bb1, com.stock.xMarket.VO.OrderVO@448d1e47, com.stock.xMarket.VO.OrderVO@3b475300, com.stock.xMarket.VO.OrderVO@1be96ec4, com.stock.xMarket.VO.OrderVO@5aaa39b, com.stock.xMarket.VO.OrderVO@2979fa4f, com.stock.xMarket.VO.OrderVO@28a76333, com.stock.xMarket.VO.OrderVO@7868a7ad]
""2019-06-28 14:00:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@288e7540]
""2019-06-28 14:00:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:00:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:00:36 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:00:37 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@821c3b6, com.stock.xMarket.VO.OrderVO@26ce4c27, com.stock.xMarket.VO.OrderVO@4816da17, com.stock.xMarket.VO.OrderVO@24c33134, com.stock.xMarket.VO.OrderVO@22f97a69, com.stock.xMarket.VO.OrderVO@7682a565, com.stock.xMarket.VO.OrderVO@83a1fc0, com.stock.xMarket.VO.OrderVO@354dd562]
""2019-06-28 14:00:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5c8edb90]
""2019-06-28 14:00:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5ed61f19]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3f16ae9]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@54438406]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@41fbab23]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@35d6711e]
""2019-06-28 14:00:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@46fed6a5]
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@75ca0cc4]
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:01:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561701682975,"sellPoint":true,"tradeOrderId":1561701682975,"buyPoint":true,"exchangeAmount":100,"buyerId":1001,"sellOrderId":1561700589570,"sellerId":1006,"buyOrderId":1561701683966,"stockId":"600000","time":1561701682975,"tradePrice":12.7,"tradeType":0} 
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@710fb9d9 
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561700589570 的委托卖单完成交易，成交单存入数据库
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561700589570 的内容(sell):{"actualAmount":1263.728,"cancelNumber":0,"date":1561701682975,"exchangeAmount":100,"orderId":1561700589570,"ownerId":1006,"serviceTax":5.0,"stampTax":1.27,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561701682975,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":0,"transferFee":0.002,"type":1}
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 开始更新持仓信息
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 持仓信息更新完毕
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701683966 的委托买单完成交易，成交单存入数据库
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561700589570 的内容(buy):{"actualAmount":1275.002,"cancelNumber":0,"date":1561701682975,"exchangeAmount":100,"orderId":1561701683966,"ownerId":1001,"serviceTax":5.0,"stampTax":0.0,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561701682975,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":0,"transferFee":0.002,"type":0}
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1001  股票id:600000 开始更新持仓信息
""2019-06-28 14:01:23 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1001  股票id:600000 持仓信息更新完毕
""2019-06-28 14:01:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1001", parameters={masked}
""2019-06-28 14:01:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:01:41 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1001
""2019-06-28 14:01:41 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7170efea, com.stock.xMarket.VO.OrderVO@1776385b]
""2019-06-28 14:01:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:01:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5d28fbbe]
""2019-06-28 14:01:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:01:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:01:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:01:46 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:01:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:01:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@31ebc7cc]
""2019-06-28 14:01:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3fc4f4e9]
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5960505b]
""2019-06-28 14:01:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:01:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:01:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:01:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:01:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6ab62494]
""2019-06-28 14:01:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@75ae4014]
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1821f64b]
""2019-06-28 14:01:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@256f47a1]
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3ef05245]
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3d6b17d6]
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4213c245]
""2019-06-28 14:02:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@15c550ae]
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@675838ce]
""2019-06-28 14:02:03 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 14:02:25 [taskExecutor-7] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新股票可用余额
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@28ff456d]
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2ca8c093]
""2019-06-28 14:02:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:02:25 [taskExecutor-7] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 股票可用余额更新完毕
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2dd8a86]
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@11c97b14]
""2019-06-28 14:03:17 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:03:17 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561701797297,"sellPoint":false,"tradeOrderId":1561701797297,"buyPoint":true,"exchangeAmount":100,"buyerId":1001,"sellOrderId":1561701746861,"sellerId":1008,"buyOrderId":1561701798289,"stockId":"600000","time":1561701797297,"tradePrice":12.6,"tradeType":0} 
""2019-06-28 14:03:17 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@7a54b09c 
""2019-06-28 14:03:17 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701746861 的委托卖单未完成交易，存入redis
""2019-06-28 14:03:17 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701798289 的委托买单完成交易，成交单存入数据库
""2019-06-28 14:03:17 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561701746861 的内容(buy):{"actualAmount":1265.002,"cancelNumber":0,"date":1561701797297,"exchangeAmount":100,"orderId":1561701798289,"ownerId":1001,"serviceTax":5.0,"stampTax":0.0,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561701797297,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":0,"transferFee":0.002,"type":0}
""2019-06-28 14:03:17 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1001  股票id:600000 开始更新持仓信息
""2019-06-28 14:03:17 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1001  股票id:600000 持仓信息更新完毕
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5fabcf16]
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@74f2d8c0]
""2019-06-28 14:05:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:05:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:05:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:05:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:05:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e189052]
""2019-06-28 14:05:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:05:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayExchange?userId=1001", parameters={masked}
""2019-06-28 14:05:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.todayExchange(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:05:56 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1001
""2019-06-28 14:05:56 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[{"actualAmount":1265.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561701798289,"ownerId":1001,"serviceTax":5.0,"stampTax":0.0,"stockBalance":14900,"stockId":"600000","stockName":"浦发银行","time":21797000,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64195,"transferFee":0.002,"type":0},{"actualAmount":1275.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561701683966,"ownerId":1001,"serviceTax":5.0,"stampTax":0.0,"stockBalance":14800,"stockId":"600000","stockName":"浦发银行","time":21682000,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":64194,"transferFee":0.002,"type":0},{"actualAmount":0.0,"cancelNumber":800,"date":1561680000000,"exchangeAmount":0,"orderId":1561700573878,"ownerId":1001,"serviceTax":0.0,"stampTax":0.0,"stockBalance":14700,"stockId":"600000","stockName":"浦发银行","time":20580000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64184,"transferFee":0.0,"type":0}]
""2019-06-28 14:05:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:05:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@23dff070]
""2019-06-28 14:05:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@243b9a76]
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@161d09c5]
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@42a0c4e7]
""2019-06-28 14:06:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1001", parameters={masked}
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1001
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71e73f78]
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@13eea2c]
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561701972874,"sellPoint":false,"tradeOrderId":1561701972874,"buyPoint":true,"exchangeAmount":100,"buyerId":1001,"sellOrderId":1561701746861,"sellerId":1008,"buyOrderId":1561701973871,"stockId":"600000","time":1561701972874,"tradePrice":12.6,"tradeType":0} 
""2019-06-28 14:06:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@657abdc 
""2019-06-28 14:06:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 在redis中找到卖单，更新信息
""2019-06-28 14:06:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701746861 的委托卖单未完成交易，存入redis
""2019-06-28 14:06:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701973871 的委托买单完成交易，成交单存入数据库
""2019-06-28 14:06:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561701746861 的内容(buy):{"actualAmount":1265.002,"cancelNumber":0,"date":1561701972874,"exchangeAmount":100,"orderId":1561701973871,"ownerId":1001,"serviceTax":5.0,"stampTax":0.0,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561701972874,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":0,"transferFee":0.002,"type":0}
""2019-06-28 14:06:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1001  股票id:600000 开始更新持仓信息
""2019-06-28 14:06:12 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1001  股票id:600000 持仓信息更新完毕
""2019-06-28 14:06:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:06:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:06:20 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:06:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@27bcc2a3]
""2019-06-28 14:06:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:06:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:06:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@40beb325]
""2019-06-28 14:06:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:22 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561701982343,"sellPoint":false,"tradeOrderId":1561701982343,"buyPoint":true,"exchangeAmount":1500,"buyerId":1013,"sellOrderId":1561701746861,"sellerId":1008,"buyOrderId":1561701983349,"stockId":"600000","time":1561701982343,"tradePrice":12.6,"tradeType":0} 
""2019-06-28 14:06:22 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5f157556 
""2019-06-28 14:06:22 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 在redis中找到卖单，更新信息
""2019-06-28 14:06:22 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701746861 的委托卖单未完成交易，存入redis
""2019-06-28 14:06:22 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701983349 的委托买单完成交易，成交单存入数据库
""2019-06-28 14:06:22 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561701746861 的内容(buy):{"actualAmount":18905.03,"cancelNumber":0,"date":1561701982343,"exchangeAmount":1500,"orderId":1561701983349,"ownerId":1013,"serviceTax":5.0,"stampTax":0.0,"stockBalance":1500,"stockId":"600000","stockName":"浦发银行","time":1561701982343,"totalExchangeMoney":18900.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":0,"transferFee":0.030000000000000002,"type":0}
""2019-06-28 14:06:22 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1013  股票id:600000 开始更新持仓信息
""2019-06-28 14:06:22 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1013  股票id:600000 持仓信息更新完毕
""2019-06-28 14:06:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:06:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:06:32 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:06:32 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5161fbf4, com.stock.xMarket.VO.OrderVO@1bb22fce, com.stock.xMarket.VO.OrderVO@242f19d5, com.stock.xMarket.VO.OrderVO@78dbd30f, com.stock.xMarket.VO.OrderVO@26bb29bb, com.stock.xMarket.VO.OrderVO@2cfdbefd, com.stock.xMarket.VO.OrderVO@70c0fb06, com.stock.xMarket.VO.OrderVO@56a51dba, com.stock.xMarket.VO.OrderVO@29ac1024]
""2019-06-28 14:06:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@68e759ba]
""2019-06-28 14:06:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:42 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:06:42 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:06:42 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:06:42 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@681863aa, com.stock.xMarket.VO.OrderVO@59d9ac15, com.stock.xMarket.VO.OrderVO@d83c75f, com.stock.xMarket.VO.OrderVO@4ba19274, com.stock.xMarket.VO.OrderVO@608fad99, com.stock.xMarket.VO.OrderVO@74a21c99, com.stock.xMarket.VO.OrderVO@6788846d, com.stock.xMarket.VO.OrderVO@20fd88da, com.stock.xMarket.VO.OrderVO@3d030a39]
""2019-06-28 14:06:42 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:42 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@59a19fd4]
""2019-06-28 14:06:42 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayExchange?userId=1013", parameters={masked}
""2019-06-28 14:06:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.todayExchange(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:06:52 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1013
""2019-06-28 14:06:52 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[{"actualAmount":18905.03,"cancelNumber":0,"date":1561680000000,"exchangeAmount":1500,"orderId":1561701983349,"ownerId":1013,"serviceTax":5.0,"stampTax":0.0,"stockBalance":5600,"stockId":"600000","stockName":"浦发银行","time":21982000,"totalExchangeMoney":18900.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64197,"transferFee":0.030000000000000002,"type":0},{"actualAmount":0.0,"cancelNumber":1500,"date":1561680000000,"exchangeAmount":0,"orderId":1561701587942,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":4100,"stockId":"600000","stockName":"浦发银行","time":21612000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64192,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":6600,"date":1561680000000,"exchangeAmount":0,"orderId":1561700552896,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":0,"stockId":"000858","stockName":"五 粮 液","time":20582000,"totalExchangeMoney":0.0,"tradeMarket":0,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64189,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":6600,"date":1561680000000,"exchangeAmount":0,"orderId":1561700552896,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":0,"stockId":"000858","stockName":"五 粮 液","time":20582000,"totalExchangeMoney":0.0,"tradeMarket":0,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64188,"transferFee":0.0,"type":0}]
""2019-06-28 14:06:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@590c18b8]
""2019-06-28 14:06:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@21ba3c]
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@ee6d453]
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3cba5406]
""2019-06-28 14:06:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:07:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:07:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5c451d5c]
""2019-06-28 14:07:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:07:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:07:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@26b61743]
""2019-06-28 14:07:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@48a2aeb2]
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@556df7ec]
""2019-06-28 14:07:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:07:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:07:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1f88976b]
""2019-06-28 14:07:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:07:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:07:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7a29c361]
""2019-06-28 14:07:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1006", parameters={masked}
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1006", parameters={masked}
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1006", parameters={masked}
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1006
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] ERROR c.s.x.controller.KlineController - 用户资金曲线数据获取失败，没有查询到此用户的历史资金信息
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] ERROR c.s.x.controller.BaseApiController - 暂无资金曲线
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7a422db9]
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 14:07:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@79c216a3]
""2019-06-28 14:07:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@693334]
""2019-06-28 14:07:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:07:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:07:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3833d7ae]
""2019-06-28 14:07:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@63f46ee7]
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6eb49f0b]
""2019-06-28 14:07:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:07:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:07:53 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:07:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@74784c9]
""2019-06-28 14:07:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:07:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:07:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:07:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@73979ae7]
""2019-06-28 14:07:54 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:07:54 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561702074153,"sellPoint":false,"tradeOrderId":1561702074153,"buyPoint":true,"exchangeAmount":100,"buyerId":1006,"sellOrderId":1561701746861,"sellerId":1008,"buyOrderId":1561702075155,"stockId":"600000","time":1561702074153,"tradePrice":12.6,"tradeType":0} 
""2019-06-28 14:07:54 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@176f90e4 
""2019-06-28 14:07:54 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 在redis中找到卖单，更新信息
""2019-06-28 14:07:54 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701746861 的委托卖单未完成交易，存入redis
""2019-06-28 14:07:54 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702075155 的委托买单完成交易，成交单存入数据库
""2019-06-28 14:07:54 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561701746861 的内容(buy):{"actualAmount":1265.002,"cancelNumber":0,"date":1561702074153,"exchangeAmount":100,"orderId":1561702075155,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561702074153,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":0,"transferFee":0.002,"type":0}
""2019-06-28 14:07:54 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 开始更新持仓信息
""2019-06-28 14:07:54 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 持仓信息更新完毕
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@365e3fa6]
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3cc3a1bd]
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@22dcafa3]
""2019-06-28 14:08:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@225587f1]
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@61d56b7c]
""2019-06-28 14:08:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:08:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:08:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6ab529e8]
""2019-06-28 14:08:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e47966c]
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:13 [taskExecutor-19] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 开始更新股票可用余额
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6d4afa6]
""2019-06-28 14:08:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:13 [taskExecutor-19] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 股票可用余额更新完毕
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3a42260]
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2c26a5f9]
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1329a996]
""2019-06-28 14:08:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@727faddb]
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@cacdee6]
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:27 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561702107749,"sellPoint":true,"tradeOrderId":1561702107749,"buyPoint":false,"exchangeAmount":200,"buyerId":1006,"sellOrderId":1561701746861,"sellerId":1008,"buyOrderId":1561702108747,"stockId":"600000","time":1561702107749,"tradePrice":12.6,"tradeType":0} 
""2019-06-28 14:08:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@72e328a 
""2019-06-28 14:08:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 在redis中找到卖单，更新信息
""2019-06-28 14:08:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701746861 的委托卖单完成交易，清除redis中数据
""2019-06-28 14:08:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561701746861 的委托卖单完成交易，成交单存入数据库
""2019-06-28 14:08:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561701746861 的内容(sell):{"actualAmount":25168.46,"cancelNumber":0,"date":1561702107749,"exchangeAmount":2000,"orderId":1561701746861,"ownerId":1008,"serviceTax":6.3,"stampTax":25.2,"stockBalance":2000,"stockId":"600000","stockName":"浦发银行","time":1561702107749,"totalExchangeMoney":25200.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":0,"transferFee":0.04,"type":1}
""2019-06-28 14:08:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新持仓信息
""2019-06-28 14:08:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 持仓信息更新完毕
""2019-06-28 14:08:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702108747 的委托买单未完成交易，存入redis
""2019-06-28 14:08:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayExchange?userId=1006", parameters={masked}
""2019-06-28 14:08:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.todayExchange(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:30 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:08:30 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[{"actualAmount":1265.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561702075155,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912100,"stockId":"600000","stockName":"浦发银行","time":22074000,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64198,"transferFee":0.002,"type":0},{"actualAmount":1263.728,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561700589570,"ownerId":1006,"serviceTax":5.0,"stampTax":1.27,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":21682000,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":64193,"transferFee":0.002,"type":1},{"actualAmount":1265.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561700580023,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912100,"stockId":"600000","stockName":"浦发银行","time":20669000,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":true,"transactionOrderId":64187,"transferFee":0.002,"type":0},{"actualAmount":0.0,"cancelNumber":997185100,"date":1561680000000,"exchangeAmount":0,"orderId":1561700594528,"ownerId":1006,"serviceTax":0.0,"stampTax":0.0,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":20618000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64185,"transferFee":0.0,"type":1}]
""2019-06-28 14:08:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@133e93fc]
""2019-06-28 14:08:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:08:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:08:41 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:08:41 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2fffcaa2, com.stock.xMarket.VO.OrderVO@3f8212d8, com.stock.xMarket.VO.OrderVO@7669a6ba, com.stock.xMarket.VO.OrderVO@8552301, com.stock.xMarket.VO.OrderVO@592e4273, com.stock.xMarket.VO.OrderVO@76958f5c, com.stock.xMarket.VO.OrderVO@4d72bb42, com.stock.xMarket.VO.OrderVO@6c1ed4c6, com.stock.xMarket.VO.OrderVO@47083eec, com.stock.xMarket.VO.OrderVO@1dbdb63e, com.stock.xMarket.VO.OrderVO@45cdb660, com.stock.xMarket.VO.OrderVO@5feff2fb, com.stock.xMarket.VO.OrderVO@591658b4, com.stock.xMarket.VO.OrderVO@29ea19ee]
""2019-06-28 14:08:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@13cc405]
""2019-06-28 14:08:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:08:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:08:51 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:08:51 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@321090b8, com.stock.xMarket.VO.OrderVO@306d0c57, com.stock.xMarket.VO.OrderVO@15b7d3a1, com.stock.xMarket.VO.OrderVO@26d78478, com.stock.xMarket.VO.OrderVO@10f4454a, com.stock.xMarket.VO.OrderVO@48a3ecb7, com.stock.xMarket.VO.OrderVO@63a204d9, com.stock.xMarket.VO.OrderVO@79cca891, com.stock.xMarket.VO.OrderVO@4b206cf7, com.stock.xMarket.VO.OrderVO@1c31f770, com.stock.xMarket.VO.OrderVO@6f46ace3, com.stock.xMarket.VO.OrderVO@73d209ba, com.stock.xMarket.VO.OrderVO@3bdd94e3, com.stock.xMarket.VO.OrderVO@28446e9f]
""2019-06-28 14:08:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@723ffec0]
""2019-06-28 14:08:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayExchange?userId=1006", parameters={masked}
""2019-06-28 14:08:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.todayExchange(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:54 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:08:54 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[{"actualAmount":1265.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561702075155,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912100,"stockId":"600000","stockName":"浦发银行","time":22074000,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64198,"transferFee":0.002,"type":0},{"actualAmount":1263.728,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561700589570,"ownerId":1006,"serviceTax":5.0,"stampTax":1.27,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":21682000,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":64193,"transferFee":0.002,"type":1},{"actualAmount":1265.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561700580023,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912100,"stockId":"600000","stockName":"浦发银行","time":20669000,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":true,"transactionOrderId":64187,"transferFee":0.002,"type":0},{"actualAmount":0.0,"cancelNumber":997185100,"date":1561680000000,"exchangeAmount":0,"orderId":1561700594528,"ownerId":1006,"serviceTax":0.0,"stampTax":0.0,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":20618000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64185,"transferFee":0.0,"type":1}]
""2019-06-28 14:08:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a126ffd]
""2019-06-28 14:08:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5f784bb6]
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@26929b4c]
""2019-06-28 14:08:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:08:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:08:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:08:58 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:08:58 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2645e360, com.stock.xMarket.VO.OrderVO@763fe77a, com.stock.xMarket.VO.OrderVO@43d77ab2, com.stock.xMarket.VO.OrderVO@1866231b, com.stock.xMarket.VO.OrderVO@11318d94, com.stock.xMarket.VO.OrderVO@18bcacff, com.stock.xMarket.VO.OrderVO@604647b0, com.stock.xMarket.VO.OrderVO@4991de58, com.stock.xMarket.VO.OrderVO@54d1a7d3, com.stock.xMarket.VO.OrderVO@29f722e2, com.stock.xMarket.VO.OrderVO@7b5e8bab, com.stock.xMarket.VO.OrderVO@3cfaf986, com.stock.xMarket.VO.OrderVO@65cc3ef5, com.stock.xMarket.VO.OrderVO@753ce09c]
""2019-06-28 14:08:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:08:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7ab03e43]
""2019-06-28 14:08:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:04 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1006", parameters={masked}
""2019-06-28 14:09:04 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 14:09:04 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:09:04 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[com.stock.xMarket.VO.TransactionOrderVO@2093bc3b, com.stock.xMarket.VO.TransactionOrderVO@5889526f, com.stock.xMarket.VO.TransactionOrderVO@ce54246, com.stock.xMarket.VO.TransactionOrderVO@37927660, com.stock.xMarket.VO.TransactionOrderVO@add76cd, com.stock.xMarket.VO.TransactionOrderVO@18d557d3, com.stock.xMarket.VO.TransactionOrderVO@3e84c1fd, com.stock.xMarket.VO.TransactionOrderVO@1a81913b, com.stock.xMarket.VO.TransactionOrderVO@7b8be7b8, com.stock.xMarket.VO.TransactionOrderVO@49d24cd5, com.stock.xMarket.VO.TransactionOrderVO@5141e73b, com.stock.xMarket.VO.TransactionOrderVO@475fac61, com.stock.xMarket.VO.TransactionOrderVO@63cd3515, com.stock.xMarket.VO.TransactionOrderVO@38a2695d, com.stock.xMarket.VO.TransactionOrderVO@6684394d, com.stock.xMarket.VO.TransactionOrderVO@5c02bd58, com.stock.xMarket.VO.TransactionOrderVO@566d4e50, com.stock.xMarket.VO.TransactionOrderVO@7d2e2d41, com.stock.xMarket.VO.TransactionOrderVO@3aa72df8, com.stock.xMarket.VO.TransactionOrderVO@7306bf89, com.stock.xMarket.VO.TransactionOrderVO@4f256077, com.stock.xMarket.VO.TransactionOrderVO@43ed08f7, com.stock.xMarket.VO.TransactionOrderVO@4026359f, com.stock.xMarket.VO.TransactionOrderVO@69a20e5, com.stock.xMarket.VO.TransactionOrderVO@62d8ce99, com.stock.xMarket.VO.TransactionOrderVO@49d9c885, com.stock.xMarket.VO.TransactionOrderVO@38a286ec, com.stock.xMarket.VO.TransactionOrderVO@6f680415, com.stock.xMarket.VO.TransactionOrderVO@4be0b367, com.stock.xMarket.VO.TransactionOrderVO@4cfad77e, com.stock.xMarket.VO.TransactionOrderVO@60c3adeb, com.stock.xMarket.VO.TransactionOrderVO@4f24554a, com.stock.xMarket.VO.TransactionOrderVO@191ac42, com.stock.xMarket.VO.TransactionOrderVO@1b4ada29, com.stock.xMarket.VO.TransactionOrderVO@661b805e, com.stock.xMarket.VO.TransactionOrderVO@bf817d2, com.stock.xMarket.VO.TransactionOrderVO@7074953, com.stock.xMarket.VO.TransactionOrderVO@4ad15008, com.stock.xMarket.VO.TransactionOrderVO@70f2207c, com.stock.xMarket.VO.TransactionOrderVO@3bffff37, com.stock.xMarket.VO.TransactionOrderVO@60f74ca, com.stock.xMarket.VO.TransactionOrderVO@461e3513, com.stock.xMarket.VO.TransactionOrderVO@278e0c6c, com.stock.xMarket.VO.TransactionOrderVO@63cc49ed, com.stock.xMarket.VO.TransactionOrderVO@1e18c87a, com.stock.xMarket.VO.TransactionOrderVO@2919d007, com.stock.xMarket.VO.TransactionOrderVO@7ea34424, com.stock.xMarket.VO.TransactionOrderVO@7f21f93c, com.stock.xMarket.VO.TransactionOrderVO@27a2a5ba]
""2019-06-28 14:09:04 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:04 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@405cd0a1]
""2019-06-28 14:09:04 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:09:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:09:12 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:09:12 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6d1d14d4, com.stock.xMarket.VO.OrderVO@7a31719c, com.stock.xMarket.VO.OrderVO@7d7d804, com.stock.xMarket.VO.OrderVO@4575e314, com.stock.xMarket.VO.OrderVO@404be4da, com.stock.xMarket.VO.OrderVO@3187d0de, com.stock.xMarket.VO.OrderVO@8a92912, com.stock.xMarket.VO.OrderVO@622e1650, com.stock.xMarket.VO.OrderVO@7ddc43fb, com.stock.xMarket.VO.OrderVO@72527dbe, com.stock.xMarket.VO.OrderVO@33722b5f, com.stock.xMarket.VO.OrderVO@21fc37f7, com.stock.xMarket.VO.OrderVO@3e207ba8, com.stock.xMarket.VO.OrderVO@5f7e5e5f]
""2019-06-28 14:09:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7d74ae3c]
""2019-06-28 14:09:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@45380c0]
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7ec90a96]
""2019-06-28 14:09:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561702160613,"sellPoint":true,"tradeOrderId":1561702160613,"buyPoint":true,"exchangeAmount":100,"buyerId":1008,"sellOrderId":1561702094865,"sellerId":1006,"buyOrderId":1561702161609,"stockId":"600000","time":1561702160613,"tradePrice":12.7,"tradeType":0} 
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@16594667 
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702094865 的委托卖单完成交易，成交单存入数据库
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561702094865 的内容(sell):{"actualAmount":1263.728,"cancelNumber":0,"date":1561702160613,"exchangeAmount":100,"orderId":1561702094865,"ownerId":1006,"serviceTax":5.0,"stampTax":1.27,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561702160613,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":0,"transferFee":0.002,"type":1}
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 开始更新持仓信息
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 持仓信息更新完毕
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702161609 的委托买单完成交易，成交单存入数据库
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561702094865 的内容(buy):{"actualAmount":1275.002,"cancelNumber":0,"date":1561702160613,"exchangeAmount":100,"orderId":1561702161609,"ownerId":1008,"serviceTax":5.0,"stampTax":0.0,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561702160613,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":0,"transferFee":0.002,"type":0}
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新持仓信息
""2019-06-28 14:09:20 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 持仓信息更新完毕
""2019-06-28 14:09:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:09:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:09:22 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:09:22 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@57387053, com.stock.xMarket.VO.OrderVO@6bb96068, com.stock.xMarket.VO.OrderVO@1b20f737, com.stock.xMarket.VO.OrderVO@36b4c728, com.stock.xMarket.VO.OrderVO@221a9345, com.stock.xMarket.VO.OrderVO@2800d4e, com.stock.xMarket.VO.OrderVO@1e85db66, com.stock.xMarket.VO.OrderVO@e98c219, com.stock.xMarket.VO.OrderVO@78eef834, com.stock.xMarket.VO.OrderVO@7a06701a, com.stock.xMarket.VO.OrderVO@4ae8dad7, com.stock.xMarket.VO.OrderVO@2a85199, com.stock.xMarket.VO.OrderVO@d0836a0, com.stock.xMarket.VO.OrderVO@444711bb]
""2019-06-28 14:09:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@48755586]
""2019-06-28 14:09:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@437bf855]
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5437b2d8]
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7f1dead8]
""2019-06-28 14:09:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@11edde5a]
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@d5c32eb]
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:34 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:09:34 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:09:34 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:34 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3685fd52]
""2019-06-28 14:09:34 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@22355401]
""2019-06-28 14:09:50 [taskExecutor-17] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 开始更新股票可用余额
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1384c7d3]
""2019-06-28 14:09:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:09:50 [taskExecutor-17] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 股票可用余额更新完毕
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561702190330,"sellPoint":false,"tradeOrderId":1561702190330,"buyPoint":true,"exchangeAmount":200,"buyerId":1006,"sellOrderId":1561702191328,"sellerId":1006,"buyOrderId":1561702108747,"stockId":"600000","time":1561702190330,"tradePrice":12.6,"tradeType":1} 
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@170fd79d 
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702191328 的委托卖单未完成交易，存入redis
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 在redis中找到买单，更新信息
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702108747 的委托买单完成交易，清除redis中数据
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702108747 的委托买单完成交易，成交单存入数据库
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561702191328 的内容(buy):{"actualAmount":5045.008,"cancelNumber":0,"date":1561702190330,"exchangeAmount":400,"orderId":1561702108747,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":400,"stockId":"600000","stockName":"浦发银行","time":1561702190330,"totalExchangeMoney":5040.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":true,"transactionOrderId":0,"transferFee":0.008,"type":0}
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 开始更新持仓信息
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 持仓信息更新完毕
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561702190332,"sellPoint":false,"tradeOrderId":1561702190332,"buyPoint":true,"exchangeAmount":200,"buyerId":1008,"sellOrderId":1561702191328,"sellerId":1006,"buyOrderId":1561702136508,"stockId":"600000","time":1561702190332,"tradePrice":12.6,"tradeType":1} 
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@2171575d 
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 在redis中找到卖单，更新信息
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702191328 的委托卖单未完成交易，存入redis
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702136508 的委托买单完成交易，成交单存入数据库
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561702191328 的内容(buy):{"actualAmount":2525.004,"cancelNumber":0,"date":1561702190332,"exchangeAmount":200,"orderId":1561702136508,"ownerId":1008,"serviceTax":5.0,"stampTax":0.0,"stockBalance":200,"stockId":"600000","stockName":"浦发银行","time":1561702190332,"totalExchangeMoney":2520.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":true,"transactionOrderId":0,"transferFee":0.004,"type":0}
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新持仓信息
""2019-06-28 14:09:50 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 持仓信息更新完毕
""2019-06-28 14:10:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:10:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:02 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:10:02 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@a516206, com.stock.xMarket.VO.OrderVO@48888f29, com.stock.xMarket.VO.OrderVO@399a57b4, com.stock.xMarket.VO.OrderVO@1d9152b6, com.stock.xMarket.VO.OrderVO@1cd15250, com.stock.xMarket.VO.OrderVO@102c7724, com.stock.xMarket.VO.OrderVO@7b60b562, com.stock.xMarket.VO.OrderVO@6c734c5a, com.stock.xMarket.VO.OrderVO@7a26c056, com.stock.xMarket.VO.OrderVO@9401d61, com.stock.xMarket.VO.OrderVO@7775728e, com.stock.xMarket.VO.OrderVO@112e1a6, com.stock.xMarket.VO.OrderVO@4dfaa5a2, com.stock.xMarket.VO.OrderVO@44581269, com.stock.xMarket.VO.OrderVO@18e5f96e]
""2019-06-28 14:10:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@eec3405]
""2019-06-28 14:10:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:12 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:10:12 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@36b3b6f3, com.stock.xMarket.VO.OrderVO@5794b68, com.stock.xMarket.VO.OrderVO@18a776c9, com.stock.xMarket.VO.OrderVO@6793c349, com.stock.xMarket.VO.OrderVO@4cbce566, com.stock.xMarket.VO.OrderVO@3d1c592, com.stock.xMarket.VO.OrderVO@2063ea1f, com.stock.xMarket.VO.OrderVO@5913fcd1, com.stock.xMarket.VO.OrderVO@722fb540, com.stock.xMarket.VO.OrderVO@7f5f03c2, com.stock.xMarket.VO.OrderVO@40d32d24, com.stock.xMarket.VO.OrderVO@6e0b49b, com.stock.xMarket.VO.OrderVO@9ea84b2, com.stock.xMarket.VO.OrderVO@e2cc75e, com.stock.xMarket.VO.OrderVO@57cf71b2]
""2019-06-28 14:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@548853bc]
""2019-06-28 14:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:10:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:17 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:10:17 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@525ded66, com.stock.xMarket.VO.OrderVO@1c003323, com.stock.xMarket.VO.OrderVO@7c8104b7, com.stock.xMarket.VO.OrderVO@210a5112, com.stock.xMarket.VO.OrderVO@1c81be88, com.stock.xMarket.VO.OrderVO@1851f10, com.stock.xMarket.VO.OrderVO@75d5072b, com.stock.xMarket.VO.OrderVO@6245a42, com.stock.xMarket.VO.OrderVO@17c0c1f0, com.stock.xMarket.VO.OrderVO@3e942187, com.stock.xMarket.VO.OrderVO@63259521, com.stock.xMarket.VO.OrderVO@4777254d, com.stock.xMarket.VO.OrderVO@56a9b312, com.stock.xMarket.VO.OrderVO@49ae2859, com.stock.xMarket.VO.OrderVO@66d30d0]
""2019-06-28 14:10:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@784e201d]
""2019-06-28 14:10:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6ee9dd56]
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@592ae219]
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@f3b7c68]
""2019-06-28 14:10:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:10:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:28 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:10:28 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4a31da88, com.stock.xMarket.VO.OrderVO@7303ca1e, com.stock.xMarket.VO.OrderVO@75a41f96, com.stock.xMarket.VO.OrderVO@361cbdd3, com.stock.xMarket.VO.OrderVO@723dd402, com.stock.xMarket.VO.OrderVO@1f03b361, com.stock.xMarket.VO.OrderVO@4a8e47b8, com.stock.xMarket.VO.OrderVO@192f891f, com.stock.xMarket.VO.OrderVO@52ec3fc, com.stock.xMarket.VO.OrderVO@7b4e083, com.stock.xMarket.VO.OrderVO@3fbfd44a, com.stock.xMarket.VO.OrderVO@5a3dd5d3, com.stock.xMarket.VO.OrderVO@297fcc4b, com.stock.xMarket.VO.OrderVO@96f811f, com.stock.xMarket.VO.OrderVO@483309fc]
""2019-06-28 14:10:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7c14ce64]
""2019-06-28 14:10:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:10:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:35 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:10:35 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7b71c836, com.stock.xMarket.VO.OrderVO@6932ce35, com.stock.xMarket.VO.OrderVO@77ea8cf0]
""2019-06-28 14:10:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7dabc955]
""2019-06-28 14:10:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:10:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:38 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:10:38 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5c36992c, com.stock.xMarket.VO.OrderVO@1ab497b8, com.stock.xMarket.VO.OrderVO@6861fc08, com.stock.xMarket.VO.OrderVO@44db1fa6, com.stock.xMarket.VO.OrderVO@2c4c01e8, com.stock.xMarket.VO.OrderVO@12fb4a8e, com.stock.xMarket.VO.OrderVO@759d7565, com.stock.xMarket.VO.OrderVO@69a7625f, com.stock.xMarket.VO.OrderVO@25287dc2, com.stock.xMarket.VO.OrderVO@6d4fecd3, com.stock.xMarket.VO.OrderVO@73679a42, com.stock.xMarket.VO.OrderVO@2100abeb, com.stock.xMarket.VO.OrderVO@47a00464, com.stock.xMarket.VO.OrderVO@551b5137, com.stock.xMarket.VO.OrderVO@1a61745c]
""2019-06-28 14:10:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3e1adb08]
""2019-06-28 14:10:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:45 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:10:45 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:45 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:10:45 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@f82da83, com.stock.xMarket.VO.OrderVO@7de51440, com.stock.xMarket.VO.OrderVO@e8b5c4f]
""2019-06-28 14:10:45 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:45 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@35fbe1b7]
""2019-06-28 14:10:45 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@70c6971, com.stock.xMarket.VO.OrderVO@4bb47b52, com.stock.xMarket.VO.OrderVO@e0ca4bd, com.stock.xMarket.VO.OrderVO@79e20dfe, com.stock.xMarket.VO.OrderVO@1d41b452, com.stock.xMarket.VO.OrderVO@75473243, com.stock.xMarket.VO.OrderVO@1e85591a, com.stock.xMarket.VO.OrderVO@77e13ac9, com.stock.xMarket.VO.OrderVO@6712f343, com.stock.xMarket.VO.OrderVO@2b8b00c8, com.stock.xMarket.VO.OrderVO@1f72c12a, com.stock.xMarket.VO.OrderVO@613b977f, com.stock.xMarket.VO.OrderVO@1143e8f0, com.stock.xMarket.VO.OrderVO@62bd2750, com.stock.xMarket.VO.OrderVO@6bcfc1bc]
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@567223d5]
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7882e12d]
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@63e43d25]
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5bb1ac3c]
""2019-06-28 14:10:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:10:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:56 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:10:56 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2d4c8932, com.stock.xMarket.VO.OrderVO@30240ead, com.stock.xMarket.VO.OrderVO@4bcca15d]
""2019-06-28 14:10:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@15f9f544]
""2019-06-28 14:10:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:10:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:10:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:10:58 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:10:58 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@111b9b2e, com.stock.xMarket.VO.OrderVO@15d803ab, com.stock.xMarket.VO.OrderVO@65c5623b, com.stock.xMarket.VO.OrderVO@450d47ca, com.stock.xMarket.VO.OrderVO@88266ae, com.stock.xMarket.VO.OrderVO@5d12f94e, com.stock.xMarket.VO.OrderVO@13089c6d, com.stock.xMarket.VO.OrderVO@3c14aad1, com.stock.xMarket.VO.OrderVO@27b81ceb, com.stock.xMarket.VO.OrderVO@6daa59db, com.stock.xMarket.VO.OrderVO@3a964bf7, com.stock.xMarket.VO.OrderVO@23cd3c56, com.stock.xMarket.VO.OrderVO@44f53380, com.stock.xMarket.VO.OrderVO@7baece44, com.stock.xMarket.VO.OrderVO@736feb35]
""2019-06-28 14:10:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:10:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@398a5682]
""2019-06-28 14:10:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:11:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:06 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:11:06 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@72c6adf6, com.stock.xMarket.VO.OrderVO@433b7528, com.stock.xMarket.VO.OrderVO@14b27c07]
""2019-06-28 14:11:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5015a0a0]
""2019-06-28 14:11:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:07 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6bbce088]
""2019-06-28 14:11:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:09 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:11:09 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:09 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:11:09 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@340cb2b, com.stock.xMarket.VO.OrderVO@23f4438e, com.stock.xMarket.VO.OrderVO@132a2060, com.stock.xMarket.VO.OrderVO@1c77c68e, com.stock.xMarket.VO.OrderVO@19eb5fb8, com.stock.xMarket.VO.OrderVO@18028738, com.stock.xMarket.VO.OrderVO@5ae98d78, com.stock.xMarket.VO.OrderVO@7888631d, com.stock.xMarket.VO.OrderVO@3bddf52b, com.stock.xMarket.VO.OrderVO@37ea9e2f, com.stock.xMarket.VO.OrderVO@21fe47e7, com.stock.xMarket.VO.OrderVO@1ad5584e, com.stock.xMarket.VO.OrderVO@4ef59292, com.stock.xMarket.VO.OrderVO@2d0d7685, com.stock.xMarket.VO.OrderVO@7e1fcdbc]
""2019-06-28 14:11:09 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:09 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e38ed19]
""2019-06-28 14:11:09 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:13 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4622c0c5]
""2019-06-28 14:11:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@790137f0]
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3642c10e]
""2019-06-28 14:11:15 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:11:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:17 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:11:17 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@a7eefb0, com.stock.xMarket.VO.OrderVO@6a7aec79, com.stock.xMarket.VO.OrderVO@607a8a36]
""2019-06-28 14:11:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7e95ae9f]
""2019-06-28 14:11:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:11:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:19 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:11:19 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5322424, com.stock.xMarket.VO.OrderVO@1fb9222e, com.stock.xMarket.VO.OrderVO@129250af, com.stock.xMarket.VO.OrderVO@1583b8c9, com.stock.xMarket.VO.OrderVO@184bd59, com.stock.xMarket.VO.OrderVO@57fa5715, com.stock.xMarket.VO.OrderVO@57ed626d, com.stock.xMarket.VO.OrderVO@5f20dda9, com.stock.xMarket.VO.OrderVO@7beadd61, com.stock.xMarket.VO.OrderVO@7e2d6ff6, com.stock.xMarket.VO.OrderVO@42ef8454, com.stock.xMarket.VO.OrderVO@1bfbc435, com.stock.xMarket.VO.OrderVO@36d713fe, com.stock.xMarket.VO.OrderVO@2310980d, com.stock.xMarket.VO.OrderVO@1d63651f]
""2019-06-28 14:11:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@587cd0ea]
""2019-06-28 14:11:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@706a65ea]
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6092e00d]
""2019-06-28 14:11:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5da00f62]
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@43903442]
""2019-06-28 14:11:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:11:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:27 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:11:27 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@65176f27, com.stock.xMarket.VO.OrderVO@4686e810, com.stock.xMarket.VO.OrderVO@5b1992f3]
""2019-06-28 14:11:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e1d6d18]
""2019-06-28 14:11:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:29 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:11:29 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:29 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:11:29 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7d53d274, com.stock.xMarket.VO.OrderVO@60b018fa, com.stock.xMarket.VO.OrderVO@20e3365e, com.stock.xMarket.VO.OrderVO@30682fa6, com.stock.xMarket.VO.OrderVO@534b8bad, com.stock.xMarket.VO.OrderVO@335c3ef6, com.stock.xMarket.VO.OrderVO@a34af05, com.stock.xMarket.VO.OrderVO@7bd0a4fa, com.stock.xMarket.VO.OrderVO@74c94ece, com.stock.xMarket.VO.OrderVO@26b0752f, com.stock.xMarket.VO.OrderVO@953ba7b, com.stock.xMarket.VO.OrderVO@77da28df, com.stock.xMarket.VO.OrderVO@49dbb7d4, com.stock.xMarket.VO.OrderVO@6c67aacd, com.stock.xMarket.VO.OrderVO@78f35558]
""2019-06-28 14:11:29 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:29 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5e490649]
""2019-06-28 14:11:29 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:30 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@65666465]
""2019-06-28 14:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:33 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:11:33 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:11:33 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:33 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3ce15bcc]
""2019-06-28 14:11:33 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5c390e14]
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@56ba60f8]
""2019-06-28 14:11:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:11:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:37 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:11:37 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7a8a7c16, com.stock.xMarket.VO.OrderVO@ca5b00d, com.stock.xMarket.VO.OrderVO@9cc3c57]
""2019-06-28 14:11:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7f8ad1b4]
""2019-06-28 14:11:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:38 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7592443f]
""2019-06-28 14:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:11:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:39 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:11:39 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@15b37d3f, com.stock.xMarket.VO.OrderVO@5ee51b6c, com.stock.xMarket.VO.OrderVO@49a5437f, com.stock.xMarket.VO.OrderVO@4729d7ec, com.stock.xMarket.VO.OrderVO@49fd00b3, com.stock.xMarket.VO.OrderVO@3f355c9b, com.stock.xMarket.VO.OrderVO@5c685eb9, com.stock.xMarket.VO.OrderVO@55f7646f, com.stock.xMarket.VO.OrderVO@742e1efa, com.stock.xMarket.VO.OrderVO@616a5560, com.stock.xMarket.VO.OrderVO@7f695262, com.stock.xMarket.VO.OrderVO@11d385fc, com.stock.xMarket.VO.OrderVO@158e80f2, com.stock.xMarket.VO.OrderVO@267c1676, com.stock.xMarket.VO.OrderVO@1333aa99]
""2019-06-28 14:11:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1ec22166]
""2019-06-28 14:11:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:41 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:11:41 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:11:42 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:42 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@68facef8]
""2019-06-28 14:11:42 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5209437b]
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4ab86f43]
""2019-06-28 14:11:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:11:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:48 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:11:48 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@617cfa2d, com.stock.xMarket.VO.OrderVO@4545c34b, com.stock.xMarket.VO.OrderVO@3fad274d]
""2019-06-28 14:11:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@613e6bae]
""2019-06-28 14:11:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e43fdaf]
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5bbee07f]
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6e2f935c]
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@14c83143]
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:55 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561702315994,"sellPoint":true,"tradeOrderId":1561702315994,"buyPoint":false,"exchangeAmount":200,"buyerId":1006,"sellOrderId":1561702191328,"sellerId":1006,"buyOrderId":1561702316988,"stockId":"600000","time":1561702315994,"tradePrice":12.6,"tradeType":0} 
""2019-06-28 14:11:55 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@773e7322 
""2019-06-28 14:11:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 在redis中找到卖单，更新信息
""2019-06-28 14:11:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702191328 的委托卖单完成交易，清除redis中数据
""2019-06-28 14:11:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702191328 的委托卖单完成交易，成交单存入数据库
""2019-06-28 14:11:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561702191328 的内容(sell):{"actualAmount":7547.428,"cancelNumber":0,"date":1561702315994,"exchangeAmount":600,"orderId":1561702191328,"ownerId":1006,"serviceTax":5.0,"stampTax":7.5600000000000005,"stockBalance":600,"stockId":"600000","stockName":"浦发银行","time":1561702315994,"totalExchangeMoney":7560.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":0,"transferFee":0.012,"type":1}
""2019-06-28 14:11:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 开始更新持仓信息
""2019-06-28 14:11:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1006  股票id:600000 持仓信息更新完毕
""2019-06-28 14:11:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561702316988 的委托买单未完成交易，存入redis
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6fb42664]
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7f2aab5c]
""2019-06-28 14:11:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:57 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:57 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:57 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@77dbd397]
""2019-06-28 14:11:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:11:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:11:58 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:11:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@61c106]
""2019-06-28 14:11:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@51e9cad2, com.stock.xMarket.VO.OrderVO@3956b189, com.stock.xMarket.VO.OrderVO@33da7b31]
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@73b41a15]
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1e07575c, com.stock.xMarket.VO.OrderVO@28e8a723, com.stock.xMarket.VO.OrderVO@16bb7a05, com.stock.xMarket.VO.OrderVO@42cdd14, com.stock.xMarket.VO.OrderVO@20b5d77a, com.stock.xMarket.VO.OrderVO@4d09bdf0, com.stock.xMarket.VO.OrderVO@af8d06, com.stock.xMarket.VO.OrderVO@6209247a, com.stock.xMarket.VO.OrderVO@6c893146, com.stock.xMarket.VO.OrderVO@6c6fe71a, com.stock.xMarket.VO.OrderVO@1054902c, com.stock.xMarket.VO.OrderVO@3bd55ca8, com.stock.xMarket.VO.OrderVO@1ef35995, com.stock.xMarket.VO.OrderVO@db73a66, com.stock.xMarket.VO.OrderVO@39561e0c, com.stock.xMarket.VO.OrderVO@28f73592]
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2c4ceee8]
""2019-06-28 14:11:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:12:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:12:09 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:12:09 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@64fbc1a7, com.stock.xMarket.VO.OrderVO@6205cbfa, com.stock.xMarket.VO.OrderVO@17b211f4]
""2019-06-28 14:12:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@65117346]
""2019-06-28 14:12:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:12:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:12:10 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:12:10 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@30453468, com.stock.xMarket.VO.OrderVO@6d21dab5, com.stock.xMarket.VO.OrderVO@1d5edfbe, com.stock.xMarket.VO.OrderVO@39e6d00c, com.stock.xMarket.VO.OrderVO@2099552c, com.stock.xMarket.VO.OrderVO@438ed7f8, com.stock.xMarket.VO.OrderVO@28464318, com.stock.xMarket.VO.OrderVO@27af80ac, com.stock.xMarket.VO.OrderVO@4d758140, com.stock.xMarket.VO.OrderVO@78f1be01, com.stock.xMarket.VO.OrderVO@62356c84, com.stock.xMarket.VO.OrderVO@39c43a8e, com.stock.xMarket.VO.OrderVO@58dad377, com.stock.xMarket.VO.OrderVO@2d2e7fdb, com.stock.xMarket.VO.OrderVO@643667b6, com.stock.xMarket.VO.OrderVO@7cbe31f4]
""2019-06-28 14:12:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72f1047f]
""2019-06-28 14:12:10 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@a972f32, com.stock.xMarket.VO.OrderVO@6701e192, com.stock.xMarket.VO.OrderVO@35a20738]
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5d36e144]
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@65470ad4, com.stock.xMarket.VO.OrderVO@9823dc9, com.stock.xMarket.VO.OrderVO@6176d004, com.stock.xMarket.VO.OrderVO@73663c67, com.stock.xMarket.VO.OrderVO@2e2a8975, com.stock.xMarket.VO.OrderVO@36de950c, com.stock.xMarket.VO.OrderVO@61ff8523, com.stock.xMarket.VO.OrderVO@2338087f, com.stock.xMarket.VO.OrderVO@59234c4c, com.stock.xMarket.VO.OrderVO@1b17c491, com.stock.xMarket.VO.OrderVO@65c8c4d, com.stock.xMarket.VO.OrderVO@65c41709, com.stock.xMarket.VO.OrderVO@26c676d1, com.stock.xMarket.VO.OrderVO@3500dd4, com.stock.xMarket.VO.OrderVO@610cc717, com.stock.xMarket.VO.OrderVO@2435f860]
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@315062c9]
""2019-06-28 14:12:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:12:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:12:27 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:12:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3cbd68b7]
""2019-06-28 14:12:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2b9fa6c]
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@fc28a70]
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@670ba97b]
""2019-06-28 14:12:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:12:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:12:30 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:12:30 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@9b5837e, com.stock.xMarket.VO.OrderVO@6951a7bc, com.stock.xMarket.VO.OrderVO@52fac4c9]
""2019-06-28 14:12:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1db40cab]
""2019-06-28 14:12:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:12:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:12:31 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:12:31 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@645d5394, com.stock.xMarket.VO.OrderVO@390154e3, com.stock.xMarket.VO.OrderVO@49f899cf, com.stock.xMarket.VO.OrderVO@614e4580, com.stock.xMarket.VO.OrderVO@6f816bce, com.stock.xMarket.VO.OrderVO@5c149c91, com.stock.xMarket.VO.OrderVO@51af503d, com.stock.xMarket.VO.OrderVO@425e7dcd, com.stock.xMarket.VO.OrderVO@2665a153, com.stock.xMarket.VO.OrderVO@5eed411a, com.stock.xMarket.VO.OrderVO@75e8dc42, com.stock.xMarket.VO.OrderVO@44697727, com.stock.xMarket.VO.OrderVO@4f0d29c0, com.stock.xMarket.VO.OrderVO@7bdc54aa, com.stock.xMarket.VO.OrderVO@48e59d5f, com.stock.xMarket.VO.OrderVO@473a0b2b]
""2019-06-28 14:12:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@615f6925]
""2019-06-28 14:12:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:12:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:12:40 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:12:40 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5b57fbda, com.stock.xMarket.VO.OrderVO@15c06bcf, com.stock.xMarket.VO.OrderVO@753e3f39]
""2019-06-28 14:12:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3cc941c3]
""2019-06-28 14:12:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:41 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:12:41 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:12:41 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:12:41 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7dcb54ac, com.stock.xMarket.VO.OrderVO@d14b925, com.stock.xMarket.VO.OrderVO@1eb78273, com.stock.xMarket.VO.OrderVO@744df2ad, com.stock.xMarket.VO.OrderVO@5384b6bc, com.stock.xMarket.VO.OrderVO@7b71f078, com.stock.xMarket.VO.OrderVO@59f7417f, com.stock.xMarket.VO.OrderVO@42b40876, com.stock.xMarket.VO.OrderVO@34f377ca, com.stock.xMarket.VO.OrderVO@40f5a31c, com.stock.xMarket.VO.OrderVO@23eaeec4, com.stock.xMarket.VO.OrderVO@417fb577, com.stock.xMarket.VO.OrderVO@6e1dc7b5, com.stock.xMarket.VO.OrderVO@31d7429, com.stock.xMarket.VO.OrderVO@77752640, com.stock.xMarket.VO.OrderVO@4b9de1d4]
""2019-06-28 14:12:41 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:41 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4bbdb77d]
""2019-06-28 14:12:41 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:12:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:12:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:12:51 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:12:51 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@71fb00e, com.stock.xMarket.VO.OrderVO@543a3c2, com.stock.xMarket.VO.OrderVO@7084e899, com.stock.xMarket.VO.OrderVO@28d29b63, com.stock.xMarket.VO.OrderVO@5237d1b7, com.stock.xMarket.VO.OrderVO@4af22580, com.stock.xMarket.VO.OrderVO@1d65cc67, com.stock.xMarket.VO.OrderVO@2150452b, com.stock.xMarket.VO.OrderVO@4d8692df, com.stock.xMarket.VO.OrderVO@168360ca, com.stock.xMarket.VO.OrderVO@25b68089, com.stock.xMarket.VO.OrderVO@66cf009, com.stock.xMarket.VO.OrderVO@7f058a71, com.stock.xMarket.VO.OrderVO@720d306b, com.stock.xMarket.VO.OrderVO@63ae546b, com.stock.xMarket.VO.OrderVO@2231caf]
""2019-06-28 14:12:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:12:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@51265898]
""2019-06-28 14:12:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:13:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:13:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:13:01 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:13:01 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@51a788c1, com.stock.xMarket.VO.OrderVO@75720a0d, com.stock.xMarket.VO.OrderVO@116697db, com.stock.xMarket.VO.OrderVO@326b419b, com.stock.xMarket.VO.OrderVO@5f672697, com.stock.xMarket.VO.OrderVO@3aa07d14, com.stock.xMarket.VO.OrderVO@1fddedd4, com.stock.xMarket.VO.OrderVO@77d2002d, com.stock.xMarket.VO.OrderVO@1167d3de, com.stock.xMarket.VO.OrderVO@2816443b, com.stock.xMarket.VO.OrderVO@58d5bfa0, com.stock.xMarket.VO.OrderVO@3f610fff, com.stock.xMarket.VO.OrderVO@10b7d2ee, com.stock.xMarket.VO.OrderVO@a1a7b5f, com.stock.xMarket.VO.OrderVO@7fc7fd03, com.stock.xMarket.VO.OrderVO@48ee1bf3]
""2019-06-28 14:13:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:13:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@666090a2]
""2019-06-28 14:13:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:13:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:13:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:13:11 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:13:11 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@58f804f7, com.stock.xMarket.VO.OrderVO@4f631dd1, com.stock.xMarket.VO.OrderVO@608141bc, com.stock.xMarket.VO.OrderVO@2b2e0786, com.stock.xMarket.VO.OrderVO@33e961a8, com.stock.xMarket.VO.OrderVO@64337f91, com.stock.xMarket.VO.OrderVO@e555e0a, com.stock.xMarket.VO.OrderVO@551c6a71, com.stock.xMarket.VO.OrderVO@2d80b55b, com.stock.xMarket.VO.OrderVO@52b0988d, com.stock.xMarket.VO.OrderVO@763139df, com.stock.xMarket.VO.OrderVO@40489a8a, com.stock.xMarket.VO.OrderVO@68cad5b5, com.stock.xMarket.VO.OrderVO@3e684cd1, com.stock.xMarket.VO.OrderVO@41687502, com.stock.xMarket.VO.OrderVO@45f03b6f]
""2019-06-28 14:13:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:13:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7b293919]
""2019-06-28 14:13:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:13:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:13:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:13:22 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:13:22 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1cfffdc5, com.stock.xMarket.VO.OrderVO@2a62b8a8, com.stock.xMarket.VO.OrderVO@9ae9b7c, com.stock.xMarket.VO.OrderVO@71cf264b, com.stock.xMarket.VO.OrderVO@12bdec62, com.stock.xMarket.VO.OrderVO@2d25b165, com.stock.xMarket.VO.OrderVO@502dbac6, com.stock.xMarket.VO.OrderVO@58d833f6, com.stock.xMarket.VO.OrderVO@25fb1a73, com.stock.xMarket.VO.OrderVO@25553930, com.stock.xMarket.VO.OrderVO@18935cd6, com.stock.xMarket.VO.OrderVO@14d8bb1, com.stock.xMarket.VO.OrderVO@7c182169, com.stock.xMarket.VO.OrderVO@70880b63, com.stock.xMarket.VO.OrderVO@72ff9c48, com.stock.xMarket.VO.OrderVO@1f8281a5]
""2019-06-28 14:13:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:13:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@222cf855]
""2019-06-28 14:13:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:13:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:13:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:13:33 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:13:33 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3a15a165, com.stock.xMarket.VO.OrderVO@769e16c6, com.stock.xMarket.VO.OrderVO@38027209, com.stock.xMarket.VO.OrderVO@13b14cf, com.stock.xMarket.VO.OrderVO@16b28304, com.stock.xMarket.VO.OrderVO@101c9f32, com.stock.xMarket.VO.OrderVO@3b253502, com.stock.xMarket.VO.OrderVO@6261d3c5, com.stock.xMarket.VO.OrderVO@60c9d62e, com.stock.xMarket.VO.OrderVO@14d8300a, com.stock.xMarket.VO.OrderVO@6c78ab6, com.stock.xMarket.VO.OrderVO@6a548e50, com.stock.xMarket.VO.OrderVO@44025d92, com.stock.xMarket.VO.OrderVO@110f6d78, com.stock.xMarket.VO.OrderVO@2ba7c7d5, com.stock.xMarket.VO.OrderVO@654feaff]
""2019-06-28 14:13:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:13:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@33f7d509]
""2019-06-28 14:13:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:13:43 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:13:43 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:13:43 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:13:43 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@64b81336, com.stock.xMarket.VO.OrderVO@67f85cfa, com.stock.xMarket.VO.OrderVO@3983d1c, com.stock.xMarket.VO.OrderVO@5ac60366, com.stock.xMarket.VO.OrderVO@7ec39aab, com.stock.xMarket.VO.OrderVO@5bf91605, com.stock.xMarket.VO.OrderVO@19cba0bb, com.stock.xMarket.VO.OrderVO@73fc5dd7, com.stock.xMarket.VO.OrderVO@110887c1, com.stock.xMarket.VO.OrderVO@252e2db, com.stock.xMarket.VO.OrderVO@46584452, com.stock.xMarket.VO.OrderVO@57dbbbab, com.stock.xMarket.VO.OrderVO@238181e, com.stock.xMarket.VO.OrderVO@176966b8, com.stock.xMarket.VO.OrderVO@1397cad3, com.stock.xMarket.VO.OrderVO@199b3de9]
""2019-06-28 14:13:43 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:13:43 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5ba13e2c]
""2019-06-28 14:13:43 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:13:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:13:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:13:54 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:13:54 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7ef17e11, com.stock.xMarket.VO.OrderVO@e736779, com.stock.xMarket.VO.OrderVO@1da9efd5, com.stock.xMarket.VO.OrderVO@7021af30, com.stock.xMarket.VO.OrderVO@55556d3, com.stock.xMarket.VO.OrderVO@1088b1af, com.stock.xMarket.VO.OrderVO@428d332c, com.stock.xMarket.VO.OrderVO@3fa84c62, com.stock.xMarket.VO.OrderVO@10e4668a, com.stock.xMarket.VO.OrderVO@4534b8f0, com.stock.xMarket.VO.OrderVO@6e0bf729, com.stock.xMarket.VO.OrderVO@13bd6dd6, com.stock.xMarket.VO.OrderVO@20de891d, com.stock.xMarket.VO.OrderVO@40cd56ce, com.stock.xMarket.VO.OrderVO@714e5341, com.stock.xMarket.VO.OrderVO@9655363]
""2019-06-28 14:13:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:13:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5da7b533]
""2019-06-28 14:13:54 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:13:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:13:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:13:58 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:13:58 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1336689d, com.stock.xMarket.VO.OrderVO@2c0bb5d0, com.stock.xMarket.VO.OrderVO@117cbf83]
""2019-06-28 14:13:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:13:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2eafc91e]
""2019-06-28 14:13:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:14:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:04 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:14:04 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@77c27814, com.stock.xMarket.VO.OrderVO@14151166, com.stock.xMarket.VO.OrderVO@6243e250, com.stock.xMarket.VO.OrderVO@76c731b1, com.stock.xMarket.VO.OrderVO@1221e5a5, com.stock.xMarket.VO.OrderVO@2e0348a6, com.stock.xMarket.VO.OrderVO@532f7e54, com.stock.xMarket.VO.OrderVO@1c2a8739, com.stock.xMarket.VO.OrderVO@1bb45d4, com.stock.xMarket.VO.OrderVO@35c96b3d, com.stock.xMarket.VO.OrderVO@1d3c7e0e, com.stock.xMarket.VO.OrderVO@556731df, com.stock.xMarket.VO.OrderVO@ea95b42, com.stock.xMarket.VO.OrderVO@70c75929, com.stock.xMarket.VO.OrderVO@e759531, com.stock.xMarket.VO.OrderVO@6270b4e9]
""2019-06-28 14:14:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@26c790ae]
""2019-06-28 14:14:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:14:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:14 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:14:14 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@779b4d55, com.stock.xMarket.VO.OrderVO@7ee3356c, com.stock.xMarket.VO.OrderVO@4791139e, com.stock.xMarket.VO.OrderVO@75ece5c0, com.stock.xMarket.VO.OrderVO@58b0efcd, com.stock.xMarket.VO.OrderVO@3f9ff9e2, com.stock.xMarket.VO.OrderVO@70dd106c, com.stock.xMarket.VO.OrderVO@628d3952, com.stock.xMarket.VO.OrderVO@3d9c6c49, com.stock.xMarket.VO.OrderVO@7d0cd2f1, com.stock.xMarket.VO.OrderVO@65cae34c, com.stock.xMarket.VO.OrderVO@6e06010e, com.stock.xMarket.VO.OrderVO@3026c6a3, com.stock.xMarket.VO.OrderVO@2b26010c, com.stock.xMarket.VO.OrderVO@19c447a7, com.stock.xMarket.VO.OrderVO@47142be0]
""2019-06-28 14:14:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4101ee7f]
""2019-06-28 14:14:14 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:19 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:14:19 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:19 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:14:19 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6e71c55b, com.stock.xMarket.VO.OrderVO@4ac7d18a, com.stock.xMarket.VO.OrderVO@2936eb7a]
""2019-06-28 14:14:19 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:19 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5046c142]
""2019-06-28 14:14:19 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:14:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:24 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:14:24 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@b926f7, com.stock.xMarket.VO.OrderVO@5a3456de, com.stock.xMarket.VO.OrderVO@304123ec, com.stock.xMarket.VO.OrderVO@aa20e5c, com.stock.xMarket.VO.OrderVO@43e50f61, com.stock.xMarket.VO.OrderVO@3b1f2365, com.stock.xMarket.VO.OrderVO@2f839a9, com.stock.xMarket.VO.OrderVO@18b21744, com.stock.xMarket.VO.OrderVO@73478d34, com.stock.xMarket.VO.OrderVO@31818c32, com.stock.xMarket.VO.OrderVO@72f7deda, com.stock.xMarket.VO.OrderVO@7a77fff7, com.stock.xMarket.VO.OrderVO@3516f3a0, com.stock.xMarket.VO.OrderVO@84b092c, com.stock.xMarket.VO.OrderVO@440617f1, com.stock.xMarket.VO.OrderVO@14bc0c1]
""2019-06-28 14:14:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@342b8bb]
""2019-06-28 14:14:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:14:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:29 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:14:29 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2e36c82f, com.stock.xMarket.VO.OrderVO@19ddbf3c, com.stock.xMarket.VO.OrderVO@20af339d]
""2019-06-28 14:14:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f577fa8]
""2019-06-28 14:14:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:14:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:35 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:14:35 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1e44b65f, com.stock.xMarket.VO.OrderVO@53b4f66e, com.stock.xMarket.VO.OrderVO@498e393e, com.stock.xMarket.VO.OrderVO@62dba3c4, com.stock.xMarket.VO.OrderVO@5916178e, com.stock.xMarket.VO.OrderVO@2d659d44, com.stock.xMarket.VO.OrderVO@159a161f, com.stock.xMarket.VO.OrderVO@2ae042eb, com.stock.xMarket.VO.OrderVO@43a38a5e, com.stock.xMarket.VO.OrderVO@422da0d3, com.stock.xMarket.VO.OrderVO@7427c67, com.stock.xMarket.VO.OrderVO@2f9d817e, com.stock.xMarket.VO.OrderVO@70b31fa9, com.stock.xMarket.VO.OrderVO@5f370254, com.stock.xMarket.VO.OrderVO@4b02fc91, com.stock.xMarket.VO.OrderVO@8d712fe]
""2019-06-28 14:14:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@60710a1a]
""2019-06-28 14:14:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@174acd91]
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7a1cf46]
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@77f6f36f]
""2019-06-28 14:14:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:14:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:14:38 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:14:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@51a6036c]
""2019-06-28 14:14:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:14:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:40 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:14:40 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2d53cdd0]
""2019-06-28 14:14:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@75a48d3c]
""2019-06-28 14:14:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:14:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:45 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:14:45 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@200956, com.stock.xMarket.VO.OrderVO@3eef04b1, com.stock.xMarket.VO.OrderVO@2cca121b, com.stock.xMarket.VO.OrderVO@5d9e91f2, com.stock.xMarket.VO.OrderVO@5df449ae, com.stock.xMarket.VO.OrderVO@1bf8042d, com.stock.xMarket.VO.OrderVO@67de8783]
""2019-06-28 14:14:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e668b8b]
""2019-06-28 14:14:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:50 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:14:50 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:50 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:14:50 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@29ea91c6]
""2019-06-28 14:14:50 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:50 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3ece4778]
""2019-06-28 14:14:50 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@286f7c02]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@288143c]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@55d92d05, com.stock.xMarket.VO.OrderVO@f488fe0, com.stock.xMarket.VO.OrderVO@13e3204b, com.stock.xMarket.VO.OrderVO@4a33bd3c, com.stock.xMarket.VO.OrderVO@569e107a, com.stock.xMarket.VO.OrderVO@1de2b2c6, com.stock.xMarket.VO.OrderVO@17893849]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4004bdd9]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2a4d5c33]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5f5002f8]
""2019-06-28 14:14:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:14:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:14:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:14:57 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:14:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:14:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72d3c051]
""2019-06-28 14:14:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:15:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:15:01 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:15:01 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@97d0d93]
""2019-06-28 14:15:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@183c485]
""2019-06-28 14:15:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:15:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:15:05 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:15:05 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@155801ec, com.stock.xMarket.VO.OrderVO@233fd971, com.stock.xMarket.VO.OrderVO@501e7860, com.stock.xMarket.VO.OrderVO@17dc58f6, com.stock.xMarket.VO.OrderVO@425e7c80, com.stock.xMarket.VO.OrderVO@1ff7d1eb, com.stock.xMarket.VO.OrderVO@3c89770d]
""2019-06-28 14:15:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@49e79382]
""2019-06-28 14:15:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:15:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:15:11 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:15:11 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@77652e77]
""2019-06-28 14:15:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@40bea93]
""2019-06-28 14:15:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:14 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:15:14 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:15:14 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:15:14 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7bdb473f, com.stock.xMarket.VO.OrderVO@603fb752, com.stock.xMarket.VO.OrderVO@82e0ad8, com.stock.xMarket.VO.OrderVO@7a49e32c, com.stock.xMarket.VO.OrderVO@5b0aa1e5, com.stock.xMarket.VO.OrderVO@461208f1, com.stock.xMarket.VO.OrderVO@3e92a221]
""2019-06-28 14:15:14 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:14 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@b77765c]
""2019-06-28 14:15:14 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:15:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:15:22 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:15:22 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@295d0b9]
""2019-06-28 14:15:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@79abb9b1]
""2019-06-28 14:15:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:15:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:15:25 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:15:25 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@768c23bf, com.stock.xMarket.VO.OrderVO@1dfa77cc, com.stock.xMarket.VO.OrderVO@7132f1c3, com.stock.xMarket.VO.OrderVO@10484a2b, com.stock.xMarket.VO.OrderVO@7ce0246, com.stock.xMarket.VO.OrderVO@49445164, com.stock.xMarket.VO.OrderVO@2f9e1d66]
""2019-06-28 14:15:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7dd503ac]
""2019-06-28 14:15:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1006", parameters={masked}
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[com.stock.xMarket.VO.TransactionOrderVO@55593db7, com.stock.xMarket.VO.TransactionOrderVO@48b82b0f, com.stock.xMarket.VO.TransactionOrderVO@3a1ee46a, com.stock.xMarket.VO.TransactionOrderVO@3f6d3994, com.stock.xMarket.VO.TransactionOrderVO@23c51f4b, com.stock.xMarket.VO.TransactionOrderVO@2aacb86f, com.stock.xMarket.VO.TransactionOrderVO@67dc34e4, com.stock.xMarket.VO.TransactionOrderVO@31ab0012, com.stock.xMarket.VO.TransactionOrderVO@3a1f6e2b, com.stock.xMarket.VO.TransactionOrderVO@753fc6c7, com.stock.xMarket.VO.TransactionOrderVO@73c2a790, com.stock.xMarket.VO.TransactionOrderVO@1a80826a, com.stock.xMarket.VO.TransactionOrderVO@5b2fd927, com.stock.xMarket.VO.TransactionOrderVO@50ad357b, com.stock.xMarket.VO.TransactionOrderVO@36b5e6d9, com.stock.xMarket.VO.TransactionOrderVO@2838b1b7, com.stock.xMarket.VO.TransactionOrderVO@d7ba376, com.stock.xMarket.VO.TransactionOrderVO@3444494f, com.stock.xMarket.VO.TransactionOrderVO@2ddee230, com.stock.xMarket.VO.TransactionOrderVO@40065b35, com.stock.xMarket.VO.TransactionOrderVO@10b62050, com.stock.xMarket.VO.TransactionOrderVO@6ae0d38, com.stock.xMarket.VO.TransactionOrderVO@5cbbb0bf, com.stock.xMarket.VO.TransactionOrderVO@2e1697ee, com.stock.xMarket.VO.TransactionOrderVO@f8386dc, com.stock.xMarket.VO.TransactionOrderVO@79b28dd9, com.stock.xMarket.VO.TransactionOrderVO@780de418, com.stock.xMarket.VO.TransactionOrderVO@623ea510, com.stock.xMarket.VO.TransactionOrderVO@71986aed, com.stock.xMarket.VO.TransactionOrderVO@1c29ed42, com.stock.xMarket.VO.TransactionOrderVO@b13f7fb, com.stock.xMarket.VO.TransactionOrderVO@1c12d5ac, com.stock.xMarket.VO.TransactionOrderVO@2eef0bc1, com.stock.xMarket.VO.TransactionOrderVO@7d7fa0a3, com.stock.xMarket.VO.TransactionOrderVO@69c72cd8, com.stock.xMarket.VO.TransactionOrderVO@63722bf9, com.stock.xMarket.VO.TransactionOrderVO@35159555, com.stock.xMarket.VO.TransactionOrderVO@35ef41ec, com.stock.xMarket.VO.TransactionOrderVO@651e0a65, com.stock.xMarket.VO.TransactionOrderVO@17c1c8dc, com.stock.xMarket.VO.TransactionOrderVO@e67584c, com.stock.xMarket.VO.TransactionOrderVO@41c8884d, com.stock.xMarket.VO.TransactionOrderVO@5410ff33, com.stock.xMarket.VO.TransactionOrderVO@4d0e5a45, com.stock.xMarket.VO.TransactionOrderVO@791fde90, com.stock.xMarket.VO.TransactionOrderVO@7c10bb1e, com.stock.xMarket.VO.TransactionOrderVO@2f2a2ac8, com.stock.xMarket.VO.TransactionOrderVO@1049811a, com.stock.xMarket.VO.TransactionOrderVO@172526dd, com.stock.xMarket.VO.TransactionOrderVO@6e94a76c, com.stock.xMarket.VO.TransactionOrderVO@1096bc1c, com.stock.xMarket.VO.TransactionOrderVO@4c0bae45]
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72266ad7]
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7e589d8a]
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@e00ade8]
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1ee8b64f]
""2019-06-28 14:15:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:32 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:15:32 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:15:32 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:15:32 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@59b284a6]
""2019-06-28 14:15:32 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:32 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@538077c1]
""2019-06-28 14:15:32 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3b83ebc4]
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1290b844]
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@57ceb5e]
""2019-06-28 14:15:38 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:43 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:15:43 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:15:43 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:15:43 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7b63de55]
""2019-06-28 14:15:43 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:43 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@78826a17]
""2019-06-28 14:15:43 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayExchange?userId=1006", parameters={masked}
""2019-06-28 14:15:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.todayExchange(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:15:48 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:15:48 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[{"actualAmount":7547.428,"cancelNumber":0,"date":1561680000000,"exchangeAmount":600,"orderId":1561702191328,"ownerId":1006,"serviceTax":5.0,"stampTax":7.5600000000000005,"stockBalance":999911800,"stockId":"600000","stockName":"浦发银行","time":22315000,"totalExchangeMoney":7560.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64204,"transferFee":0.012,"type":1},{"actualAmount":5045.008,"cancelNumber":0,"date":1561680000000,"exchangeAmount":400,"orderId":1561702108747,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912400,"stockId":"600000","stockName":"浦发银行","time":22190000,"totalExchangeMoney":5040.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":true,"transactionOrderId":64202,"transferFee":0.008,"type":0},{"actualAmount":1263.728,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561702094865,"ownerId":1006,"serviceTax":5.0,"stampTax":1.27,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":22160000,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":64200,"transferFee":0.002,"type":1},{"actualAmount":1265.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561702075155,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912100,"stockId":"600000","stockName":"浦发银行","time":22074000,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64198,"transferFee":0.002,"type":0},{"actualAmount":1263.728,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561700589570,"ownerId":1006,"serviceTax":5.0,"stampTax":1.27,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":21682000,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":64193,"transferFee":0.002,"type":1},{"actualAmount":1265.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561700580023,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912100,"stockId":"600000","stockName":"浦发银行","time":20669000,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":true,"transactionOrderId":64187,"transferFee":0.002,"type":0},{"actualAmount":0.0,"cancelNumber":997185100,"date":1561680000000,"exchangeAmount":0,"orderId":1561700594528,"ownerId":1006,"serviceTax":0.0,"stampTax":0.0,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":20618000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64185,"transferFee":0.0,"type":1}]
""2019-06-28 14:15:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2469a569]
""2019-06-28 14:15:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:15:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:15:53 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:15:53 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@64da2072]
""2019-06-28 14:15:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3d5eec41]
""2019-06-28 14:15:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1006", parameters={masked}
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[com.stock.xMarket.VO.TransactionOrderVO@34c19323, com.stock.xMarket.VO.TransactionOrderVO@6b67c5b5, com.stock.xMarket.VO.TransactionOrderVO@4e9d6c2e, com.stock.xMarket.VO.TransactionOrderVO@3f7ee443, com.stock.xMarket.VO.TransactionOrderVO@79e2004, com.stock.xMarket.VO.TransactionOrderVO@5281072f, com.stock.xMarket.VO.TransactionOrderVO@7758ed4d, com.stock.xMarket.VO.TransactionOrderVO@3f4c4319, com.stock.xMarket.VO.TransactionOrderVO@4924daf4, com.stock.xMarket.VO.TransactionOrderVO@13c60480, com.stock.xMarket.VO.TransactionOrderVO@2344a130, com.stock.xMarket.VO.TransactionOrderVO@7e4d7aca, com.stock.xMarket.VO.TransactionOrderVO@1151fc8d, com.stock.xMarket.VO.TransactionOrderVO@32100823, com.stock.xMarket.VO.TransactionOrderVO@345b6270, com.stock.xMarket.VO.TransactionOrderVO@21d5d51b, com.stock.xMarket.VO.TransactionOrderVO@3f7ef038, com.stock.xMarket.VO.TransactionOrderVO@d9db6e4, com.stock.xMarket.VO.TransactionOrderVO@623a0dc5, com.stock.xMarket.VO.TransactionOrderVO@6dc87194, com.stock.xMarket.VO.TransactionOrderVO@25ffa325, com.stock.xMarket.VO.TransactionOrderVO@45b51be8, com.stock.xMarket.VO.TransactionOrderVO@775362be, com.stock.xMarket.VO.TransactionOrderVO@59b9e911, com.stock.xMarket.VO.TransactionOrderVO@1878f88, com.stock.xMarket.VO.TransactionOrderVO@6c00ae0b, com.stock.xMarket.VO.TransactionOrderVO@2a77a7, com.stock.xMarket.VO.TransactionOrderVO@164de7d2, com.stock.xMarket.VO.TransactionOrderVO@2b0bc15c, com.stock.xMarket.VO.TransactionOrderVO@421242c0, com.stock.xMarket.VO.TransactionOrderVO@11d6926a, com.stock.xMarket.VO.TransactionOrderVO@685c94f5, com.stock.xMarket.VO.TransactionOrderVO@1d28a983, com.stock.xMarket.VO.TransactionOrderVO@4dfcfca4, com.stock.xMarket.VO.TransactionOrderVO@681c72b3, com.stock.xMarket.VO.TransactionOrderVO@64eba879, com.stock.xMarket.VO.TransactionOrderVO@3c5761d6, com.stock.xMarket.VO.TransactionOrderVO@16e4a324, com.stock.xMarket.VO.TransactionOrderVO@1d66d2a1, com.stock.xMarket.VO.TransactionOrderVO@24770914, com.stock.xMarket.VO.TransactionOrderVO@23a9859d, com.stock.xMarket.VO.TransactionOrderVO@10e7ef4f, com.stock.xMarket.VO.TransactionOrderVO@3bbfc428, com.stock.xMarket.VO.TransactionOrderVO@271c45e2, com.stock.xMarket.VO.TransactionOrderVO@4876a9f1, com.stock.xMarket.VO.TransactionOrderVO@67c4ba27, com.stock.xMarket.VO.TransactionOrderVO@221fbc73, com.stock.xMarket.VO.TransactionOrderVO@67e9ce87, com.stock.xMarket.VO.TransactionOrderVO@1aaddaaa, com.stock.xMarket.VO.TransactionOrderVO@587a4e5a, com.stock.xMarket.VO.TransactionOrderVO@7d98d02, com.stock.xMarket.VO.TransactionOrderVO@2e6df688]
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5a611165]
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a3226ba]
""2019-06-28 14:15:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5cabb962]
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@50fb6ed9]
""2019-06-28 14:15:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:16:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:16:04 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:16:04 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5bbcfd26]
""2019-06-28 14:16:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@777b1e8e]
""2019-06-28 14:16:04 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:05 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:16:05 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:16:05 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:16:05 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:05 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@121fd582]
""2019-06-28 14:16:05 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@537f2e80]
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4d29765c]
""2019-06-28 14:16:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5a1dc222]
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@14cd2de6]
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3613500c]
""2019-06-28 14:16:14 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e1970a6]
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2820f389]
""2019-06-28 14:16:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@138d3cb5]
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3dae8d40]
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@58c4830]
""2019-06-28 14:16:21 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:16:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:16:24 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:16:24 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@56aa2164]
""2019-06-28 14:16:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@56b133a0]
""2019-06-28 14:16:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:16:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:16:35 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:16:35 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1bc87954]
""2019-06-28 14:16:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3210da54]
""2019-06-28 14:16:35 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:16:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:16:45 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:16:45 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@b20daf6]
""2019-06-28 14:16:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@77c200d3]
""2019-06-28 14:16:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:16:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:16:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:16:56 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:16:56 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6be4d5d9]
""2019-06-28 14:16:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:16:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@489c514e]
""2019-06-28 14:16:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:17:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:17:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:17:06 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:17:06 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4eb012c2]
""2019-06-28 14:17:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:17:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@19814825]
""2019-06-28 14:17:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:17:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:17:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:17:16 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:17:16 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5790f045]
""2019-06-28 14:17:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:17:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@55ceffc]
""2019-06-28 14:17:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:17:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:17:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:17:27 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:17:27 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2b8f5d95]
""2019-06-28 14:17:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:17:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@28c601db]
""2019-06-28 14:17:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:17:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:17:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:17:37 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:17:37 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@f164a69]
""2019-06-28 14:17:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:17:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@724ea154]
""2019-06-28 14:17:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:17:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:17:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:17:48 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:17:48 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2eba7ba2]
""2019-06-28 14:17:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:17:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3dceaad3]
""2019-06-28 14:17:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6bc45628]
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@22c8644]
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5c62ac25]
""2019-06-28 14:17:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:17:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:17:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:17:58 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:17:58 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@19883084]
""2019-06-28 14:17:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:17:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@76307cf1]
""2019-06-28 14:17:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:18:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:18:09 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:18:09 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@50eb8b46]
""2019-06-28 14:18:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2fcea008]
""2019-06-28 14:18:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:19 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:18:19 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:18:19 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:18:19 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@42cf3511]
""2019-06-28 14:18:19 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:19 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2378ba2c]
""2019-06-28 14:18:19 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@10bc6ee7]
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1f4963a3]
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71444de5]
""2019-06-28 14:18:23 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:29 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:18:29 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:18:29 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:18:30 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6853611b]
""2019-06-28 14:18:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@20d364d6]
""2019-06-28 14:18:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:18:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:18:40 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:18:40 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@230ef6cc]
""2019-06-28 14:18:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@45eaecf1]
""2019-06-28 14:18:40 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@42b52c94]
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5b4e9422]
""2019-06-28 14:18:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=000725", parameters={masked}
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=000725", parameters={masked}
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：000725
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] ERROR c.s.x.controller.KlineController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] ERROR c.s.x.controller.BaseApiController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@57082c2e]
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e217edb]
""2019-06-28 14:18:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=000725&userId=1006", parameters={masked}
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=000725", parameters={masked}
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@54edde8e]
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5f56ea1c]
""2019-06-28 14:18:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:50 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:18:50 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:18:50 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:18:50 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5b7acc7d]
""2019-06-28 14:18:50 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:50 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@186c109d]
""2019-06-28 14:18:50 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=000725", parameters={masked}
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=000725", parameters={masked}
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：000725
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] ERROR c.s.x.controller.KlineController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] ERROR c.s.x.controller.BaseApiController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@42116263]
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@ca18ca9]
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=000725&userId=1006", parameters={masked}
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2c962916]
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=000725", parameters={masked}
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1a609396]
""2019-06-28 14:18:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1006", parameters={masked}
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1006", parameters={masked}
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1006", parameters={masked}
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1006
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] ERROR c.s.x.controller.KlineController - 用户资金曲线数据获取失败，没有查询到此用户的历史资金信息
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] ERROR c.s.x.controller.BaseApiController - 暂无资金曲线
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1c48fe60]
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 14:18:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4f3ab3a1]
""2019-06-28 14:18:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@29d011a3]
""2019-06-28 14:18:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4caf9067]
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@44110d31]
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@572f84d2]
""2019-06-28 14:18:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:19:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:19:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:19:01 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:19:01 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@684550c7]
""2019-06-28 14:19:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:19:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f51b779]
""2019-06-28 14:19:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7ee2a241]
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3e969506]
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7c982838]
""2019-06-28 14:19:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:19:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:19:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:19:11 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:19:11 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1892b81a]
""2019-06-28 14:19:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:19:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5e2bc09d]
""2019-06-28 14:19:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:19:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:19:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:19:22 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:19:22 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@165390f1]
""2019-06-28 14:19:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:19:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7e32098f]
""2019-06-28 14:19:22 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:19:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:19:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:19:32 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:19:32 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@79b13370]
""2019-06-28 14:19:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:19:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e24b60d]
""2019-06-28 14:19:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:19:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:19:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:19:42 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:19:42 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6deebb2]
""2019-06-28 14:19:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:19:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@159ec74c]
""2019-06-28 14:19:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:19:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:19:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:19:53 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:19:53 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@cf92417]
""2019-06-28 14:19:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:19:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7e8e900e]
""2019-06-28 14:19:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:20:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:20:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:20:03 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:20:03 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@357ac999]
""2019-06-28 14:20:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:20:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@63a4df6a]
""2019-06-28 14:20:03 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:20:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:20:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:20:14 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:20:14 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@50bffd79]
""2019-06-28 14:20:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:20:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@17dfd630]
""2019-06-28 14:20:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:20:24 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:20:24 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:20:24 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:20:24 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1d521505]
""2019-06-28 14:20:24 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:20:24 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@50589359]
""2019-06-28 14:20:24 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:20:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:20:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:20:35 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:20:35 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@40fe4f70]
""2019-06-28 14:20:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:20:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@c79cf9e]
""2019-06-28 14:20:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:20:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:20:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:20:45 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:20:45 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@b86f471]
""2019-06-28 14:20:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:20:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7ce1eed8]
""2019-06-28 14:20:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:20:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:20:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:20:55 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:20:55 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2cc17354]
""2019-06-28 14:20:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:20:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@152e4ad4]
""2019-06-28 14:20:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:21:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:21:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:21:06 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:21:06 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5ddacc98]
""2019-06-28 14:21:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:21:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e0ea6cf]
""2019-06-28 14:21:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:21:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:21:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:21:16 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:21:16 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@54ca554a]
""2019-06-28 14:21:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:21:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@9f2e6cb]
""2019-06-28 14:21:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:21:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:21:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:21:27 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:21:27 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@54398efc]
""2019-06-28 14:21:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:21:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@424b6aee]
""2019-06-28 14:21:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:21:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:21:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:21:37 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:21:37 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4c5ed7e2]
""2019-06-28 14:21:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:21:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4029c5fa]
""2019-06-28 14:21:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@16075256]
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@471842ae]
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d5f704d]
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@374aa8d5]
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@727266a6]
""2019-06-28 14:21:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:21:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1011", parameters={masked}
""2019-06-28 14:21:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:21:58 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1011
""2019-06-28 14:21:58 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1aa22eb1]
""2019-06-28 14:21:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:21:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@764f8a3c]
""2019-06-28 14:21:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:22:01 [RMI TCP Connection(62)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2019-06-28 14:22:01 [RMI TCP Connection(62)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Waiting for workers to finish.
""2019-06-28 14:22:01 [RMI TCP Connection(62)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Successfully waited for workers to finish.
""2019-06-28 14:22:01 [RMI TCP Connection(62)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
""2019-06-28 14:22:01 [RMI TCP Connection(62)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 14:22:02 [RMI TCP Connection(62)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 14:22:02 [RMI TCP Connection(62)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2019-06-28 14:22:02 [RMI TCP Connection(62)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2019-06-28 14:22:09 [main] INFO  com.stock.xMarket.XMarketApplication - Starting XMarketApplication on MSI with PID 18680 (D:\Workspaces\GitHub\xMarket\target\classes started by msi- in D:\Workspaces\GitHub\xMarket)
""2019-06-28 14:22:09 [main] INFO  com.stock.xMarket.XMarketApplication - No active profile set, falling back to default profiles: default
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64ms. Found 15 repository interfaces.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HistoryHoldPositionRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HoldPositionRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.IndexRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.NewsRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.OrderRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.ScheduledTaskRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.SelfSelectStockRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockHistoryRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TimeShareRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TradeOrderRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TransactionOrderRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundHistoryRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserRepository.
""2019-06-28 14:22:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
""2019-06-28 14:22:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jpaConfiguration' of type [com.stock.xMarket.config.JpaConfiguration$$EnhancerBySpringCGLIB$$c7c69c9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 14:22:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$521e00af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 14:22:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8090 (http)
""2019-06-28 14:22:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2019-06-28 14:22:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.19]
""2019-06-28 14:22:10 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2019-06-28 14:22:10 [main] DEBUG o.s.web.context.ContextLoader - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
""2019-06-28 14:22:10 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1128 ms
""2019-06-28 14:22:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2019-06-28 14:22:10 [main] WARN  c.z.hikari.util.DriverDataSource - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
""2019-06-28 14:22:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2019-06-28 14:22:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 14:22:12 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 start
""2019-06-28 14:22:12 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 end
""2019-06-28 14:22:12 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 14:22:12 [main] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
""2019-06-28 14:22:12 [main] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
""2019-06-28 14:22:13 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/**/favicon.ico] in 'faviconHandlerMapping'
""2019-06-28 14:22:13 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2019-06-28 14:22:13 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 46 mappings in 'requestMappingHandlerMapping'
""2019-06-28 14:22:13 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2019-06-28 14:22:13 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
""2019-06-28 14:22:13 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
""2019-06-28 14:22:13 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#577bfadb:0/SimpleConnection@4ae5ddc0 [delegate=amqp://zhang@127.0.0.1:5672/, localPort= 53275]
""2019-06-28 14:22:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path ''
""2019-06-28 14:22:13 [main] INFO  com.stock.xMarket.XMarketApplication - Started XMarketApplication in 4.599 seconds (JVM running for 5.087)
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@366d77fe, com.stock.xMarket.VO.OrderVO@7b6b9f65, com.stock.xMarket.VO.OrderVO@3b7d0745, com.stock.xMarket.VO.OrderVO@60614393, com.stock.xMarket.VO.OrderVO@3d6e0ae6, com.stock.xMarket.VO.OrderVO@1a592a99, com.stock.xMarket.VO.OrderVO@494d51b8]
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@49157a32]
""2019-06-28 14:22:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:22:32 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2019-06-28 14:22:32 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Waiting for workers to finish.
""2019-06-28 14:22:32 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Successfully waited for workers to finish.
""2019-06-28 14:22:32 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
""2019-06-28 14:22:32 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 14:22:33 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 14:22:33 [RMI TCP Connection(8)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2019-06-28 14:22:33 [RMI TCP Connection(8)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2019-06-28 14:22:37 [main] INFO  com.stock.xMarket.XMarketApplication - Starting XMarketApplication on MSI with PID 8420 (D:\Workspaces\GitHub\xMarket\target\classes started by msi- in D:\Workspaces\GitHub\xMarket)
""2019-06-28 14:22:37 [main] INFO  com.stock.xMarket.XMarketApplication - No active profile set, falling back to default profiles: default
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64ms. Found 15 repository interfaces.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HistoryHoldPositionRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HoldPositionRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.IndexRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.NewsRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.OrderRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.ScheduledTaskRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.SelfSelectStockRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockHistoryRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TimeShareRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TradeOrderRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TransactionOrderRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundHistoryRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserRepository.
""2019-06-28 14:22:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
""2019-06-28 14:22:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jpaConfiguration' of type [com.stock.xMarket.config.JpaConfiguration$$EnhancerBySpringCGLIB$$58128a1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 14:22:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e269ee2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 14:22:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8090 (http)
""2019-06-28 14:22:38 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2019-06-28 14:22:38 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.19]
""2019-06-28 14:22:38 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2019-06-28 14:22:38 [main] DEBUG o.s.web.context.ContextLoader - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
""2019-06-28 14:22:38 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1070 ms
""2019-06-28 14:22:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2019-06-28 14:22:38 [main] WARN  c.z.hikari.util.DriverDataSource - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
""2019-06-28 14:22:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2019-06-28 14:22:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 14:22:40 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 start
""2019-06-28 14:22:40 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 end
""2019-06-28 14:22:40 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 14:22:40 [main] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
""2019-06-28 14:22:40 [main] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
""2019-06-28 14:22:41 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/**/favicon.ico] in 'faviconHandlerMapping'
""2019-06-28 14:22:41 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2019-06-28 14:22:41 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 46 mappings in 'requestMappingHandlerMapping'
""2019-06-28 14:22:41 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2019-06-28 14:22:41 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
""2019-06-28 14:22:41 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
""2019-06-28 14:22:41 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#23b71d24:0/SimpleConnection@2e030cc1 [delegate=amqp://zhang@127.0.0.1:5672/, localPort= 53370]
""2019-06-28 14:22:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path ''
""2019-06-28 14:22:41 [main] INFO  com.stock.xMarket.XMarketApplication - Started XMarketApplication in 4.345 seconds (JVM running for 4.832)
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6b1cdbde, com.stock.xMarket.VO.OrderVO@3d093312, com.stock.xMarket.VO.OrderVO@5af8de58, com.stock.xMarket.VO.OrderVO@40e2376f, com.stock.xMarket.VO.OrderVO@4d2dd686, com.stock.xMarket.VO.OrderVO@39c8ed92, com.stock.xMarket.VO.OrderVO@255efeed]
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@342d480c]
""2019-06-28 14:22:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:22:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:22:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:22:56 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:22:56 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@54b66b4, com.stock.xMarket.VO.OrderVO@2604e78a, com.stock.xMarket.VO.OrderVO@4dc70fc3, com.stock.xMarket.VO.OrderVO@30a71530, com.stock.xMarket.VO.OrderVO@6e07ab56, com.stock.xMarket.VO.OrderVO@6f3e39ab, com.stock.xMarket.VO.OrderVO@1af28a98]
""2019-06-28 14:22:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:22:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@12f40263]
""2019-06-28 14:22:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:23:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:23:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:23:06 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:23:06 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@163a4296, com.stock.xMarket.VO.OrderVO@1b12cbdc, com.stock.xMarket.VO.OrderVO@3541c9f6, com.stock.xMarket.VO.OrderVO@1072d170, com.stock.xMarket.VO.OrderVO@54981f1a, com.stock.xMarket.VO.OrderVO@5959727e, com.stock.xMarket.VO.OrderVO@626c1eda]
""2019-06-28 14:23:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:23:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6493aab6]
""2019-06-28 14:23:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:23:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:23:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:23:15 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:23:15 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4009fc18, com.stock.xMarket.VO.OrderVO@242c5bb2, com.stock.xMarket.VO.OrderVO@47ea3cd0, com.stock.xMarket.VO.OrderVO@4b119fbd, com.stock.xMarket.VO.OrderVO@447753fb, com.stock.xMarket.VO.OrderVO@240610c, com.stock.xMarket.VO.OrderVO@145ac128]
""2019-06-28 14:23:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:23:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@53f14869]
""2019-06-28 14:23:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:23:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:23:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:23:26 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:23:26 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6a0ab725, com.stock.xMarket.VO.OrderVO@878bff1, com.stock.xMarket.VO.OrderVO@65dd3819, com.stock.xMarket.VO.OrderVO@20629d72, com.stock.xMarket.VO.OrderVO@1f6eb5c4, com.stock.xMarket.VO.OrderVO@52a416ef, com.stock.xMarket.VO.OrderVO@5e35e152]
""2019-06-28 14:23:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:23:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a886eeb]
""2019-06-28 14:23:26 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:23:36 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:23:36 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:23:36 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:23:36 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4df861b9, com.stock.xMarket.VO.OrderVO@6424be3a, com.stock.xMarket.VO.OrderVO@4b804f4c, com.stock.xMarket.VO.OrderVO@1dfb4e43, com.stock.xMarket.VO.OrderVO@138001ec, com.stock.xMarket.VO.OrderVO@5214b8c8, com.stock.xMarket.VO.OrderVO@1b2767e9]
""2019-06-28 14:23:36 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:23:36 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5ce9ab98]
""2019-06-28 14:23:36 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:23:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:23:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:23:46 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:23:46 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5c3f13fb, com.stock.xMarket.VO.OrderVO@789b8764, com.stock.xMarket.VO.OrderVO@c4f8291, com.stock.xMarket.VO.OrderVO@78440373, com.stock.xMarket.VO.OrderVO@5c40674b, com.stock.xMarket.VO.OrderVO@78c47b00, com.stock.xMarket.VO.OrderVO@8ef3583]
""2019-06-28 14:23:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:23:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@50e8e076]
""2019-06-28 14:23:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:23:47 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2019-06-28 14:23:47 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Waiting for workers to finish.
""2019-06-28 14:23:47 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Successfully waited for workers to finish.
""2019-06-28 14:23:47 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
""2019-06-28 14:23:47 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 14:23:48 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 14:23:48 [RMI TCP Connection(9)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2019-06-28 14:23:48 [RMI TCP Connection(9)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2019-06-28 14:23:52 [main] INFO  com.stock.xMarket.XMarketApplication - Starting XMarketApplication on MSI with PID 19640 (D:\Workspaces\GitHub\xMarket\target\classes started by msi- in D:\Workspaces\GitHub\xMarket)
""2019-06-28 14:23:52 [main] INFO  com.stock.xMarket.XMarketApplication - No active profile set, falling back to default profiles: default
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 15 repository interfaces.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HistoryHoldPositionRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.HoldPositionRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.IndexRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.NewsRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.OrderRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.ScheduledTaskRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.SelfSelectStockRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockHistoryRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.StockRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TimeShareRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TradeOrderRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.TransactionOrderRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundHistoryRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserFundRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.stock.xMarket.repository.UserRepository.
""2019-06-28 14:23:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
""2019-06-28 14:23:53 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jpaConfiguration' of type [com.stock.xMarket.config.JpaConfiguration$$EnhancerBySpringCGLIB$$42e7095c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 14:23:53 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cd3e6d6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2019-06-28 14:23:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8090 (http)
""2019-06-28 14:23:53 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2019-06-28 14:23:53 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.19]
""2019-06-28 14:23:53 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2019-06-28 14:23:53 [main] DEBUG o.s.web.context.ContextLoader - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
""2019-06-28 14:23:53 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1111 ms
""2019-06-28 14:23:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2019-06-28 14:23:53 [main] WARN  c.z.hikari.util.DriverDataSource - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
""2019-06-28 14:23:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2019-06-28 14:23:54 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2019-06-28 14:23:55 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 start
""2019-06-28 14:23:55 [main] INFO  c.s.x.config.ScheduledTaskConfig - 创建定时任务调度线程池 end
""2019-06-28 14:23:55 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'threadPoolTaskScheduler'
""2019-06-28 14:23:55 [main] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
""2019-06-28 14:23:55 [main] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
""2019-06-28 14:23:55 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/**/favicon.ico] in 'faviconHandlerMapping'
""2019-06-28 14:23:56 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2019-06-28 14:23:56 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 46 mappings in 'requestMappingHandlerMapping'
""2019-06-28 14:23:56 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2019-06-28 14:23:56 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
""2019-06-28 14:23:56 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
""2019-06-28 14:23:56 [main] INFO  o.s.a.r.c.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#3f3c8b60:0/SimpleConnection@6dc2e473 [delegate=amqp://zhang@127.0.0.1:5672/, localPort= 53508]
""2019-06-28 14:23:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path ''
""2019-06-28 14:23:56 [main] INFO  com.stock.xMarket.XMarketApplication - Started XMarketApplication in 4.342 seconds (JVM running for 4.825)
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@72fdf6fd, com.stock.xMarket.VO.OrderVO@2d953e9b, com.stock.xMarket.VO.OrderVO@3208aaed, com.stock.xMarket.VO.OrderVO@47ce6aeb, com.stock.xMarket.VO.OrderVO@5a9926f1, com.stock.xMarket.VO.OrderVO@5e7cbadf, com.stock.xMarket.VO.OrderVO@29d42c3f]
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@313624ae]
""2019-06-28 14:23:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:24:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:24:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:24:01 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:24:01 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2a4168d5, com.stock.xMarket.VO.OrderVO@1574c1fe, com.stock.xMarket.VO.OrderVO@13ce4142, com.stock.xMarket.VO.OrderVO@232358, com.stock.xMarket.VO.OrderVO@2105e449, com.stock.xMarket.VO.OrderVO@124daaa6, com.stock.xMarket.VO.OrderVO@73683dfc]
""2019-06-28 14:24:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:24:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a48f92a]
""2019-06-28 14:24:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:24:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:24:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:24:11 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:24:11 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3f495267, com.stock.xMarket.VO.OrderVO@2ed3cd52, com.stock.xMarket.VO.OrderVO@a442de1, com.stock.xMarket.VO.OrderVO@45cd39e4, com.stock.xMarket.VO.OrderVO@30629150, com.stock.xMarket.VO.OrderVO@6b6353, com.stock.xMarket.VO.OrderVO@2beb6d9a]
""2019-06-28 14:24:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:24:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@745631a]
""2019-06-28 14:24:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:24:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:24:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:24:21 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:24:21 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@116dd937, com.stock.xMarket.VO.OrderVO@652281a2, com.stock.xMarket.VO.OrderVO@1d61d463, com.stock.xMarket.VO.OrderVO@1bdf65e4, com.stock.xMarket.VO.OrderVO@6484b3c9, com.stock.xMarket.VO.OrderVO@15da016a, com.stock.xMarket.VO.OrderVO@68b0d7e]
""2019-06-28 14:24:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:24:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@661ba80e]
""2019-06-28 14:24:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:24:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:24:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:24:32 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:24:32 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7e5bfdce, com.stock.xMarket.VO.OrderVO@5215647e, com.stock.xMarket.VO.OrderVO@59c6085d, com.stock.xMarket.VO.OrderVO@28cd6559, com.stock.xMarket.VO.OrderVO@9595803, com.stock.xMarket.VO.OrderVO@7016fbc2, com.stock.xMarket.VO.OrderVO@19fb917d]
""2019-06-28 14:24:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:24:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5a5fd8b6]
""2019-06-28 14:24:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:24:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:24:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:24:42 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:24:42 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@9187017, com.stock.xMarket.VO.OrderVO@d5e5097, com.stock.xMarket.VO.OrderVO@1937d152, com.stock.xMarket.VO.OrderVO@605d2812, com.stock.xMarket.VO.OrderVO@2a0f64c6, com.stock.xMarket.VO.OrderVO@55aa53f8, com.stock.xMarket.VO.OrderVO@7230a55e]
""2019-06-28 14:24:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:24:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7b240eb2]
""2019-06-28 14:24:42 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:24:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:24:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:24:52 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:24:52 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@182d5fa6, com.stock.xMarket.VO.OrderVO@335e5fda, com.stock.xMarket.VO.OrderVO@7577a0f1, com.stock.xMarket.VO.OrderVO@4b8a401d, com.stock.xMarket.VO.OrderVO@3928e6a5, com.stock.xMarket.VO.OrderVO@7849ded5, com.stock.xMarket.VO.OrderVO@30f18905]
""2019-06-28 14:24:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:24:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@29e2bdae]
""2019-06-28 14:24:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:25:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:25:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:25:02 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:25:02 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@8b3c9ae, com.stock.xMarket.VO.OrderVO@593498bd, com.stock.xMarket.VO.OrderVO@1d3977e1, com.stock.xMarket.VO.OrderVO@7fe40570, com.stock.xMarket.VO.OrderVO@690c4d9b, com.stock.xMarket.VO.OrderVO@1400c177, com.stock.xMarket.VO.OrderVO@42d02a69]
""2019-06-28 14:25:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:25:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d4078c6]
""2019-06-28 14:25:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:25:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:25:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:25:12 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:25:12 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@c5c1e69, com.stock.xMarket.VO.OrderVO@1f877ee3, com.stock.xMarket.VO.OrderVO@3f359625, com.stock.xMarket.VO.OrderVO@20389822, com.stock.xMarket.VO.OrderVO@4c7b751a, com.stock.xMarket.VO.OrderVO@682f6a10, com.stock.xMarket.VO.OrderVO@7b385d8e]
""2019-06-28 14:25:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:25:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1fa53343]
""2019-06-28 14:25:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:25:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:25:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:25:26 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:25:26 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2f5b5367, com.stock.xMarket.VO.OrderVO@7500951d, com.stock.xMarket.VO.OrderVO@78d73cb4, com.stock.xMarket.VO.OrderVO@31163c95, com.stock.xMarket.VO.OrderVO@44a391bb, com.stock.xMarket.VO.OrderVO@357a4c4f, com.stock.xMarket.VO.OrderVO@7409e4c8]
""2019-06-28 14:25:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:25:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@747b8c48]
""2019-06-28 14:25:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:25:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:25:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:25:36 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:25:36 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5bb8786f, com.stock.xMarket.VO.OrderVO@4eb9a4be, com.stock.xMarket.VO.OrderVO@36dbf94d, com.stock.xMarket.VO.OrderVO@6b38e904, com.stock.xMarket.VO.OrderVO@735b9f0c, com.stock.xMarket.VO.OrderVO@70c4598d, com.stock.xMarket.VO.OrderVO@193cd749]
""2019-06-28 14:25:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:25:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@35e07da3]
""2019-06-28 14:25:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:25:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:25:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:25:47 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:25:47 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3e2c7096, com.stock.xMarket.VO.OrderVO@2f3e3547, com.stock.xMarket.VO.OrderVO@30efb9d2, com.stock.xMarket.VO.OrderVO@43a6fbf2, com.stock.xMarket.VO.OrderVO@1e539bd0, com.stock.xMarket.VO.OrderVO@40990150, com.stock.xMarket.VO.OrderVO@d7501b8]
""2019-06-28 14:25:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:25:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7978028f]
""2019-06-28 14:25:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:25:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:25:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:25:53 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:25:53 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@415fc17e, com.stock.xMarket.VO.OrderVO@7c83ccf7, com.stock.xMarket.VO.OrderVO@54ad678d, com.stock.xMarket.VO.OrderVO@7f71d4f0, com.stock.xMarket.VO.OrderVO@401abe51, com.stock.xMarket.VO.OrderVO@229c26d1, com.stock.xMarket.VO.OrderVO@1d32bc00]
""2019-06-28 14:25:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:25:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6c153d02]
""2019-06-28 14:25:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:26:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:26:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:26:00 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:26:00 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@67fbe1a1, com.stock.xMarket.VO.OrderVO@1ad57107, com.stock.xMarket.VO.OrderVO@3e32e7fc, com.stock.xMarket.VO.OrderVO@6ca550b, com.stock.xMarket.VO.OrderVO@3e844a9a, com.stock.xMarket.VO.OrderVO@fe84904, com.stock.xMarket.VO.OrderVO@264c5202]
""2019-06-28 14:26:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:26:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@727a39cd]
""2019-06-28 14:26:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:26:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayExchange?userId=1006", parameters={masked}
""2019-06-28 14:26:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.todayExchange(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:26:05 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:26:05 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[{"actualAmount":7547.428,"cancelNumber":0,"date":1561680000000,"exchangeAmount":600,"orderId":1561702191328,"ownerId":1006,"serviceTax":5.0,"stampTax":7.5600000000000005,"stockBalance":999911800,"stockId":"600000","stockName":"浦发银行","time":22315000,"totalExchangeMoney":7560.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64204,"transferFee":0.012,"type":1},{"actualAmount":5045.008,"cancelNumber":0,"date":1561680000000,"exchangeAmount":400,"orderId":1561702108747,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912400,"stockId":"600000","stockName":"浦发银行","time":22190000,"totalExchangeMoney":5040.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":true,"transactionOrderId":64202,"transferFee":0.008,"type":0},{"actualAmount":1263.728,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561702094865,"ownerId":1006,"serviceTax":5.0,"stampTax":1.27,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":22160000,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":64200,"transferFee":0.002,"type":1},{"actualAmount":1265.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561702075155,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912100,"stockId":"600000","stockName":"浦发银行","time":22074000,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64198,"transferFee":0.002,"type":0},{"actualAmount":1263.728,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561700589570,"ownerId":1006,"serviceTax":5.0,"stampTax":1.27,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":21682000,"totalExchangeMoney":1270.0,"tradeMarket":1,"tradePrice":12.7,"tradeType":false,"transactionOrderId":64193,"transferFee":0.002,"type":1},{"actualAmount":1265.002,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561700580023,"ownerId":1006,"serviceTax":5.0,"stampTax":0.0,"stockBalance":999912100,"stockId":"600000","stockName":"浦发银行","time":20669000,"totalExchangeMoney":1260.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":true,"transactionOrderId":64187,"transferFee":0.002,"type":0},{"actualAmount":0.0,"cancelNumber":997185100,"date":1561680000000,"exchangeAmount":0,"orderId":1561700594528,"ownerId":1006,"serviceTax":0.0,"stampTax":0.0,"stockBalance":999912000,"stockId":"600000","stockName":"浦发银行","time":20618000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64185,"transferFee":0.0,"type":1}]
""2019-06-28 14:26:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:26:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@76ba4e2]
""2019-06-28 14:26:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:26:10 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyHoldPositionInfo?userId=1006", parameters={masked}
""2019-06-28 14:26:10 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HistoryHoldPositionController.findAllHisHolPosInfo(int)
""2019-06-28 14:26:10 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.c.HistoryHoldPositionController - 传进来的用户id：1006
""2019-06-28 14:26:10 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.c.HistoryHoldPositionController - 传出去的结果：[]
""2019-06-28 14:26:10 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:26:10 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7cd937b3]
""2019-06-28 14:26:10 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:28:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1006", parameters={masked}
""2019-06-28 14:28:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 14:28:04 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:28:04 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[com.stock.xMarket.VO.TransactionOrderVO@3dbc8490, com.stock.xMarket.VO.TransactionOrderVO@1955a6f5, com.stock.xMarket.VO.TransactionOrderVO@29099d34, com.stock.xMarket.VO.TransactionOrderVO@3b0a84f5, com.stock.xMarket.VO.TransactionOrderVO@624b1f00, com.stock.xMarket.VO.TransactionOrderVO@561d6fb2, com.stock.xMarket.VO.TransactionOrderVO@3398a878, com.stock.xMarket.VO.TransactionOrderVO@5cdabfd2, com.stock.xMarket.VO.TransactionOrderVO@66d30856, com.stock.xMarket.VO.TransactionOrderVO@5b8e9bc1, com.stock.xMarket.VO.TransactionOrderVO@2d2323a0, com.stock.xMarket.VO.TransactionOrderVO@240e2df9, com.stock.xMarket.VO.TransactionOrderVO@5a610096, com.stock.xMarket.VO.TransactionOrderVO@751ed888, com.stock.xMarket.VO.TransactionOrderVO@4114dba8, com.stock.xMarket.VO.TransactionOrderVO@14204796, com.stock.xMarket.VO.TransactionOrderVO@46978034, com.stock.xMarket.VO.TransactionOrderVO@454ecaf6, com.stock.xMarket.VO.TransactionOrderVO@22e0906c, com.stock.xMarket.VO.TransactionOrderVO@346a7f51, com.stock.xMarket.VO.TransactionOrderVO@4e06dfc8, com.stock.xMarket.VO.TransactionOrderVO@7d2cb584, com.stock.xMarket.VO.TransactionOrderVO@5b6929bd, com.stock.xMarket.VO.TransactionOrderVO@3c1e4576, com.stock.xMarket.VO.TransactionOrderVO@449e35a2, com.stock.xMarket.VO.TransactionOrderVO@5c063820, com.stock.xMarket.VO.TransactionOrderVO@4e30c6dc, com.stock.xMarket.VO.TransactionOrderVO@4b1f99, com.stock.xMarket.VO.TransactionOrderVO@354d1917, com.stock.xMarket.VO.TransactionOrderVO@5867f0a6, com.stock.xMarket.VO.TransactionOrderVO@1029db50, com.stock.xMarket.VO.TransactionOrderVO@4846b91b, com.stock.xMarket.VO.TransactionOrderVO@151e84a5, com.stock.xMarket.VO.TransactionOrderVO@729ba460, com.stock.xMarket.VO.TransactionOrderVO@2c360238, com.stock.xMarket.VO.TransactionOrderVO@5145e8c4, com.stock.xMarket.VO.TransactionOrderVO@309f65e5, com.stock.xMarket.VO.TransactionOrderVO@1f887f32, com.stock.xMarket.VO.TransactionOrderVO@3338939, com.stock.xMarket.VO.TransactionOrderVO@7dce4253, com.stock.xMarket.VO.TransactionOrderVO@36b5a042, com.stock.xMarket.VO.TransactionOrderVO@6a183849, com.stock.xMarket.VO.TransactionOrderVO@75fd1e72, com.stock.xMarket.VO.TransactionOrderVO@7aae1644, com.stock.xMarket.VO.TransactionOrderVO@61820ee3, com.stock.xMarket.VO.TransactionOrderVO@4a73a8ea, com.stock.xMarket.VO.TransactionOrderVO@57e02158, com.stock.xMarket.VO.TransactionOrderVO@5d7611d6, com.stock.xMarket.VO.TransactionOrderVO@2cf2f98d, com.stock.xMarket.VO.TransactionOrderVO@7b113001, com.stock.xMarket.VO.TransactionOrderVO@2d2d24da, com.stock.xMarket.VO.TransactionOrderVO@40387808]
""2019-06-28 14:28:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:28:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7bbdcf13]
""2019-06-28 14:28:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:28:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1006", parameters={masked}
""2019-06-28 14:28:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 14:28:09 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:28:09 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[com.stock.xMarket.VO.TransactionOrderVO@13788485, com.stock.xMarket.VO.TransactionOrderVO@ac67e7, com.stock.xMarket.VO.TransactionOrderVO@57f0536b, com.stock.xMarket.VO.TransactionOrderVO@58df90aa, com.stock.xMarket.VO.TransactionOrderVO@f547b98, com.stock.xMarket.VO.TransactionOrderVO@6c24b6ca, com.stock.xMarket.VO.TransactionOrderVO@399acb2e, com.stock.xMarket.VO.TransactionOrderVO@1de45677, com.stock.xMarket.VO.TransactionOrderVO@31c066e8, com.stock.xMarket.VO.TransactionOrderVO@789b04fc, com.stock.xMarket.VO.TransactionOrderVO@17b7737a, com.stock.xMarket.VO.TransactionOrderVO@28dfd815, com.stock.xMarket.VO.TransactionOrderVO@1a9a1cc0, com.stock.xMarket.VO.TransactionOrderVO@3a86478b, com.stock.xMarket.VO.TransactionOrderVO@1686df02, com.stock.xMarket.VO.TransactionOrderVO@40cfa2b7, com.stock.xMarket.VO.TransactionOrderVO@a79da72, com.stock.xMarket.VO.TransactionOrderVO@24b7ea9, com.stock.xMarket.VO.TransactionOrderVO@2295df2d, com.stock.xMarket.VO.TransactionOrderVO@1ff21bd2, com.stock.xMarket.VO.TransactionOrderVO@5b9ce814, com.stock.xMarket.VO.TransactionOrderVO@2fb6bf8, com.stock.xMarket.VO.TransactionOrderVO@e1ba03d, com.stock.xMarket.VO.TransactionOrderVO@13806a7, com.stock.xMarket.VO.TransactionOrderVO@3d5892dc, com.stock.xMarket.VO.TransactionOrderVO@64a58a24, com.stock.xMarket.VO.TransactionOrderVO@376cc4c5, com.stock.xMarket.VO.TransactionOrderVO@76a0f1b1, com.stock.xMarket.VO.TransactionOrderVO@f1753cb, com.stock.xMarket.VO.TransactionOrderVO@472b1ca7, com.stock.xMarket.VO.TransactionOrderVO@1630b26b, com.stock.xMarket.VO.TransactionOrderVO@67ece465, com.stock.xMarket.VO.TransactionOrderVO@52507a58, com.stock.xMarket.VO.TransactionOrderVO@4d818a91, com.stock.xMarket.VO.TransactionOrderVO@5eb1daa0, com.stock.xMarket.VO.TransactionOrderVO@5efed2df, com.stock.xMarket.VO.TransactionOrderVO@f2df1e2, com.stock.xMarket.VO.TransactionOrderVO@4e393794, com.stock.xMarket.VO.TransactionOrderVO@1e8d8029, com.stock.xMarket.VO.TransactionOrderVO@36cdd10d, com.stock.xMarket.VO.TransactionOrderVO@568f84d7, com.stock.xMarket.VO.TransactionOrderVO@518d9c05, com.stock.xMarket.VO.TransactionOrderVO@23f3c2d5, com.stock.xMarket.VO.TransactionOrderVO@7b6e3a1f, com.stock.xMarket.VO.TransactionOrderVO@51edb099, com.stock.xMarket.VO.TransactionOrderVO@6c3d7315, com.stock.xMarket.VO.TransactionOrderVO@5165f12d, com.stock.xMarket.VO.TransactionOrderVO@5b5197dc, com.stock.xMarket.VO.TransactionOrderVO@67848d57, com.stock.xMarket.VO.TransactionOrderVO@60a6ef69, com.stock.xMarket.VO.TransactionOrderVO@1eb496c9, com.stock.xMarket.VO.TransactionOrderVO@498c1db4]
""2019-06-28 14:28:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:28:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@aa1cfe7]
""2019-06-28 14:28:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:29:01 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1006", parameters={masked}
""2019-06-28 14:29:01 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 14:29:01 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:29:01 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[com.stock.xMarket.VO.TransactionOrderVO@14e92818, com.stock.xMarket.VO.TransactionOrderVO@16ba7d9b, com.stock.xMarket.VO.TransactionOrderVO@63554710, com.stock.xMarket.VO.TransactionOrderVO@40d7229e, com.stock.xMarket.VO.TransactionOrderVO@1da37b74, com.stock.xMarket.VO.TransactionOrderVO@58b08bfe, com.stock.xMarket.VO.TransactionOrderVO@11942a3f, com.stock.xMarket.VO.TransactionOrderVO@682e3941, com.stock.xMarket.VO.TransactionOrderVO@6e5097eb, com.stock.xMarket.VO.TransactionOrderVO@32630ea4, com.stock.xMarket.VO.TransactionOrderVO@2160f05, com.stock.xMarket.VO.TransactionOrderVO@1bebda37, com.stock.xMarket.VO.TransactionOrderVO@71eef96e, com.stock.xMarket.VO.TransactionOrderVO@5b52dfd9, com.stock.xMarket.VO.TransactionOrderVO@698e9d91, com.stock.xMarket.VO.TransactionOrderVO@2cf1d8f5, com.stock.xMarket.VO.TransactionOrderVO@2a52618c, com.stock.xMarket.VO.TransactionOrderVO@6733df08, com.stock.xMarket.VO.TransactionOrderVO@7accb46a, com.stock.xMarket.VO.TransactionOrderVO@58d8fdb6, com.stock.xMarket.VO.TransactionOrderVO@613fa920, com.stock.xMarket.VO.TransactionOrderVO@188de190, com.stock.xMarket.VO.TransactionOrderVO@7fd790f, com.stock.xMarket.VO.TransactionOrderVO@1857110b, com.stock.xMarket.VO.TransactionOrderVO@43dcd88, com.stock.xMarket.VO.TransactionOrderVO@734b2dfe, com.stock.xMarket.VO.TransactionOrderVO@1f120799, com.stock.xMarket.VO.TransactionOrderVO@3f6d8239, com.stock.xMarket.VO.TransactionOrderVO@55d659d1, com.stock.xMarket.VO.TransactionOrderVO@7f58ba48, com.stock.xMarket.VO.TransactionOrderVO@707954f5, com.stock.xMarket.VO.TransactionOrderVO@23566c89, com.stock.xMarket.VO.TransactionOrderVO@4429a1e3, com.stock.xMarket.VO.TransactionOrderVO@7e19d9d4, com.stock.xMarket.VO.TransactionOrderVO@447de41e, com.stock.xMarket.VO.TransactionOrderVO@54dffa3c, com.stock.xMarket.VO.TransactionOrderVO@5df07ffd, com.stock.xMarket.VO.TransactionOrderVO@6d17caee, com.stock.xMarket.VO.TransactionOrderVO@46e19e46, com.stock.xMarket.VO.TransactionOrderVO@6dc482bc, com.stock.xMarket.VO.TransactionOrderVO@3395176e, com.stock.xMarket.VO.TransactionOrderVO@6086eb48, com.stock.xMarket.VO.TransactionOrderVO@2adf5ab0, com.stock.xMarket.VO.TransactionOrderVO@6347ec35, com.stock.xMarket.VO.TransactionOrderVO@78f2a954, com.stock.xMarket.VO.TransactionOrderVO@2f79c1a9, com.stock.xMarket.VO.TransactionOrderVO@7fa3042c, com.stock.xMarket.VO.TransactionOrderVO@23d969a9, com.stock.xMarket.VO.TransactionOrderVO@4e0cdc8f, com.stock.xMarket.VO.TransactionOrderVO@2f19286e, com.stock.xMarket.VO.TransactionOrderVO@48fccbc5, com.stock.xMarket.VO.TransactionOrderVO@20807752]
""2019-06-28 14:29:01 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:29:01 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@8402f69]
""2019-06-28 14:29:01 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:29:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1006", parameters={masked}
""2019-06-28 14:29:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 14:29:44 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1006
""2019-06-28 14:29:44 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[com.stock.xMarket.VO.TransactionOrderVO@58d79545, com.stock.xMarket.VO.TransactionOrderVO@1bb06737, com.stock.xMarket.VO.TransactionOrderVO@46f9543a, com.stock.xMarket.VO.TransactionOrderVO@42b6a9e, com.stock.xMarket.VO.TransactionOrderVO@60b2aae3, com.stock.xMarket.VO.TransactionOrderVO@7823e01d, com.stock.xMarket.VO.TransactionOrderVO@74f723a7, com.stock.xMarket.VO.TransactionOrderVO@2bd7c83d, com.stock.xMarket.VO.TransactionOrderVO@5e479a16, com.stock.xMarket.VO.TransactionOrderVO@3983bacb, com.stock.xMarket.VO.TransactionOrderVO@74a45c47, com.stock.xMarket.VO.TransactionOrderVO@61a7e4ce, com.stock.xMarket.VO.TransactionOrderVO@35245c6, com.stock.xMarket.VO.TransactionOrderVO@27a3e285, com.stock.xMarket.VO.TransactionOrderVO@71b3c452, com.stock.xMarket.VO.TransactionOrderVO@2fecdf3e, com.stock.xMarket.VO.TransactionOrderVO@3e81c370, com.stock.xMarket.VO.TransactionOrderVO@60ea9ef, com.stock.xMarket.VO.TransactionOrderVO@69707c28, com.stock.xMarket.VO.TransactionOrderVO@20ac4b17, com.stock.xMarket.VO.TransactionOrderVO@10868631, com.stock.xMarket.VO.TransactionOrderVO@6334141f, com.stock.xMarket.VO.TransactionOrderVO@94fa56d, com.stock.xMarket.VO.TransactionOrderVO@4b79a3a0, com.stock.xMarket.VO.TransactionOrderVO@6fea03f0, com.stock.xMarket.VO.TransactionOrderVO@2c3d66fe, com.stock.xMarket.VO.TransactionOrderVO@582ddad9, com.stock.xMarket.VO.TransactionOrderVO@5e4f06df, com.stock.xMarket.VO.TransactionOrderVO@61056b65, com.stock.xMarket.VO.TransactionOrderVO@2648fb2d, com.stock.xMarket.VO.TransactionOrderVO@1005162f, com.stock.xMarket.VO.TransactionOrderVO@36da830e, com.stock.xMarket.VO.TransactionOrderVO@7cce98f3, com.stock.xMarket.VO.TransactionOrderVO@1d3e95d4, com.stock.xMarket.VO.TransactionOrderVO@25324c32, com.stock.xMarket.VO.TransactionOrderVO@47126969, com.stock.xMarket.VO.TransactionOrderVO@4f136878, com.stock.xMarket.VO.TransactionOrderVO@266ac47b, com.stock.xMarket.VO.TransactionOrderVO@110e5f58, com.stock.xMarket.VO.TransactionOrderVO@45833531, com.stock.xMarket.VO.TransactionOrderVO@1107c551, com.stock.xMarket.VO.TransactionOrderVO@61be8216, com.stock.xMarket.VO.TransactionOrderVO@2a9e5e6, com.stock.xMarket.VO.TransactionOrderVO@5edf623f, com.stock.xMarket.VO.TransactionOrderVO@715d19f8, com.stock.xMarket.VO.TransactionOrderVO@64668bf7, com.stock.xMarket.VO.TransactionOrderVO@292dc448, com.stock.xMarket.VO.TransactionOrderVO@cc695c8, com.stock.xMarket.VO.TransactionOrderVO@15cddf71, com.stock.xMarket.VO.TransactionOrderVO@4524c70c, com.stock.xMarket.VO.TransactionOrderVO@26c4464, com.stock.xMarket.VO.TransactionOrderVO@3a3cf934]
""2019-06-28 14:29:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:29:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@41f19f55]
""2019-06-28 14:29:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@31ad8f0c]
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4cb9eab2]
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:30:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7968fee7]
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6e367d82]
""2019-06-28 14:31:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4a7e47a7]
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3f226db3]
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:31:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:32:03 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/conditionalStockList", parameters={masked}
""2019-06-28 14:32:03 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.conditionalStockList(com.stock.xMarket.VO.ConditionVO)
""2019-06-28 14:32:03 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:32:03 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7f5a3bc2]
""2019-06-28 14:32:03 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:32:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/conditionalStockList", parameters={masked}
""2019-06-28 14:32:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.conditionalStockList(com.stock.xMarket.VO.ConditionVO)
""2019-06-28 14:32:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:32:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5d2ba47d]
""2019-06-28 14:32:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=600446", parameters={masked}
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：600446
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d119c60]
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=600446", parameters={masked}
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=600446&userId=1006", parameters={masked}
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@29a52c77]
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600446", parameters={masked}
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@53f16a64]
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@22fe12c6]
""2019-06-28 14:32:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@bacc61d]
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@235ba929]
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@19076bf3]
""2019-06-28 14:34:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@52a52085]
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72efaeeb]
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e5ba324]
""2019-06-28 14:34:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1fea70aa]
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@55682866]
""2019-06-28 14:34:23 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=000895", parameters={masked}
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：000895
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] ERROR c.s.x.controller.KlineController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] ERROR c.s.x.controller.BaseApiController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@962838e]
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 14:34:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=000895", parameters={masked}
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=000895&userId=1006", parameters={masked}
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=000895", parameters={masked}
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4556b380]
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@67c33302]
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2c1966c9]
""2019-06-28 14:34:25 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1006", parameters={masked}
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1006", parameters={masked}
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1006", parameters={masked}
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1006
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] ERROR c.s.x.controller.KlineController - 用户资金曲线数据获取失败，没有查询到此用户的历史资金信息
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] ERROR c.s.x.controller.BaseApiController - 暂无资金曲线
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3458833c]
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 14:34:28 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:29 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:29 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5801b119]
""2019-06-28 14:34:29 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:29 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:29 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@542f1dbd]
""2019-06-28 14:34:29 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 14:34:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:34:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3036ea06]
""2019-06-28 14:34:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=600000", parameters={masked}
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=600000", parameters={masked}
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：600000
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@612e18]
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2a267411]
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6c0cc6ae]
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7418e925]
""2019-06-28 14:34:34 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 14:34:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:34:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@42e3a15f]
""2019-06-28 14:34:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:38 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1006", parameters={masked}
""2019-06-28 14:34:38 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 14:34:39 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:39 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@644c5d4c]
""2019-06-28 14:34:39 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=600000", parameters={masked}
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：600000
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=600000", parameters={masked}
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1af86fa4]
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@40ec0559]
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4480731c]
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@61043aca]
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:41 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1006", parameters={masked}
""2019-06-28 14:34:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 14:34:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@60a29d2f]
""2019-06-28 14:34:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@b82c3c9]
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@479ac158]
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6d01f31a]
""2019-06-28 14:34:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=600446", parameters={masked}
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=600446&userId=1006", parameters={masked}
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=600446", parameters={masked}
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600446", parameters={masked}
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：600446
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7c5a744d]
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@66b761e4]
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4474b0b8]
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4a3206dc]
""2019-06-28 14:34:49 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@12e462b6]
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2ad18a97]
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5408f3af]
""2019-06-28 14:35:28 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@26962032]
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4ef060bc]
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3d2019ae]
""2019-06-28 14:35:39 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@181915cc]
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@12b332f5]
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3e2ab2a0]
""2019-06-28 14:35:48 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:35:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:35:53 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:35:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2daca4af]
""2019-06-28 14:35:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@481ac6e6]
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@760e9b32]
""2019-06-28 14:35:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:35:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:35:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:35:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:35:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@668458d4]
""2019-06-28 14:35:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=600009", parameters={masked}
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600009", parameters={masked}
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=600009&userId=1006", parameters={masked}
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@56a9562f]
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@20813a8f]
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=600009", parameters={masked}
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：600009
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] ERROR c.s.x.controller.KlineController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] ERROR c.s.x.controller.BaseApiController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e71d82d]
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@75d4701b]
""2019-06-28 14:36:03 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@f4a2ba5]
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@65f4d58a]
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a3c7f29]
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@317a4701]
""2019-06-28 14:37:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:37:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:37:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:37:06 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:37:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:37:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@53830e4c]
""2019-06-28 14:37:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@32e4d36]
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@65cbcc1e]
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72d4c09f]
""2019-06-28 14:37:22 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:37:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:37:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:37:23 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:37:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:37:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@46a31a91]
""2019-06-28 14:37:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@22ef498f]
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e23a1bd]
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@234a8ce6]
""2019-06-28 14:38:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:07 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:38:07 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:38:07 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:38:07 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:07 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@202626b2]
""2019-06-28 14:38:07 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5de75d16]
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5bc2815b]
""2019-06-28 14:38:09 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5043d463]
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3ad2c97e]
""2019-06-28 14:38:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1fa3d171]
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7103b81f]
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3b6c90ed]
""2019-06-28 14:38:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4203aaae]
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@726355d]
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@fe003c5]
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@121486f9]
""2019-06-28 14:39:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3d6df0ca]
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@68f79466]
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4bb473c5]
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1743a540]
""2019-06-28 14:39:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@318a4038]
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3ad82e63]
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@c25efd5]
""2019-06-28 14:39:32 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:39:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:39:33 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:39:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7a9ca662]
""2019-06-28 14:39:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e3f228d]
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@16a728ae]
""2019-06-28 14:39:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71deb20c]
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1ba5bc2d]
""2019-06-28 14:39:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6053a8f]
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1bd098bc]
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2ba1dd3]
""2019-06-28 14:40:05 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:40:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:40:33 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:40:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@615347a5]
""2019-06-28 14:40:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@66c71fc6]
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@352965fc]
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@49864957]
""2019-06-28 14:40:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:40:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:40:46 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:40:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@550d82c8]
""2019-06-28 14:40:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3f0ce935]
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7bd9200]
""2019-06-28 14:40:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@496f6689]
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1011", parameters={masked}
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5514c6eb]
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@34a189c3]
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1160efa9]
""2019-06-28 14:40:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:40:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:40:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@751df48e]
""2019-06-28 14:40:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3b818c01]
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1011", parameters={masked}
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71e6a22b]
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@24bb0ab1]
""2019-06-28 14:40:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:40:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getOneNews?title=%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%88%90%E7%AB%8B%E4%BA%86", parameters={masked}
""2019-06-28 14:40:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getOneNews(java.lang.String)
""2019-06-28 14:40:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:40:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6894ddcd]
""2019-06-28 14:40:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1011", parameters={masked}
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5279b1d0]
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@723b598c]
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@d101f9]
""2019-06-28 14:41:03 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@62032a5f]
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@8e4cfda]
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@77d62a7f]
""2019-06-28 14:41:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:41:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:09 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:41:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1140807d]
""2019-06-28 14:41:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=601318", parameters={masked}
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=601318&userId=1011", parameters={masked}
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：601318
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@710b5da1]
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@50ce84bf]
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=601318", parameters={masked}
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=601318", parameters={masked}
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1e77487]
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@38edf1a4]
""2019-06-28 14:41:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1011", parameters={masked}
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@11f706a0]
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1c0e5683]
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@291afa41]
""2019-06-28 14:41:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1011", parameters={masked}
""2019-06-28 14:41:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5a45e2b9]
""2019-06-28 14:41:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1011", parameters={masked}
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1011", parameters={masked}
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1011", parameters={masked}
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1011
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] ERROR c.s.x.controller.KlineController - 用户资金曲线数据获取失败，没有查询到此用户的历史资金信息
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] ERROR c.s.x.controller.BaseApiController - 暂无资金曲线
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1bb12965]
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@64cfc7b4]
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6c70a8f7]
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@58b4f396]
""2019-06-28 14:41:24 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@c8078ee]
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@22f67f6]
""2019-06-28 14:41:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4470d8f5]
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@29371f57]
""2019-06-28 14:41:35 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f6639c3]
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@15f8498e]
""2019-06-28 14:41:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@44c641b5]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@b0aad4c]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@16940766]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4710caf8]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71ec396d]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@428766a0]
""2019-06-28 14:41:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:54 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:41:54 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:54 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:41:54 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:54 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@581ecbec]
""2019-06-28 14:41:54 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=000858&userId=1013", parameters={masked}
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票000858查询用户1013
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@165c737d]
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=000858&userId=1013", parameters={masked}
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票000858查询用户1013
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@34f1d283]
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=000858", parameters={masked}
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2eef3f1b]
""2019-06-28 14:41:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:42:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:42:06 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:42:06 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6d9950b2, com.stock.xMarket.VO.OrderVO@69ca0a00, com.stock.xMarket.VO.OrderVO@4948681d]
""2019-06-28 14:42:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7de7eee2]
""2019-06-28 14:42:06 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:42:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:42:16 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:42:16 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@37396ced, com.stock.xMarket.VO.OrderVO@40eb7c32, com.stock.xMarket.VO.OrderVO@1567ce81]
""2019-06-28 14:42:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3817db2b]
""2019-06-28 14:42:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:42:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:42:27 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:42:27 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@472a1d78, com.stock.xMarket.VO.OrderVO@458c4747, com.stock.xMarket.VO.OrderVO@c409c2b]
""2019-06-28 14:42:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@16695398]
""2019-06-28 14:42:27 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:42:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:42:37 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:42:37 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@578d7b86, com.stock.xMarket.VO.OrderVO@10d9a13, com.stock.xMarket.VO.OrderVO@41faa1a2]
""2019-06-28 14:42:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3997219e]
""2019-06-28 14:42:37 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:42:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:42:44 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:42:44 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6cc09c85, com.stock.xMarket.VO.OrderVO@1166f1f0, com.stock.xMarket.VO.OrderVO@478c988f, com.stock.xMarket.VO.OrderVO@21a871c8, com.stock.xMarket.VO.OrderVO@49e4e5cc, com.stock.xMarket.VO.OrderVO@6f2b7471, com.stock.xMarket.VO.OrderVO@4cc0d1fb]
""2019-06-28 14:42:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e84df9a]
""2019-06-28 14:42:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:42:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:42:47 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:42:47 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@73cd0b75, com.stock.xMarket.VO.OrderVO@ff91f8, com.stock.xMarket.VO.OrderVO@237692ec]
""2019-06-28 14:42:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7c061657]
""2019-06-28 14:42:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@b809e99]
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@30e67aee]
""2019-06-28 14:42:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1874f3c9]
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@845c8cd]
""2019-06-28 14:42:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 14:42:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:42:53 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 14:42:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@23fe6959]
""2019-06-28 14:42:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:42:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:42:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@443596c0]
""2019-06-28 14:42:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:42:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:42:57 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:42:57 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4c4c6729, com.stock.xMarket.VO.OrderVO@51f72885, com.stock.xMarket.VO.OrderVO@38556bed]
""2019-06-28 14:42:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7f12bc3b]
""2019-06-28 14:42:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1006", parameters={masked}
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1006
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@584cf9cc]
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@626fa5d6]
""2019-06-28 14:42:59 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:43:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:05 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:43:05 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@543b162f, com.stock.xMarket.VO.OrderVO@4a840d73, com.stock.xMarket.VO.OrderVO@5639b2cf, com.stock.xMarket.VO.OrderVO@60d5d3e, com.stock.xMarket.VO.OrderVO@a8bb9be, com.stock.xMarket.VO.OrderVO@600ec209, com.stock.xMarket.VO.OrderVO@7bbaab0d, com.stock.xMarket.VO.OrderVO@1732ede9]
""2019-06-28 14:43:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4023e0f8]
""2019-06-28 14:43:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:07 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:43:07 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:07 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:43:07 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@69bcce3f, com.stock.xMarket.VO.OrderVO@2afbc3ed, com.stock.xMarket.VO.OrderVO@4ab28562]
""2019-06-28 14:43:07 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:07 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1ce884a1]
""2019-06-28 14:43:07 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:43:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:15 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:43:15 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3d94b225, com.stock.xMarket.VO.OrderVO@59bca722, com.stock.xMarket.VO.OrderVO@2087f7d6, com.stock.xMarket.VO.OrderVO@2a83ab3c, com.stock.xMarket.VO.OrderVO@329e31d3, com.stock.xMarket.VO.OrderVO@ea70515, com.stock.xMarket.VO.OrderVO@11816a50, com.stock.xMarket.VO.OrderVO@266ce917]
""2019-06-28 14:43:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@65bf44a0]
""2019-06-28 14:43:15 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:43:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:17 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:43:17 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5c433536, com.stock.xMarket.VO.OrderVO@1bfa2f57, com.stock.xMarket.VO.OrderVO@5d107577]
""2019-06-28 14:43:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@49912d1d]
""2019-06-28 14:43:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:43:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:26 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:43:26 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7c1f0188, com.stock.xMarket.VO.OrderVO@38480be5, com.stock.xMarket.VO.OrderVO@6dc3734c, com.stock.xMarket.VO.OrderVO@1037fa47, com.stock.xMarket.VO.OrderVO@14a0aa88, com.stock.xMarket.VO.OrderVO@6ccf8cda, com.stock.xMarket.VO.OrderVO@1ae0db1c, com.stock.xMarket.VO.OrderVO@35aaefc5]
""2019-06-28 14:43:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@24cff712]
""2019-06-28 14:43:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:29 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:43:29 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:29 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:43:29 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4bcd9bc0, com.stock.xMarket.VO.OrderVO@6d89bab2, com.stock.xMarket.VO.OrderVO@78986532]
""2019-06-28 14:43:29 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:29 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@c10c61e]
""2019-06-28 14:43:29 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/cancelOrder", parameters={masked}
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.cancelOrder(long) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的orderId：1561704085854
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@342bb400]
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:34 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561704214389,"sellPoint":false,"tradeOrderId":1561704214389,"buyPoint":true,"exchangeAmount":100,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561704085854,"stockId":"600000","time":1561704214389,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 14:43:34 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@622184c0 
""2019-06-28 14:43:34 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561704085854撤单
""2019-06-28 14:43:34 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561704085854 的委托买单已被撤单，成交单存入数据库
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@f26a69a, com.stock.xMarket.VO.OrderVO@5665965, com.stock.xMarket.VO.OrderVO@4f51ebd6]
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4c3bcffe]
""2019-06-28 14:43:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:43:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:36 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:43:36 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2eb2437c, com.stock.xMarket.VO.OrderVO@7c9ddff4, com.stock.xMarket.VO.OrderVO@7ccd64da, com.stock.xMarket.VO.OrderVO@713a0bb, com.stock.xMarket.VO.OrderVO@3b06ba86, com.stock.xMarket.VO.OrderVO@29f6a06d, com.stock.xMarket.VO.OrderVO@3e0aea3d, com.stock.xMarket.VO.OrderVO@2406933f]
""2019-06-28 14:43:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2adadfb3]
""2019-06-28 14:43:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:39 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:43:39 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:39 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:43:39 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7f4afe89, com.stock.xMarket.VO.OrderVO@54fd97ab, com.stock.xMarket.VO.OrderVO@64180e00]
""2019-06-28 14:43:39 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:39 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@493f51c6]
""2019-06-28 14:43:39 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1013", parameters={masked}
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@17e7c3e3]
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@63a79a67]
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@458ceb1c]
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@c3e5b9c]
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@34f6160d]
""2019-06-28 14:43:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:43:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:46 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:43:46 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3133597f, com.stock.xMarket.VO.OrderVO@db54db, com.stock.xMarket.VO.OrderVO@6a8df400, com.stock.xMarket.VO.OrderVO@18d3fff8, com.stock.xMarket.VO.OrderVO@3300b53c, com.stock.xMarket.VO.OrderVO@6927520b, com.stock.xMarket.VO.OrderVO@6c8f96db, com.stock.xMarket.VO.OrderVO@6ba4888d]
""2019-06-28 14:43:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5dbb7990]
""2019-06-28 14:43:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:43:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:43:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@21e3e264]
""2019-06-28 14:43:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@dddf6c]
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3633f74d]
""2019-06-28 14:43:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:43:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:43:56 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:43:56 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@37f722bc, com.stock.xMarket.VO.OrderVO@34886fc8, com.stock.xMarket.VO.OrderVO@56279081, com.stock.xMarket.VO.OrderVO@2adc7952, com.stock.xMarket.VO.OrderVO@24304c77, com.stock.xMarket.VO.OrderVO@53b18116, com.stock.xMarket.VO.OrderVO@3978a079, com.stock.xMarket.VO.OrderVO@702748ed]
""2019-06-28 14:43:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5652f16a]
""2019-06-28 14:43:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:43:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:43:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:43:57 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:43:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:43:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2471bd35]
""2019-06-28 14:43:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:44:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:44:02 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:44:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@24abc3ac]
""2019-06-28 14:44:02 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:44:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:44:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@76f6ef30]
""2019-06-28 14:44:03 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:44:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:06 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:44:06 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@65f81521, com.stock.xMarket.VO.OrderVO@5843fb03, com.stock.xMarket.VO.OrderVO@42fc6f31, com.stock.xMarket.VO.OrderVO@63d2bf53, com.stock.xMarket.VO.OrderVO@46a6ef15, com.stock.xMarket.VO.OrderVO@1fa8f21, com.stock.xMarket.VO.OrderVO@20deedc8, com.stock.xMarket.VO.OrderVO@5680f6a7]
""2019-06-28 14:44:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@27af7525]
""2019-06-28 14:44:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@55bdea22]
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@edfdf26]
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@79c4718]
""2019-06-28 14:44:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:44:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:14 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:44:14 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@752e8a16, com.stock.xMarket.VO.OrderVO@7e63117, com.stock.xMarket.VO.OrderVO@4955bc92, com.stock.xMarket.VO.OrderVO@33200e90]
""2019-06-28 14:44:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@325f5cd8]
""2019-06-28 14:44:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:16 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:44:16 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:16 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:44:16 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@73c793f2, com.stock.xMarket.VO.OrderVO@2b008308, com.stock.xMarket.VO.OrderVO@635fcfa7, com.stock.xMarket.VO.OrderVO@6780d98, com.stock.xMarket.VO.OrderVO@496f46a6, com.stock.xMarket.VO.OrderVO@66588440, com.stock.xMarket.VO.OrderVO@7b674ddb, com.stock.xMarket.VO.OrderVO@3d358be2]
""2019-06-28 14:44:16 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:16 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@edcb094]
""2019-06-28 14:44:16 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:44:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:25 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:44:25 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2c923f93, com.stock.xMarket.VO.OrderVO@469147d6, com.stock.xMarket.VO.OrderVO@3d2d6e1, com.stock.xMarket.VO.OrderVO@423c281a]
""2019-06-28 14:44:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7fefe969]
""2019-06-28 14:44:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@67c0c880, com.stock.xMarket.VO.OrderVO@6b37c388, com.stock.xMarket.VO.OrderVO@29b75609, com.stock.xMarket.VO.OrderVO@1511968b, com.stock.xMarket.VO.OrderVO@7474c861, com.stock.xMarket.VO.OrderVO@218a6ee4, com.stock.xMarket.VO.OrderVO@321e63c2, com.stock.xMarket.VO.OrderVO@2ba20ec4]
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7947fc11]
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/cancelOrder", parameters={masked}
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.cancelOrder(long) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的orderId：1561704244841
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@35a7c7a]
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561704267511,"sellPoint":false,"tradeOrderId":1561704267511,"buyPoint":true,"exchangeAmount":100,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561704244841,"stockId":"600000","time":1561704267511,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 14:44:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@ae20f94 
""2019-06-28 14:44:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561704244841撤单
""2019-06-28 14:44:27 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561704244841 的委托买单已被撤单，成交单存入数据库
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@17d4a5f4, com.stock.xMarket.VO.OrderVO@ce50bae, com.stock.xMarket.VO.OrderVO@29e7d41e, com.stock.xMarket.VO.OrderVO@8893878]
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3a40c798]
""2019-06-28 14:44:27 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:30 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:44:30 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:44:30 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:30 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72f97576]
""2019-06-28 14:44:30 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@369f1498]
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1ef6a968]
""2019-06-28 14:44:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:44:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:44:35 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:44:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5c5cf096]
""2019-06-28 14:44:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:37 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:44:37 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:37 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:44:37 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4a756138, com.stock.xMarket.VO.OrderVO@31a34ab8, com.stock.xMarket.VO.OrderVO@297f53ed, com.stock.xMarket.VO.OrderVO@3c073d9f, com.stock.xMarket.VO.OrderVO@5d9ae786, com.stock.xMarket.VO.OrderVO@76478007, com.stock.xMarket.VO.OrderVO@25744519, com.stock.xMarket.VO.OrderVO@209a6fed]
""2019-06-28 14:44:37 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:37 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2a361aaf]
""2019-06-28 14:44:37 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 14:44:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:44:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4437900e]
""2019-06-28 14:44:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:44:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:47 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:44:47 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1d89360f, com.stock.xMarket.VO.OrderVO@1eb24054, com.stock.xMarket.VO.OrderVO@67f02632, com.stock.xMarket.VO.OrderVO@65fc4272, com.stock.xMarket.VO.OrderVO@3111298c, com.stock.xMarket.VO.OrderVO@3d2d7f1a, com.stock.xMarket.VO.OrderVO@5b8a1f3b, com.stock.xMarket.VO.OrderVO@5c6239ea]
""2019-06-28 14:44:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@648736a3]
""2019-06-28 14:44:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:44:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:50 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:44:50 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@76e23b29, com.stock.xMarket.VO.OrderVO@3beb8528, com.stock.xMarket.VO.OrderVO@33437aac, com.stock.xMarket.VO.OrderVO@508d6442, com.stock.xMarket.VO.OrderVO@37512609]
""2019-06-28 14:44:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5074370e]
""2019-06-28 14:44:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/cancelOrder", parameters={masked}
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.cancelOrder(long) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的orderId：1561704281806
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4a83f71]
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:53 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561704293086,"sellPoint":false,"tradeOrderId":1561704293086,"buyPoint":true,"exchangeAmount":100,"buyerId":1013,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561704281806,"stockId":"600000","time":1561704293086,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 14:44:53 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@16ab4f61 
""2019-06-28 14:44:53 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561704281806撤单
""2019-06-28 14:44:53 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561704281806 的委托买单已被撤单，成交单存入数据库
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2f1a4478, com.stock.xMarket.VO.OrderVO@74c57618, com.stock.xMarket.VO.OrderVO@29d302d, com.stock.xMarket.VO.OrderVO@f86d136, com.stock.xMarket.VO.OrderVO@72c27d3a]
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2d68a0cc]
""2019-06-28 14:44:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:44:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:44:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:44:57 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:44:57 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@790e208e, com.stock.xMarket.VO.OrderVO@96164d8, com.stock.xMarket.VO.OrderVO@7d50817e, com.stock.xMarket.VO.OrderVO@3fe5dce0, com.stock.xMarket.VO.OrderVO@376791c2, com.stock.xMarket.VO.OrderVO@35a27452, com.stock.xMarket.VO.OrderVO@4c0048e9, com.stock.xMarket.VO.OrderVO@5d939f55]
""2019-06-28 14:44:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:44:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5671eca4]
""2019-06-28 14:44:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:00 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:00 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@33896231, com.stock.xMarket.VO.OrderVO@35be18bf, com.stock.xMarket.VO.OrderVO@3bffb365, com.stock.xMarket.VO.OrderVO@8de01de, com.stock.xMarket.VO.OrderVO@703e621e]
""2019-06-28 14:45:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3580e746]
""2019-06-28 14:45:00 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:45:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:45:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5159aadb]
""2019-06-28 14:45:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:03 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:03 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@22b058fd, com.stock.xMarket.VO.OrderVO@3b18b857, com.stock.xMarket.VO.OrderVO@38707d7a, com.stock.xMarket.VO.OrderVO@720004e4, com.stock.xMarket.VO.OrderVO@5257cde9]
""2019-06-28 14:45:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2cf31df4]
""2019-06-28 14:45:03 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:45:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:45:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@60bbe056]
""2019-06-28 14:45:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:45:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:07 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:45:07 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7f44354c, com.stock.xMarket.VO.OrderVO@47a841f0, com.stock.xMarket.VO.OrderVO@4390dcf1, com.stock.xMarket.VO.OrderVO@71ed9697, com.stock.xMarket.VO.OrderVO@2fdd33b3, com.stock.xMarket.VO.OrderVO@2aff5079, com.stock.xMarket.VO.OrderVO@6f4d6683, com.stock.xMarket.VO.OrderVO@72891cd3]
""2019-06-28 14:45:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@340fe99a]
""2019-06-28 14:45:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5b2b1a1c]
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@78cab1b6]
""2019-06-28 14:45:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:10 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:10 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6d11f210, com.stock.xMarket.VO.OrderVO@30d13a5a, com.stock.xMarket.VO.OrderVO@19b5d40a, com.stock.xMarket.VO.OrderVO@3d56b73, com.stock.xMarket.VO.OrderVO@6136986b]
""2019-06-28 14:45:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@580c7dfd]
""2019-06-28 14:45:10 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:13 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:13 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:13 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:13 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@17de4f74, com.stock.xMarket.VO.OrderVO@9c07990, com.stock.xMarket.VO.OrderVO@5549ae84, com.stock.xMarket.VO.OrderVO@72efbe2f, com.stock.xMarket.VO.OrderVO@172ffae9]
""2019-06-28 14:45:13 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:13 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1da90d65]
""2019-06-28 14:45:13 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:45:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:18 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:45:18 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1611bdcd, com.stock.xMarket.VO.OrderVO@61110640, com.stock.xMarket.VO.OrderVO@36ac60c0, com.stock.xMarket.VO.OrderVO@783bea7b, com.stock.xMarket.VO.OrderVO@63dfcf64, com.stock.xMarket.VO.OrderVO@a15e659, com.stock.xMarket.VO.OrderVO@5f6a3dbb, com.stock.xMarket.VO.OrderVO@78a56c1f]
""2019-06-28 14:45:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@659c3880]
""2019-06-28 14:45:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:20 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:20 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:20 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:20 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@18976d75, com.stock.xMarket.VO.OrderVO@500aeaf1, com.stock.xMarket.VO.OrderVO@3220edd2, com.stock.xMarket.VO.OrderVO@55ffd21c, com.stock.xMarket.VO.OrderVO@7620e113]
""2019-06-28 14:45:20 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:20 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71fad044]
""2019-06-28 14:45:20 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:24 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:24 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@14084612, com.stock.xMarket.VO.OrderVO@42fc593d, com.stock.xMarket.VO.OrderVO@65b5af1, com.stock.xMarket.VO.OrderVO@4ec9f4a9, com.stock.xMarket.VO.OrderVO@182703b4]
""2019-06-28 14:45:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@38b2843c]
""2019-06-28 14:45:24 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:45:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:28 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:45:28 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@35a33fef, com.stock.xMarket.VO.OrderVO@4a2e170, com.stock.xMarket.VO.OrderVO@a8d977b, com.stock.xMarket.VO.OrderVO@39809984, com.stock.xMarket.VO.OrderVO@15f0851c, com.stock.xMarket.VO.OrderVO@6ca4fb3, com.stock.xMarket.VO.OrderVO@609a265e, com.stock.xMarket.VO.OrderVO@5debcf70]
""2019-06-28 14:45:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4ca269b4]
""2019-06-28 14:45:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:30 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:30 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4c51dc5f, com.stock.xMarket.VO.OrderVO@609c5320, com.stock.xMarket.VO.OrderVO@4aca946c, com.stock.xMarket.VO.OrderVO@8252291, com.stock.xMarket.VO.OrderVO@4a54a4ee]
""2019-06-28 14:45:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@48d3fbd7]
""2019-06-28 14:45:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:34 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:34 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:34 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:34 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@772c74a4, com.stock.xMarket.VO.OrderVO@3a36140f, com.stock.xMarket.VO.OrderVO@78f46861, com.stock.xMarket.VO.OrderVO@1fac6d42, com.stock.xMarket.VO.OrderVO@bb1a347]
""2019-06-28 14:45:34 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:34 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1ad5852]
""2019-06-28 14:45:34 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:45:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:38 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:45:38 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@618b51ad, com.stock.xMarket.VO.OrderVO@5121aa8c, com.stock.xMarket.VO.OrderVO@16e1da4c, com.stock.xMarket.VO.OrderVO@355b486c, com.stock.xMarket.VO.OrderVO@ee67153, com.stock.xMarket.VO.OrderVO@52cfdfc9, com.stock.xMarket.VO.OrderVO@4ae44c66, com.stock.xMarket.VO.OrderVO@2513657e]
""2019-06-28 14:45:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@18c2e466]
""2019-06-28 14:45:38 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:40 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:40 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@26438e92, com.stock.xMarket.VO.OrderVO@1e367fce, com.stock.xMarket.VO.OrderVO@2ea5b8b1, com.stock.xMarket.VO.OrderVO@109994fb, com.stock.xMarket.VO.OrderVO@2a14af64]
""2019-06-28 14:45:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7f16de7]
""2019-06-28 14:45:40 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:44 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:44 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:44 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:45 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3c604294, com.stock.xMarket.VO.OrderVO@1dcdd088, com.stock.xMarket.VO.OrderVO@70b246d4, com.stock.xMarket.VO.OrderVO@4c90990f, com.stock.xMarket.VO.OrderVO@725a06eb]
""2019-06-28 14:45:45 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:45 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1e0c1b8]
""2019-06-28 14:45:45 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:45:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:49 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:45:49 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@576ffa18, com.stock.xMarket.VO.OrderVO@26c2d393, com.stock.xMarket.VO.OrderVO@1d21f6d9, com.stock.xMarket.VO.OrderVO@657700a5, com.stock.xMarket.VO.OrderVO@4d609929, com.stock.xMarket.VO.OrderVO@7d8e855d, com.stock.xMarket.VO.OrderVO@6f8b330b, com.stock.xMarket.VO.OrderVO@32a46477]
""2019-06-28 14:45:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7b441adb]
""2019-06-28 14:45:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:50 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:50 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@308feac0, com.stock.xMarket.VO.OrderVO@2a8ef08b, com.stock.xMarket.VO.OrderVO@313f0c53, com.stock.xMarket.VO.OrderVO@8417a78, com.stock.xMarket.VO.OrderVO@47d7485a]
""2019-06-28 14:45:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1a80e283]
""2019-06-28 14:45:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:45:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:55 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:45:55 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@10f90ddf, com.stock.xMarket.VO.OrderVO@49ea65da, com.stock.xMarket.VO.OrderVO@2bfa14ec, com.stock.xMarket.VO.OrderVO@e41786a, com.stock.xMarket.VO.OrderVO@568e1b88]
""2019-06-28 14:45:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4c506036]
""2019-06-28 14:45:55 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:45:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:45:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:45:59 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:45:59 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@65069eec, com.stock.xMarket.VO.OrderVO@25a20252, com.stock.xMarket.VO.OrderVO@40e3556a, com.stock.xMarket.VO.OrderVO@16b9a9df, com.stock.xMarket.VO.OrderVO@4799b41a, com.stock.xMarket.VO.OrderVO@721c9e29, com.stock.xMarket.VO.OrderVO@280edd05, com.stock.xMarket.VO.OrderVO@73a27e8a]
""2019-06-28 14:45:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:45:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@79112d80]
""2019-06-28 14:45:59 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:00 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:00 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@e7f734e, com.stock.xMarket.VO.OrderVO@4f5b44c9, com.stock.xMarket.VO.OrderVO@7248a7df, com.stock.xMarket.VO.OrderVO@2aeef921, com.stock.xMarket.VO.OrderVO@5f7e1a31]
""2019-06-28 14:46:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4a16601b]
""2019-06-28 14:46:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:05 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:05 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6d829487, com.stock.xMarket.VO.OrderVO@7fdda79b, com.stock.xMarket.VO.OrderVO@74e30f28, com.stock.xMarket.VO.OrderVO@70da5c42, com.stock.xMarket.VO.OrderVO@985d872]
""2019-06-28 14:46:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1bf647a6]
""2019-06-28 14:46:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:46:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:09 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:46:09 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@19002a78, com.stock.xMarket.VO.OrderVO@4dbd07a9, com.stock.xMarket.VO.OrderVO@6defe86b, com.stock.xMarket.VO.OrderVO@50be9109, com.stock.xMarket.VO.OrderVO@4875328c, com.stock.xMarket.VO.OrderVO@6d50f464, com.stock.xMarket.VO.OrderVO@7feef515, com.stock.xMarket.VO.OrderVO@5bfc0538]
""2019-06-28 14:46:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3afcad99]
""2019-06-28 14:46:09 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:10 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:10 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3086e28d, com.stock.xMarket.VO.OrderVO@6e5b2dc9, com.stock.xMarket.VO.OrderVO@662cd077, com.stock.xMarket.VO.OrderVO@2cf784ad, com.stock.xMarket.VO.OrderVO@2be28934]
""2019-06-28 14:46:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1c60dce4]
""2019-06-28 14:46:10 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:16 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:16 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@52932a60, com.stock.xMarket.VO.OrderVO@75376d9f, com.stock.xMarket.VO.OrderVO@6c30f6d4, com.stock.xMarket.VO.OrderVO@7e1576a4, com.stock.xMarket.VO.OrderVO@351e932c]
""2019-06-28 14:46:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7b8b4b85]
""2019-06-28 14:46:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:46:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:19 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:46:19 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@16711e94, com.stock.xMarket.VO.OrderVO@72aea51e, com.stock.xMarket.VO.OrderVO@21716108, com.stock.xMarket.VO.OrderVO@326d237, com.stock.xMarket.VO.OrderVO@1dbde979, com.stock.xMarket.VO.OrderVO@1abc3985, com.stock.xMarket.VO.OrderVO@30ef72fb, com.stock.xMarket.VO.OrderVO@56db9bb]
""2019-06-28 14:46:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@77697e4e]
""2019-06-28 14:46:19 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:20 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:20 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@72124609, com.stock.xMarket.VO.OrderVO@459f1340, com.stock.xMarket.VO.OrderVO@5deb1c17, com.stock.xMarket.VO.OrderVO@4d490eee, com.stock.xMarket.VO.OrderVO@2d8b3b40]
""2019-06-28 14:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@10b328a2]
""2019-06-28 14:46:20 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:26 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:26 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@57e84239, com.stock.xMarket.VO.OrderVO@32adcb3c, com.stock.xMarket.VO.OrderVO@209fb8b6, com.stock.xMarket.VO.OrderVO@61181ee6, com.stock.xMarket.VO.OrderVO@74747176]
""2019-06-28 14:46:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@28dca0ef]
""2019-06-28 14:46:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:29 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:46:29 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:29 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:46:29 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@25f2f0cf, com.stock.xMarket.VO.OrderVO@c9cccd2, com.stock.xMarket.VO.OrderVO@6fc2d703, com.stock.xMarket.VO.OrderVO@43238be1, com.stock.xMarket.VO.OrderVO@71e57fc2, com.stock.xMarket.VO.OrderVO@1bf5c770, com.stock.xMarket.VO.OrderVO@627671c2, com.stock.xMarket.VO.OrderVO@3d5592ee]
""2019-06-28 14:46:29 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:29 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6794f1e9]
""2019-06-28 14:46:29 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:30 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:30 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@79f265a5, com.stock.xMarket.VO.OrderVO@14c1618e, com.stock.xMarket.VO.OrderVO@4d3be91c, com.stock.xMarket.VO.OrderVO@269bdd4b, com.stock.xMarket.VO.OrderVO@4c2e4b70]
""2019-06-28 14:46:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@537c9e6a]
""2019-06-28 14:46:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:36 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:36 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2810d0ad, com.stock.xMarket.VO.OrderVO@65d9640a, com.stock.xMarket.VO.OrderVO@799dcfe6, com.stock.xMarket.VO.OrderVO@749bf429, com.stock.xMarket.VO.OrderVO@5a20d7af]
""2019-06-28 14:46:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@74f711d5]
""2019-06-28 14:46:36 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:39 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:46:39 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:39 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:46:39 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3edeebff, com.stock.xMarket.VO.OrderVO@259104d0, com.stock.xMarket.VO.OrderVO@42ec12fe, com.stock.xMarket.VO.OrderVO@1692f518, com.stock.xMarket.VO.OrderVO@5f5a7526, com.stock.xMarket.VO.OrderVO@72405d99, com.stock.xMarket.VO.OrderVO@5019cacd, com.stock.xMarket.VO.OrderVO@5122cfe3]
""2019-06-28 14:46:39 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:39 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5ddd73a4]
""2019-06-28 14:46:39 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:41 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:41 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@40270638, com.stock.xMarket.VO.OrderVO@79c7ce5d, com.stock.xMarket.VO.OrderVO@36b59eb7, com.stock.xMarket.VO.OrderVO@1945cb44, com.stock.xMarket.VO.OrderVO@61ab0892]
""2019-06-28 14:46:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@265997dc]
""2019-06-28 14:46:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:47 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:47 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4b5d1d6f, com.stock.xMarket.VO.OrderVO@618235c8, com.stock.xMarket.VO.OrderVO@19850de2, com.stock.xMarket.VO.OrderVO@4ac2f708, com.stock.xMarket.VO.OrderVO@69d72d5a]
""2019-06-28 14:46:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@198b69dd]
""2019-06-28 14:46:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:46:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:50 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:46:50 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4db4dc8d, com.stock.xMarket.VO.OrderVO@74826, com.stock.xMarket.VO.OrderVO@4ae48eb4, com.stock.xMarket.VO.OrderVO@10f99cf9, com.stock.xMarket.VO.OrderVO@7b427adf, com.stock.xMarket.VO.OrderVO@41be5be9, com.stock.xMarket.VO.OrderVO@2fc1ec44, com.stock.xMarket.VO.OrderVO@7303b311]
""2019-06-28 14:46:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b7fab2c]
""2019-06-28 14:46:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:51 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:51 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2e1dc868, com.stock.xMarket.VO.OrderVO@5ff2b889, com.stock.xMarket.VO.OrderVO@225163aa, com.stock.xMarket.VO.OrderVO@71d01c23, com.stock.xMarket.VO.OrderVO@314ec4f9]
""2019-06-28 14:46:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7b3214a9]
""2019-06-28 14:46:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:46:57 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:46:57 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:46:57 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:46:57 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@438147d2, com.stock.xMarket.VO.OrderVO@5f205b53, com.stock.xMarket.VO.OrderVO@388de5e6, com.stock.xMarket.VO.OrderVO@41d67711, com.stock.xMarket.VO.OrderVO@820072e]
""2019-06-28 14:46:57 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:46:57 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@55072fba]
""2019-06-28 14:46:57 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:47:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:00 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:47:00 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3983c895, com.stock.xMarket.VO.OrderVO@7e916974, com.stock.xMarket.VO.OrderVO@6e5681f0, com.stock.xMarket.VO.OrderVO@7617c13d, com.stock.xMarket.VO.OrderVO@5177780a, com.stock.xMarket.VO.OrderVO@24586199, com.stock.xMarket.VO.OrderVO@7edb2de3, com.stock.xMarket.VO.OrderVO@368d152c]
""2019-06-28 14:47:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5cd08cdf]
""2019-06-28 14:47:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:01 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:01 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@22e09dc0, com.stock.xMarket.VO.OrderVO@486fa3fa, com.stock.xMarket.VO.OrderVO@41156b6e, com.stock.xMarket.VO.OrderVO@23bce934, com.stock.xMarket.VO.OrderVO@5947e1e]
""2019-06-28 14:47:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@30d17d25]
""2019-06-28 14:47:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:07 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:07 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:07 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:07 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@58febdab, com.stock.xMarket.VO.OrderVO@74aaafe0, com.stock.xMarket.VO.OrderVO@720bb5f1, com.stock.xMarket.VO.OrderVO@6c0f2db9, com.stock.xMarket.VO.OrderVO@4131d676]
""2019-06-28 14:47:07 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:07 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6045a41f]
""2019-06-28 14:47:07 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:47:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:10 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:47:10 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@198883fb, com.stock.xMarket.VO.OrderVO@61f39a58, com.stock.xMarket.VO.OrderVO@57f4abe, com.stock.xMarket.VO.OrderVO@5056ecc8, com.stock.xMarket.VO.OrderVO@d1c2a62, com.stock.xMarket.VO.OrderVO@70c040c3, com.stock.xMarket.VO.OrderVO@f15dedf, com.stock.xMarket.VO.OrderVO@68c25359]
""2019-06-28 14:47:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e12b19]
""2019-06-28 14:47:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:11 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:11 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6f602d0c, com.stock.xMarket.VO.OrderVO@6750d841, com.stock.xMarket.VO.OrderVO@eda4dbe, com.stock.xMarket.VO.OrderVO@4ed236c9, com.stock.xMarket.VO.OrderVO@20b46a52]
""2019-06-28 14:47:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@41c73cd5]
""2019-06-28 14:47:11 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:18 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:18 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@69aca0f8, com.stock.xMarket.VO.OrderVO@1eb8efa9, com.stock.xMarket.VO.OrderVO@1550511e, com.stock.xMarket.VO.OrderVO@367f8dba, com.stock.xMarket.VO.OrderVO@3ad840ed]
""2019-06-28 14:47:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@63c425b8]
""2019-06-28 14:47:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:47:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:20 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:47:20 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6bad9878, com.stock.xMarket.VO.OrderVO@32c2e743, com.stock.xMarket.VO.OrderVO@3ab61583, com.stock.xMarket.VO.OrderVO@2be1283e, com.stock.xMarket.VO.OrderVO@2c881b62, com.stock.xMarket.VO.OrderVO@9d5194f, com.stock.xMarket.VO.OrderVO@3451ffb, com.stock.xMarket.VO.OrderVO@21c76775]
""2019-06-28 14:47:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4df83b24]
""2019-06-28 14:47:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:21 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:21 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@67c94426, com.stock.xMarket.VO.OrderVO@ecc7ce6, com.stock.xMarket.VO.OrderVO@5eb9bea1, com.stock.xMarket.VO.OrderVO@7b7c8aa5, com.stock.xMarket.VO.OrderVO@56391998]
""2019-06-28 14:47:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3bff64f5]
""2019-06-28 14:47:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:28 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:28 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@64af68b0, com.stock.xMarket.VO.OrderVO@4a4de1a9, com.stock.xMarket.VO.OrderVO@5104d31e, com.stock.xMarket.VO.OrderVO@3eaa0518, com.stock.xMarket.VO.OrderVO@215f0095]
""2019-06-28 14:47:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@43aedbe]
""2019-06-28 14:47:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:47:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:30 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:47:30 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@52102bd5, com.stock.xMarket.VO.OrderVO@3ea2b679, com.stock.xMarket.VO.OrderVO@21de3e65, com.stock.xMarket.VO.OrderVO@67df703c, com.stock.xMarket.VO.OrderVO@3442b191, com.stock.xMarket.VO.OrderVO@1ff8c81e, com.stock.xMarket.VO.OrderVO@4f85f092, com.stock.xMarket.VO.OrderVO@534737ce]
""2019-06-28 14:47:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7228da0e]
""2019-06-28 14:47:30 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:31 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:31 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:31 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:31 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@29543d30, com.stock.xMarket.VO.OrderVO@6fe28630, com.stock.xMarket.VO.OrderVO@72065062, com.stock.xMarket.VO.OrderVO@3087b7f0, com.stock.xMarket.VO.OrderVO@38b2a16d]
""2019-06-28 14:47:31 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:31 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@431a734d]
""2019-06-28 14:47:31 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:38 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:38 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@64cee62a, com.stock.xMarket.VO.OrderVO@217c9375, com.stock.xMarket.VO.OrderVO@7e661d54, com.stock.xMarket.VO.OrderVO@435bf193, com.stock.xMarket.VO.OrderVO@5037b064]
""2019-06-28 14:47:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1595762c]
""2019-06-28 14:47:38 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:47:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:40 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:47:40 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@41bb0864, com.stock.xMarket.VO.OrderVO@1f66dc98, com.stock.xMarket.VO.OrderVO@6a00714b, com.stock.xMarket.VO.OrderVO@26aa4469, com.stock.xMarket.VO.OrderVO@3f4b80f0, com.stock.xMarket.VO.OrderVO@16e0099d, com.stock.xMarket.VO.OrderVO@7f83b823, com.stock.xMarket.VO.OrderVO@bfe32b6]
""2019-06-28 14:47:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@68516f39]
""2019-06-28 14:47:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:41 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:41 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@24c7a36e, com.stock.xMarket.VO.OrderVO@1a570522, com.stock.xMarket.VO.OrderVO@4b40c7d1, com.stock.xMarket.VO.OrderVO@4c4c4cab, com.stock.xMarket.VO.OrderVO@55895a9f]
""2019-06-28 14:47:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@77552b19]
""2019-06-28 14:47:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:49 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:49 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@384d4934, com.stock.xMarket.VO.OrderVO@3f8c904f, com.stock.xMarket.VO.OrderVO@1ea012aa, com.stock.xMarket.VO.OrderVO@cb24c5f, com.stock.xMarket.VO.OrderVO@5e64a014]
""2019-06-28 14:47:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5315d7f]
""2019-06-28 14:47:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4b6c92ff, com.stock.xMarket.VO.OrderVO@22803d21, com.stock.xMarket.VO.OrderVO@138a86df, com.stock.xMarket.VO.OrderVO@1b614c54, com.stock.xMarket.VO.OrderVO@34b5cead, com.stock.xMarket.VO.OrderVO@177f842f, com.stock.xMarket.VO.OrderVO@50844461, com.stock.xMarket.VO.OrderVO@4116a1c9]
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5bccdfe0]
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@38fe4c59, com.stock.xMarket.VO.OrderVO@5e097ab3, com.stock.xMarket.VO.OrderVO@4a8e44d3, com.stock.xMarket.VO.OrderVO@7b760154, com.stock.xMarket.VO.OrderVO@31a016e7]
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@24692e82]
""2019-06-28 14:47:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:47:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:47:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:47:59 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:47:59 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3f51d61d, com.stock.xMarket.VO.OrderVO@3a897c09, com.stock.xMarket.VO.OrderVO@7c0f772c, com.stock.xMarket.VO.OrderVO@186b6516, com.stock.xMarket.VO.OrderVO@293ba938]
""2019-06-28 14:47:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:47:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@58a3f122]
""2019-06-28 14:47:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@17e0124, com.stock.xMarket.VO.OrderVO@5c99acd2, com.stock.xMarket.VO.OrderVO@41175f63, com.stock.xMarket.VO.OrderVO@501899a3, com.stock.xMarket.VO.OrderVO@219ed5a5, com.stock.xMarket.VO.OrderVO@30f01278, com.stock.xMarket.VO.OrderVO@4b67af42, com.stock.xMarket.VO.OrderVO@5fa6e20c]
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@84237a0]
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@702dffb1, com.stock.xMarket.VO.OrderVO@4c61622c, com.stock.xMarket.VO.OrderVO@5b245721, com.stock.xMarket.VO.OrderVO@3360e42b, com.stock.xMarket.VO.OrderVO@2c2f5581]
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6b98222a]
""2019-06-28 14:48:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:09 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:09 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@10423640, com.stock.xMarket.VO.OrderVO@315bbc9c, com.stock.xMarket.VO.OrderVO@7c20d6c1, com.stock.xMarket.VO.OrderVO@188b9af8, com.stock.xMarket.VO.OrderVO@19fa4f9f]
""2019-06-28 14:48:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7529af60]
""2019-06-28 14:48:09 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@32e23154, com.stock.xMarket.VO.OrderVO@5179350a, com.stock.xMarket.VO.OrderVO@49ef3d89, com.stock.xMarket.VO.OrderVO@7792c22c, com.stock.xMarket.VO.OrderVO@54d9351b]
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4c108bef]
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@41e9724d, com.stock.xMarket.VO.OrderVO@56b6491f, com.stock.xMarket.VO.OrderVO@5ed3851f, com.stock.xMarket.VO.OrderVO@674e2fdb, com.stock.xMarket.VO.OrderVO@6d3f4265, com.stock.xMarket.VO.OrderVO@925006c, com.stock.xMarket.VO.OrderVO@4b9c972a, com.stock.xMarket.VO.OrderVO@5dba4975]
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4a0114cd]
""2019-06-28 14:48:11 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:20 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:20 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3a127559, com.stock.xMarket.VO.OrderVO@3eaf0bdc, com.stock.xMarket.VO.OrderVO@41ec94f9, com.stock.xMarket.VO.OrderVO@6f61d6d1, com.stock.xMarket.VO.OrderVO@4670ded9]
""2019-06-28 14:48:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@c7dc20]
""2019-06-28 14:48:20 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2faddc9f, com.stock.xMarket.VO.OrderVO@1423065c, com.stock.xMarket.VO.OrderVO@50e7be76, com.stock.xMarket.VO.OrderVO@2aedae5c, com.stock.xMarket.VO.OrderVO@6b65c6ba]
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@67782c6c]
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@44ad84f5, com.stock.xMarket.VO.OrderVO@6db8ec94, com.stock.xMarket.VO.OrderVO@6c09b3ce, com.stock.xMarket.VO.OrderVO@36a401b4, com.stock.xMarket.VO.OrderVO@1e06a1b9, com.stock.xMarket.VO.OrderVO@34f032a1, com.stock.xMarket.VO.OrderVO@15c66032, com.stock.xMarket.VO.OrderVO@3797a9f]
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@28590820]
""2019-06-28 14:48:21 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:30 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:30 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3f5220d8, com.stock.xMarket.VO.OrderVO@47467e79, com.stock.xMarket.VO.OrderVO@224a69, com.stock.xMarket.VO.OrderVO@164516eb, com.stock.xMarket.VO.OrderVO@383fb01b]
""2019-06-28 14:48:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4c7ea4d3]
""2019-06-28 14:48:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:31 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:31 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@700f3607, com.stock.xMarket.VO.OrderVO@102e96c0, com.stock.xMarket.VO.OrderVO@75ef5ea5, com.stock.xMarket.VO.OrderVO@5d494456, com.stock.xMarket.VO.OrderVO@54ffeef6]
""2019-06-28 14:48:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3003fa3f]
""2019-06-28 14:48:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:48:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:32 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:48:32 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@396704d6, com.stock.xMarket.VO.OrderVO@48c66427, com.stock.xMarket.VO.OrderVO@3196b3ba, com.stock.xMarket.VO.OrderVO@1fb6303d, com.stock.xMarket.VO.OrderVO@1ef6d6a9, com.stock.xMarket.VO.OrderVO@656a7e0c, com.stock.xMarket.VO.OrderVO@61650a78, com.stock.xMarket.VO.OrderVO@4f7cf9b1]
""2019-06-28 14:48:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@67173d69]
""2019-06-28 14:48:32 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:40 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:40 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@203320b3, com.stock.xMarket.VO.OrderVO@606adcf0, com.stock.xMarket.VO.OrderVO@37c82c5d, com.stock.xMarket.VO.OrderVO@30296074, com.stock.xMarket.VO.OrderVO@926e87a]
""2019-06-28 14:48:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3f1d38f2]
""2019-06-28 14:48:40 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:41 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:41 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2228aab9, com.stock.xMarket.VO.OrderVO@689589e7, com.stock.xMarket.VO.OrderVO@ef89a07, com.stock.xMarket.VO.OrderVO@4831fcb7, com.stock.xMarket.VO.OrderVO@2fabfa6a]
""2019-06-28 14:48:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6b3594c9]
""2019-06-28 14:48:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:48:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:42 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:48:42 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@63bc5c51, com.stock.xMarket.VO.OrderVO@215b8b9e, com.stock.xMarket.VO.OrderVO@43a125cd, com.stock.xMarket.VO.OrderVO@6bdafc9e, com.stock.xMarket.VO.OrderVO@6a857b60, com.stock.xMarket.VO.OrderVO@177f0ad5, com.stock.xMarket.VO.OrderVO@5d3adaba, com.stock.xMarket.VO.OrderVO@61b8e38f]
""2019-06-28 14:48:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@20a7daa3]
""2019-06-28 14:48:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@24873c8a, com.stock.xMarket.VO.OrderVO@4bcdf59e, com.stock.xMarket.VO.OrderVO@5849bf42, com.stock.xMarket.VO.OrderVO@20d444a2, com.stock.xMarket.VO.OrderVO@3daa4f5e]
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@196f2c70]
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7c810f0e, com.stock.xMarket.VO.OrderVO@3c757501, com.stock.xMarket.VO.OrderVO@76203488, com.stock.xMarket.VO.OrderVO@1862d636, com.stock.xMarket.VO.OrderVO@6c6f534b]
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7b25eeba]
""2019-06-28 14:48:51 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:48:52 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:48:52 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:48:52 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:48:52 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@30594e67, com.stock.xMarket.VO.OrderVO@518a1ba7, com.stock.xMarket.VO.OrderVO@73ede65d, com.stock.xMarket.VO.OrderVO@6674cce0, com.stock.xMarket.VO.OrderVO@1c248c3f, com.stock.xMarket.VO.OrderVO@1d72eb3f, com.stock.xMarket.VO.OrderVO@1b129c2, com.stock.xMarket.VO.OrderVO@41e2e6d8]
""2019-06-28 14:48:52 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:48:52 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@791fcfaf]
""2019-06-28 14:48:52 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@21082348, com.stock.xMarket.VO.OrderVO@20d47f, com.stock.xMarket.VO.OrderVO@4f37f3b6, com.stock.xMarket.VO.OrderVO@7cadcb82, com.stock.xMarket.VO.OrderVO@1c5fa53c]
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1a5a09e4]
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@471c00f9, com.stock.xMarket.VO.OrderVO@a40760d, com.stock.xMarket.VO.OrderVO@7563ac29, com.stock.xMarket.VO.OrderVO@2a7e7da6, com.stock.xMarket.VO.OrderVO@dc2abd8]
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@43b5473]
""2019-06-28 14:49:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:49:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:02 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:49:02 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@50277d66, com.stock.xMarket.VO.OrderVO@77cb7bfa, com.stock.xMarket.VO.OrderVO@13e1987f, com.stock.xMarket.VO.OrderVO@33728f31, com.stock.xMarket.VO.OrderVO@58550874, com.stock.xMarket.VO.OrderVO@74edac2f, com.stock.xMarket.VO.OrderVO@6b50e0ad, com.stock.xMarket.VO.OrderVO@4cfcf1f1]
""2019-06-28 14:49:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3c9a46b2]
""2019-06-28 14:49:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:11 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:11 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1bef1c2b, com.stock.xMarket.VO.OrderVO@25576eb3, com.stock.xMarket.VO.OrderVO@27bebdca, com.stock.xMarket.VO.OrderVO@64cda95, com.stock.xMarket.VO.OrderVO@65a18033]
""2019-06-28 14:49:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7b9d58c2]
""2019-06-28 14:49:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:12 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:12 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4d93ee82, com.stock.xMarket.VO.OrderVO@404ae361, com.stock.xMarket.VO.OrderVO@33825a47, com.stock.xMarket.VO.OrderVO@4300600f, com.stock.xMarket.VO.OrderVO@11b57113]
""2019-06-28 14:49:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f3c9af]
""2019-06-28 14:49:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:49:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:13 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:49:13 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2856ec69, com.stock.xMarket.VO.OrderVO@19b8e816, com.stock.xMarket.VO.OrderVO@678d7649, com.stock.xMarket.VO.OrderVO@c18415b, com.stock.xMarket.VO.OrderVO@1332c115, com.stock.xMarket.VO.OrderVO@4d94733d, com.stock.xMarket.VO.OrderVO@41276bf8, com.stock.xMarket.VO.OrderVO@f7be81e]
""2019-06-28 14:49:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@a44ba8d]
""2019-06-28 14:49:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:21 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:21 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:21 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:21 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@424c13ad, com.stock.xMarket.VO.OrderVO@f41104c, com.stock.xMarket.VO.OrderVO@3920216a, com.stock.xMarket.VO.OrderVO@76a94319, com.stock.xMarket.VO.OrderVO@54dae71a]
""2019-06-28 14:49:21 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:21 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@531e4ebd]
""2019-06-28 14:49:21 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:22 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:22 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@10c7411d, com.stock.xMarket.VO.OrderVO@640e76a6, com.stock.xMarket.VO.OrderVO@395771f2, com.stock.xMarket.VO.OrderVO@5b4b2c8b, com.stock.xMarket.VO.OrderVO@712e4156]
""2019-06-28 14:49:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6682a293]
""2019-06-28 14:49:22 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:49:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:23 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:49:23 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1e4af5ae, com.stock.xMarket.VO.OrderVO@1e4ec5de, com.stock.xMarket.VO.OrderVO@8dd3d61, com.stock.xMarket.VO.OrderVO@7aeecf70, com.stock.xMarket.VO.OrderVO@33c0a206, com.stock.xMarket.VO.OrderVO@5bc8e195, com.stock.xMarket.VO.OrderVO@3a9ff9b8, com.stock.xMarket.VO.OrderVO@360634d4]
""2019-06-28 14:49:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@606080]
""2019-06-28 14:49:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:31 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:31 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4955c963, com.stock.xMarket.VO.OrderVO@558bb5bc, com.stock.xMarket.VO.OrderVO@3c4f3e16, com.stock.xMarket.VO.OrderVO@5e723732, com.stock.xMarket.VO.OrderVO@390be34e]
""2019-06-28 14:49:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@31258786]
""2019-06-28 14:49:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@51919c5f, com.stock.xMarket.VO.OrderVO@545ff240, com.stock.xMarket.VO.OrderVO@793b5fdc, com.stock.xMarket.VO.OrderVO@b4fb759, com.stock.xMarket.VO.OrderVO@56e1a10b]
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7d078465]
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2bb72da3, com.stock.xMarket.VO.OrderVO@4b406802, com.stock.xMarket.VO.OrderVO@19a1badf, com.stock.xMarket.VO.OrderVO@703b3940, com.stock.xMarket.VO.OrderVO@62f3d8d1, com.stock.xMarket.VO.OrderVO@2a3bacf5, com.stock.xMarket.VO.OrderVO@3e588c2f, com.stock.xMarket.VO.OrderVO@1700539d]
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6bc934fc]
""2019-06-28 14:49:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:41 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:41 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1180b97f, com.stock.xMarket.VO.OrderVO@6f2fda1b, com.stock.xMarket.VO.OrderVO@4e941342, com.stock.xMarket.VO.OrderVO@16096c67, com.stock.xMarket.VO.OrderVO@2566498]
""2019-06-28 14:49:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@133899cb]
""2019-06-28 14:49:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@42addcca, com.stock.xMarket.VO.OrderVO@6c003ec1, com.stock.xMarket.VO.OrderVO@56c636be, com.stock.xMarket.VO.OrderVO@7530c488, com.stock.xMarket.VO.OrderVO@59d70d68]
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@34ccd6a5]
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@567757ae, com.stock.xMarket.VO.OrderVO@1028bcab, com.stock.xMarket.VO.OrderVO@72cf773d, com.stock.xMarket.VO.OrderVO@1073c43b, com.stock.xMarket.VO.OrderVO@7c553bbc, com.stock.xMarket.VO.OrderVO@294d1d79, com.stock.xMarket.VO.OrderVO@20b2e1f2, com.stock.xMarket.VO.OrderVO@2eeeabc3]
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7bb3fd79]
""2019-06-28 14:49:43 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:51 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:51 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:51 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:51 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6c422944, com.stock.xMarket.VO.OrderVO@8417faf, com.stock.xMarket.VO.OrderVO@8a04a80, com.stock.xMarket.VO.OrderVO@1e542b8, com.stock.xMarket.VO.OrderVO@7c1043c9]
""2019-06-28 14:49:51 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:51 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7f2fe7e3]
""2019-06-28 14:49:51 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:49:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:53 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:49:53 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1c57a12c, com.stock.xMarket.VO.OrderVO@c36dd62, com.stock.xMarket.VO.OrderVO@5e7a4940, com.stock.xMarket.VO.OrderVO@6aa0db91, com.stock.xMarket.VO.OrderVO@4bdf4928]
""2019-06-28 14:49:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71b850fc]
""2019-06-28 14:49:53 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:49:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:49:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:49:54 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:49:54 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@71db28b5, com.stock.xMarket.VO.OrderVO@70c528d9, com.stock.xMarket.VO.OrderVO@785c9bc3, com.stock.xMarket.VO.OrderVO@76f83cc1, com.stock.xMarket.VO.OrderVO@5e4e3c2b, com.stock.xMarket.VO.OrderVO@71444db, com.stock.xMarket.VO.OrderVO@1b0a4579, com.stock.xMarket.VO.OrderVO@2c237ced]
""2019-06-28 14:49:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:49:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@323a226]
""2019-06-28 14:49:54 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:01 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:01 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5d9159c6, com.stock.xMarket.VO.OrderVO@48a3b07b, com.stock.xMarket.VO.OrderVO@6a5a5ae, com.stock.xMarket.VO.OrderVO@1c50d73f, com.stock.xMarket.VO.OrderVO@4bd8f21a]
""2019-06-28 14:50:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1eadb372]
""2019-06-28 14:50:01 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@682fc74, com.stock.xMarket.VO.OrderVO@7b9cb92e, com.stock.xMarket.VO.OrderVO@740a9c10, com.stock.xMarket.VO.OrderVO@618ccf1d, com.stock.xMarket.VO.OrderVO@707cfe04]
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6e377cec]
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5eb942df, com.stock.xMarket.VO.OrderVO@f195d42, com.stock.xMarket.VO.OrderVO@7402f9bd, com.stock.xMarket.VO.OrderVO@7495bdd3, com.stock.xMarket.VO.OrderVO@60aea624, com.stock.xMarket.VO.OrderVO@2518043e, com.stock.xMarket.VO.OrderVO@4634ce31, com.stock.xMarket.VO.OrderVO@1f969801]
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@a9c9251]
""2019-06-28 14:50:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:11 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:11 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@196f1dc1, com.stock.xMarket.VO.OrderVO@157a00e3, com.stock.xMarket.VO.OrderVO@61fd97b4, com.stock.xMarket.VO.OrderVO@492582b8, com.stock.xMarket.VO.OrderVO@28450f48]
""2019-06-28 14:50:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6d7d6fbb]
""2019-06-28 14:50:11 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@302c96c, com.stock.xMarket.VO.OrderVO@429b2510, com.stock.xMarket.VO.OrderVO@6f6edd64, com.stock.xMarket.VO.OrderVO@437e0b5a, com.stock.xMarket.VO.OrderVO@56a2e3f0]
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4d8aef91]
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@33f9da15, com.stock.xMarket.VO.OrderVO@dbac3e9, com.stock.xMarket.VO.OrderVO@336ab66, com.stock.xMarket.VO.OrderVO@36b6dc5c, com.stock.xMarket.VO.OrderVO@4b6281ed, com.stock.xMarket.VO.OrderVO@101cb6e3, com.stock.xMarket.VO.OrderVO@2647421d, com.stock.xMarket.VO.OrderVO@26932eb5]
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7921be63]
""2019-06-28 14:50:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:21 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:21 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6c0b36d9, com.stock.xMarket.VO.OrderVO@2f262ff9, com.stock.xMarket.VO.OrderVO@392438be, com.stock.xMarket.VO.OrderVO@593a5645, com.stock.xMarket.VO.OrderVO@6c321e45]
""2019-06-28 14:50:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72f5bddd]
""2019-06-28 14:50:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@360b0f11, com.stock.xMarket.VO.OrderVO@6fe6ec66, com.stock.xMarket.VO.OrderVO@67e50ed3, com.stock.xMarket.VO.OrderVO@12bad0ed, com.stock.xMarket.VO.OrderVO@7ca7362c, com.stock.xMarket.VO.OrderVO@24fa7002, com.stock.xMarket.VO.OrderVO@6ba671d8, com.stock.xMarket.VO.OrderVO@2fdfe9f9]
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a0cbc78]
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1d8979ae, com.stock.xMarket.VO.OrderVO@73e10814, com.stock.xMarket.VO.OrderVO@2b7c6a75, com.stock.xMarket.VO.OrderVO@7dba012a, com.stock.xMarket.VO.OrderVO@2b28433a]
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@50725fe3]
""2019-06-28 14:50:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:31 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:31 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@67850f55, com.stock.xMarket.VO.OrderVO@e301626, com.stock.xMarket.VO.OrderVO@5d533dba, com.stock.xMarket.VO.OrderVO@741d416a, com.stock.xMarket.VO.OrderVO@3bad071b]
""2019-06-28 14:50:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@35a2b76e]
""2019-06-28 14:50:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1f917f47, com.stock.xMarket.VO.OrderVO@1af0a8e9, com.stock.xMarket.VO.OrderVO@17d26429, com.stock.xMarket.VO.OrderVO@11087060, com.stock.xMarket.VO.OrderVO@5f74e41, com.stock.xMarket.VO.OrderVO@1adf19f6, com.stock.xMarket.VO.OrderVO@1e28d5a8, com.stock.xMarket.VO.OrderVO@4c713d7d]
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@734bf7f4]
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@32b97456, com.stock.xMarket.VO.OrderVO@15b0ddba, com.stock.xMarket.VO.OrderVO@3aa850e, com.stock.xMarket.VO.OrderVO@615c6a71, com.stock.xMarket.VO.OrderVO@183ea9c8]
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@bf0ea78]
""2019-06-28 14:50:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:42 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:42 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@428c0ef1, com.stock.xMarket.VO.OrderVO@721c0ae4, com.stock.xMarket.VO.OrderVO@6e6ff179, com.stock.xMarket.VO.OrderVO@6ee69ed4, com.stock.xMarket.VO.OrderVO@4c3ffe7f]
""2019-06-28 14:50:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5e668636]
""2019-06-28 14:50:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6c0e1c7c, com.stock.xMarket.VO.OrderVO@5483513b, com.stock.xMarket.VO.OrderVO@43b36103, com.stock.xMarket.VO.OrderVO@33a872e, com.stock.xMarket.VO.OrderVO@1f4b86c9, com.stock.xMarket.VO.OrderVO@510f0692, com.stock.xMarket.VO.OrderVO@96ccec9, com.stock.xMarket.VO.OrderVO@5e382b3d]
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d0683fd]
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7506651b, com.stock.xMarket.VO.OrderVO@eefa43, com.stock.xMarket.VO.OrderVO@359f6c8f, com.stock.xMarket.VO.OrderVO@32df1570, com.stock.xMarket.VO.OrderVO@74b7908d]
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@37c50ba]
""2019-06-28 14:50:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:52 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:52 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@a1f0170, com.stock.xMarket.VO.OrderVO@558d725c, com.stock.xMarket.VO.OrderVO@6839b000, com.stock.xMarket.VO.OrderVO@766c35d4, com.stock.xMarket.VO.OrderVO@48abee8]
""2019-06-28 14:50:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3aab33b7]
""2019-06-28 14:50:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@35afec92, com.stock.xMarket.VO.OrderVO@41ad6a29, com.stock.xMarket.VO.OrderVO@7435d425, com.stock.xMarket.VO.OrderVO@55bc497b, com.stock.xMarket.VO.OrderVO@1f3df422, com.stock.xMarket.VO.OrderVO@356b29ce, com.stock.xMarket.VO.OrderVO@6fa557ba, com.stock.xMarket.VO.OrderVO@58e52ca4]
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@28895f7e]
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@250c35ed, com.stock.xMarket.VO.OrderVO@4c09af33, com.stock.xMarket.VO.OrderVO@3319a686, com.stock.xMarket.VO.OrderVO@1b06e8b5, com.stock.xMarket.VO.OrderVO@5f610565]
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5e90498d]
""2019-06-28 14:50:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/cancelOrder", parameters={masked}
""2019-06-28 14:50:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.cancelOrder(long) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:50:57 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的orderId：1561704180429
""2019-06-28 14:50:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@358b4933]
""2019-06-28 14:50:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:50:57 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561704657580,"sellPoint":false,"tradeOrderId":1561704657580,"buyPoint":true,"exchangeAmount":100,"buyerId":1006,"sellOrderId":-1,"sellerId":-1,"buyOrderId":1561704180429,"stockId":"600000","time":1561704657580,"tradePrice":-1.0,"tradeType":-1} 
""2019-06-28 14:50:57 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@5c5bba7e 
""2019-06-28 14:50:57 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单1561704180429撤单
""2019-06-28 14:50:57 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561704180429 的委托买单已被撤单，成交单存入数据库
""2019-06-28 14:50:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:50:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:50:58 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:50:58 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@67295b, com.stock.xMarket.VO.OrderVO@775a56d2, com.stock.xMarket.VO.OrderVO@5d37698b, com.stock.xMarket.VO.OrderVO@6bd574e4, com.stock.xMarket.VO.OrderVO@52c1a534, com.stock.xMarket.VO.OrderVO@77888578, com.stock.xMarket.VO.OrderVO@1195d133, com.stock.xMarket.VO.OrderVO@5127e5b1]
""2019-06-28 14:50:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:50:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@e9002a4]
""2019-06-28 14:50:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:02 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:02 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:02 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:02 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@13b2870d, com.stock.xMarket.VO.OrderVO@7d43f2dc, com.stock.xMarket.VO.OrderVO@2f2c4d99, com.stock.xMarket.VO.OrderVO@72557649, com.stock.xMarket.VO.OrderVO@75d81de1]
""2019-06-28 14:51:02 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:02 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@176fd494]
""2019-06-28 14:51:02 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:05 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:05 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@121a6a55, com.stock.xMarket.VO.OrderVO@3034b89e, com.stock.xMarket.VO.OrderVO@7a08d5aa, com.stock.xMarket.VO.OrderVO@24b38ee5, com.stock.xMarket.VO.OrderVO@653a10e4, com.stock.xMarket.VO.OrderVO@705fa495, com.stock.xMarket.VO.OrderVO@4c469ab1, com.stock.xMarket.VO.OrderVO@74baf17a]
""2019-06-28 14:51:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@41b27239]
""2019-06-28 14:51:05 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:06 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:06 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@49f476ab, com.stock.xMarket.VO.OrderVO@1e7d6b63, com.stock.xMarket.VO.OrderVO@115ed05d, com.stock.xMarket.VO.OrderVO@60e83a8, com.stock.xMarket.VO.OrderVO@6ca5fcec]
""2019-06-28 14:51:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1976a468]
""2019-06-28 14:51:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:08 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:08 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@42f7f6f7, com.stock.xMarket.VO.OrderVO@5d6ae0e9, com.stock.xMarket.VO.OrderVO@53452359, com.stock.xMarket.VO.OrderVO@740cde24, com.stock.xMarket.VO.OrderVO@9b1ce1c, com.stock.xMarket.VO.OrderVO@3560a6b, com.stock.xMarket.VO.OrderVO@7973aeb3, com.stock.xMarket.VO.OrderVO@6b1cb247]
""2019-06-28 14:51:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6c5a5016]
""2019-06-28 14:51:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:12 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:12 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4e9cf000, com.stock.xMarket.VO.OrderVO@5135ffc1, com.stock.xMarket.VO.OrderVO@49e3d47a, com.stock.xMarket.VO.OrderVO@821675f, com.stock.xMarket.VO.OrderVO@21148aab]
""2019-06-28 14:51:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5f21b2bf]
""2019-06-28 14:51:12 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:15 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:15 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5b495238, com.stock.xMarket.VO.OrderVO@580c6ada, com.stock.xMarket.VO.OrderVO@23e80a05, com.stock.xMarket.VO.OrderVO@75db974b, com.stock.xMarket.VO.OrderVO@6412d35a, com.stock.xMarket.VO.OrderVO@5ff33fb8, com.stock.xMarket.VO.OrderVO@3c28be61, com.stock.xMarket.VO.OrderVO@15e00760]
""2019-06-28 14:51:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@679a8e85]
""2019-06-28 14:51:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:16 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:16 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1ab5b6d7, com.stock.xMarket.VO.OrderVO@19b772a1, com.stock.xMarket.VO.OrderVO@483e768a, com.stock.xMarket.VO.OrderVO@2190d400, com.stock.xMarket.VO.OrderVO@1624ddeb]
""2019-06-28 14:51:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@342497f4]
""2019-06-28 14:51:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:18 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:18 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4af5edb4, com.stock.xMarket.VO.OrderVO@4481ade8, com.stock.xMarket.VO.OrderVO@7dbc87c4, com.stock.xMarket.VO.OrderVO@258d7ab3, com.stock.xMarket.VO.OrderVO@4070bbfb, com.stock.xMarket.VO.OrderVO@9d7a0f0, com.stock.xMarket.VO.OrderVO@104c94a9, com.stock.xMarket.VO.OrderVO@5eda3cf1]
""2019-06-28 14:51:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b30fbb2]
""2019-06-28 14:51:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:22 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:22 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:22 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:22 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2322dc30, com.stock.xMarket.VO.OrderVO@775f5798, com.stock.xMarket.VO.OrderVO@4ad79459, com.stock.xMarket.VO.OrderVO@48f44e58, com.stock.xMarket.VO.OrderVO@7d82d82a]
""2019-06-28 14:51:22 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:22 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@70ecb395]
""2019-06-28 14:51:22 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:25 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:25 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@73b27f12, com.stock.xMarket.VO.OrderVO@7a839cd, com.stock.xMarket.VO.OrderVO@7afc837e, com.stock.xMarket.VO.OrderVO@3e110c5a, com.stock.xMarket.VO.OrderVO@5e3bbe65, com.stock.xMarket.VO.OrderVO@181b923e, com.stock.xMarket.VO.OrderVO@6621530, com.stock.xMarket.VO.OrderVO@3027ba7a]
""2019-06-28 14:51:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@33ece28d]
""2019-06-28 14:51:25 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:26 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:26 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6f573786, com.stock.xMarket.VO.OrderVO@26a7e5cf, com.stock.xMarket.VO.OrderVO@76adbd0c, com.stock.xMarket.VO.OrderVO@526c18ce, com.stock.xMarket.VO.OrderVO@4d1fe02]
""2019-06-28 14:51:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d41eaca]
""2019-06-28 14:51:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:29 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:29 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@8e3bda7, com.stock.xMarket.VO.OrderVO@384bfb9c, com.stock.xMarket.VO.OrderVO@67e86241, com.stock.xMarket.VO.OrderVO@4a11e37, com.stock.xMarket.VO.OrderVO@11ba8581, com.stock.xMarket.VO.OrderVO@764a1b31, com.stock.xMarket.VO.OrderVO@529495d3, com.stock.xMarket.VO.OrderVO@5e487910]
""2019-06-28 14:51:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b9b69d5]
""2019-06-28 14:51:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:32 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:32 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:32 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:32 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@786f491, com.stock.xMarket.VO.OrderVO@48bd0cda, com.stock.xMarket.VO.OrderVO@146b3a0a, com.stock.xMarket.VO.OrderVO@38c967b5, com.stock.xMarket.VO.OrderVO@85b2e41]
""2019-06-28 14:51:32 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:32 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2820284c]
""2019-06-28 14:51:32 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:35 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:35 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:35 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:35 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@35f87f6, com.stock.xMarket.VO.OrderVO@4ac9cbe2, com.stock.xMarket.VO.OrderVO@516df31b, com.stock.xMarket.VO.OrderVO@5cd029cf, com.stock.xMarket.VO.OrderVO@234f6594, com.stock.xMarket.VO.OrderVO@27dd2cc4, com.stock.xMarket.VO.OrderVO@1916f60f, com.stock.xMarket.VO.OrderVO@44d53ab3]
""2019-06-28 14:51:35 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:35 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1cee9478]
""2019-06-28 14:51:35 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:37 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:37 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5322c403, com.stock.xMarket.VO.OrderVO@2d967aef, com.stock.xMarket.VO.OrderVO@1a90021d, com.stock.xMarket.VO.OrderVO@7abded68, com.stock.xMarket.VO.OrderVO@3f7a2ce0]
""2019-06-28 14:51:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@21a568e2]
""2019-06-28 14:51:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:39 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:39 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@a120e82, com.stock.xMarket.VO.OrderVO@af86759, com.stock.xMarket.VO.OrderVO@11c9a4d2, com.stock.xMarket.VO.OrderVO@224e3e15, com.stock.xMarket.VO.OrderVO@383252c0, com.stock.xMarket.VO.OrderVO@71392830, com.stock.xMarket.VO.OrderVO@2d0afdf1, com.stock.xMarket.VO.OrderVO@7e67c0d3]
""2019-06-28 14:51:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@54e9398d]
""2019-06-28 14:51:39 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:42 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:42 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:42 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:42 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@796f6604, com.stock.xMarket.VO.OrderVO@63e51f7d, com.stock.xMarket.VO.OrderVO@58373837, com.stock.xMarket.VO.OrderVO@61b7c43a, com.stock.xMarket.VO.OrderVO@63eac14e]
""2019-06-28 14:51:42 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:42 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@283f34b9]
""2019-06-28 14:51:42 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:45 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:45 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7093607a, com.stock.xMarket.VO.OrderVO@705e5050, com.stock.xMarket.VO.OrderVO@6b9a9217, com.stock.xMarket.VO.OrderVO@47071474, com.stock.xMarket.VO.OrderVO@2c7c3c5e, com.stock.xMarket.VO.OrderVO@2e222551, com.stock.xMarket.VO.OrderVO@119700a8, com.stock.xMarket.VO.OrderVO@6e4c025a]
""2019-06-28 14:51:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@239f4d01]
""2019-06-28 14:51:45 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:47 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:47 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5ef4ca39, com.stock.xMarket.VO.OrderVO@52a342c6, com.stock.xMarket.VO.OrderVO@54f1d1b4, com.stock.xMarket.VO.OrderVO@182021de, com.stock.xMarket.VO.OrderVO@60fd85e1]
""2019-06-28 14:51:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@28004e4a]
""2019-06-28 14:51:47 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:49 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:49 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@287e9084, com.stock.xMarket.VO.OrderVO@36f25f54, com.stock.xMarket.VO.OrderVO@1e64b9cb, com.stock.xMarket.VO.OrderVO@3c6d1150, com.stock.xMarket.VO.OrderVO@60cb4ce9, com.stock.xMarket.VO.OrderVO@4467a75b, com.stock.xMarket.VO.OrderVO@7f76e4fd, com.stock.xMarket.VO.OrderVO@2b458dd2]
""2019-06-28 14:51:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@11532057]
""2019-06-28 14:51:49 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:52 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:52 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@46ef8524, com.stock.xMarket.VO.OrderVO@14a0f7d6, com.stock.xMarket.VO.OrderVO@15bbd723, com.stock.xMarket.VO.OrderVO@6c9ef31e, com.stock.xMarket.VO.OrderVO@56629d0c]
""2019-06-28 14:51:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@45efce51]
""2019-06-28 14:51:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:51:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:55 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:51:55 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@19880ca6, com.stock.xMarket.VO.OrderVO@3a954413, com.stock.xMarket.VO.OrderVO@1018c090, com.stock.xMarket.VO.OrderVO@4c8f818f, com.stock.xMarket.VO.OrderVO@15bb5984, com.stock.xMarket.VO.OrderVO@59e22fc, com.stock.xMarket.VO.OrderVO@53d47e9f, com.stock.xMarket.VO.OrderVO@63670e93]
""2019-06-28 14:51:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2c5f0c02]
""2019-06-28 14:51:55 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:51:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:51:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:51:57 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:51:57 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@30367846, com.stock.xMarket.VO.OrderVO@433e2bfd, com.stock.xMarket.VO.OrderVO@41b15d27, com.stock.xMarket.VO.OrderVO@5d79f494, com.stock.xMarket.VO.OrderVO@5e8e5335]
""2019-06-28 14:51:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:51:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6cddeada]
""2019-06-28 14:51:57 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:00 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:00 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:00 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:00 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1a38f23a, com.stock.xMarket.VO.OrderVO@5d0eabd2, com.stock.xMarket.VO.OrderVO@6a083f7e, com.stock.xMarket.VO.OrderVO@2a6f5d94, com.stock.xMarket.VO.OrderVO@779bc3c1, com.stock.xMarket.VO.OrderVO@5fe3b6db, com.stock.xMarket.VO.OrderVO@743b9196, com.stock.xMarket.VO.OrderVO@2468f178]
""2019-06-28 14:52:00 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:00 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@dc4bbff]
""2019-06-28 14:52:00 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:02 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:02 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2bdba31, com.stock.xMarket.VO.OrderVO@145dbe2f, com.stock.xMarket.VO.OrderVO@653d14b8, com.stock.xMarket.VO.OrderVO@15983f53, com.stock.xMarket.VO.OrderVO@7a1b63e3]
""2019-06-28 14:52:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3ce1649]
""2019-06-28 14:52:02 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:05 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:05 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@61108444, com.stock.xMarket.VO.OrderVO@57e2e40a, com.stock.xMarket.VO.OrderVO@50f847e, com.stock.xMarket.VO.OrderVO@59849c08, com.stock.xMarket.VO.OrderVO@3cd301d8, com.stock.xMarket.VO.OrderVO@7cd170fc, com.stock.xMarket.VO.OrderVO@584376c, com.stock.xMarket.VO.OrderVO@789d9f08]
""2019-06-28 14:52:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5ce49c02]
""2019-06-28 14:52:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:08 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:08 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:08 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:08 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@48917749, com.stock.xMarket.VO.OrderVO@66ed072d, com.stock.xMarket.VO.OrderVO@3f11ce20, com.stock.xMarket.VO.OrderVO@7d1b0fab, com.stock.xMarket.VO.OrderVO@3e73047e]
""2019-06-28 14:52:08 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:08 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@30a9a8f2]
""2019-06-28 14:52:08 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:10 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:10 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@273496da, com.stock.xMarket.VO.OrderVO@4dbdee37, com.stock.xMarket.VO.OrderVO@2ef5d867, com.stock.xMarket.VO.OrderVO@619c1a17, com.stock.xMarket.VO.OrderVO@629dc2b8, com.stock.xMarket.VO.OrderVO@4073548a, com.stock.xMarket.VO.OrderVO@40c58a03, com.stock.xMarket.VO.OrderVO@41887cae]
""2019-06-28 14:52:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4d8cee25]
""2019-06-28 14:52:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:12 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:12 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@29715044, com.stock.xMarket.VO.OrderVO@2893a796, com.stock.xMarket.VO.OrderVO@e4fc23e, com.stock.xMarket.VO.OrderVO@111b7122, com.stock.xMarket.VO.OrderVO@32cbe035]
""2019-06-28 14:52:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7514eed]
""2019-06-28 14:52:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:15 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:15 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3664294c, com.stock.xMarket.VO.OrderVO@56fc72f2, com.stock.xMarket.VO.OrderVO@19fef6f8, com.stock.xMarket.VO.OrderVO@448d308e, com.stock.xMarket.VO.OrderVO@53b45f1a, com.stock.xMarket.VO.OrderVO@66eadc7c, com.stock.xMarket.VO.OrderVO@84daf6f, com.stock.xMarket.VO.OrderVO@2569f7a8]
""2019-06-28 14:52:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@54d42090]
""2019-06-28 14:52:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:18 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:18 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@9178744, com.stock.xMarket.VO.OrderVO@3ac5525d, com.stock.xMarket.VO.OrderVO@6bf58189, com.stock.xMarket.VO.OrderVO@6fc95fcc, com.stock.xMarket.VO.OrderVO@5a51d8d6]
""2019-06-28 14:52:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4a162e7b]
""2019-06-28 14:52:18 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:20 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:20 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3fc98196, com.stock.xMarket.VO.OrderVO@392cc949, com.stock.xMarket.VO.OrderVO@6b8df8f6, com.stock.xMarket.VO.OrderVO@4fa3a20c, com.stock.xMarket.VO.OrderVO@3c155f5f, com.stock.xMarket.VO.OrderVO@632cbf15, com.stock.xMarket.VO.OrderVO@6762b1ce, com.stock.xMarket.VO.OrderVO@3583ccec]
""2019-06-28 14:52:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@23fa82a4]
""2019-06-28 14:52:20 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:22 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:22 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@54ef12ba, com.stock.xMarket.VO.OrderVO@66b8e2dd, com.stock.xMarket.VO.OrderVO@5a11747e, com.stock.xMarket.VO.OrderVO@152a3c43, com.stock.xMarket.VO.OrderVO@39fc869e]
""2019-06-28 14:52:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@18733576]
""2019-06-28 14:52:22 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:25 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:25 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@71ca1f11, com.stock.xMarket.VO.OrderVO@5d83fc00, com.stock.xMarket.VO.OrderVO@503be5b5, com.stock.xMarket.VO.OrderVO@3c041c72, com.stock.xMarket.VO.OrderVO@1d17ae74, com.stock.xMarket.VO.OrderVO@5fb6222a, com.stock.xMarket.VO.OrderVO@502f7224, com.stock.xMarket.VO.OrderVO@4c5403df]
""2019-06-28 14:52:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6c10602f]
""2019-06-28 14:52:25 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:28 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:28 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@39f750a0, com.stock.xMarket.VO.OrderVO@151f3b5, com.stock.xMarket.VO.OrderVO@5c64c1a2, com.stock.xMarket.VO.OrderVO@69883f5, com.stock.xMarket.VO.OrderVO@5e9b1d6]
""2019-06-28 14:52:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@b2b3685]
""2019-06-28 14:52:28 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:31 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:31 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:31 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:31 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@61417155, com.stock.xMarket.VO.OrderVO@299f2c38, com.stock.xMarket.VO.OrderVO@721f87e, com.stock.xMarket.VO.OrderVO@3f68d862, com.stock.xMarket.VO.OrderVO@55c9cd03, com.stock.xMarket.VO.OrderVO@567d56e, com.stock.xMarket.VO.OrderVO@d0d3fb4, com.stock.xMarket.VO.OrderVO@74df4dbf]
""2019-06-28 14:52:31 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:31 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f6527f2]
""2019-06-28 14:52:31 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:32 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:32 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:32 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:32 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@565d2477, com.stock.xMarket.VO.OrderVO@6c371c1b, com.stock.xMarket.VO.OrderVO@2cbdb94f, com.stock.xMarket.VO.OrderVO@780bc9bd, com.stock.xMarket.VO.OrderVO@474a2457]
""2019-06-28 14:52:32 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:32 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@13493f61]
""2019-06-28 14:52:32 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:35 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:35 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@75f336c3, com.stock.xMarket.VO.OrderVO@11ee45b9, com.stock.xMarket.VO.OrderVO@5c0ccabc, com.stock.xMarket.VO.OrderVO@1551a694, com.stock.xMarket.VO.OrderVO@79f8cfd3, com.stock.xMarket.VO.OrderVO@1ad89ed8, com.stock.xMarket.VO.OrderVO@203bee15, com.stock.xMarket.VO.OrderVO@38c69980]
""2019-06-28 14:52:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@77f4f1c]
""2019-06-28 14:52:35 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:39 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:39 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@405332a, com.stock.xMarket.VO.OrderVO@1ad24224, com.stock.xMarket.VO.OrderVO@768c6c32, com.stock.xMarket.VO.OrderVO@5114bc65, com.stock.xMarket.VO.OrderVO@7ca5490e]
""2019-06-28 14:52:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@74eee7dc]
""2019-06-28 14:52:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:41 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:41 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@c498336, com.stock.xMarket.VO.OrderVO@6d088eb6, com.stock.xMarket.VO.OrderVO@6489f14d, com.stock.xMarket.VO.OrderVO@6edae0a, com.stock.xMarket.VO.OrderVO@467dddd2, com.stock.xMarket.VO.OrderVO@6f299695, com.stock.xMarket.VO.OrderVO@440101a4, com.stock.xMarket.VO.OrderVO@2f776ad0]
""2019-06-28 14:52:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@74ca1a1]
""2019-06-28 14:52:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:42 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:42 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@431faf4d, com.stock.xMarket.VO.OrderVO@38637956, com.stock.xMarket.VO.OrderVO@2825a94d, com.stock.xMarket.VO.OrderVO@717365a8, com.stock.xMarket.VO.OrderVO@4fa8d90c]
""2019-06-28 14:52:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6c22b066]
""2019-06-28 14:52:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:45 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:45 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:45 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:45 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@56f9af06, com.stock.xMarket.VO.OrderVO@4f503a24, com.stock.xMarket.VO.OrderVO@33b20c45, com.stock.xMarket.VO.OrderVO@6afc8630, com.stock.xMarket.VO.OrderVO@716695f6, com.stock.xMarket.VO.OrderVO@3fa900e4, com.stock.xMarket.VO.OrderVO@1c5af370, com.stock.xMarket.VO.OrderVO@12193bcd]
""2019-06-28 14:52:45 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:45 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5795c55d]
""2019-06-28 14:52:45 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:49 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:49 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:49 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:49 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@411b1a66, com.stock.xMarket.VO.OrderVO@535cecef, com.stock.xMarket.VO.OrderVO@5deeb5de, com.stock.xMarket.VO.OrderVO@4b63b79, com.stock.xMarket.VO.OrderVO@1de7d9a3]
""2019-06-28 14:52:49 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:49 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@29686564]
""2019-06-28 14:52:49 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:51 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:51 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2fe62a02, com.stock.xMarket.VO.OrderVO@4f24e07f, com.stock.xMarket.VO.OrderVO@7d29ef65, com.stock.xMarket.VO.OrderVO@59eb2260, com.stock.xMarket.VO.OrderVO@4743b565, com.stock.xMarket.VO.OrderVO@2f0c92ea, com.stock.xMarket.VO.OrderVO@1d6c12a9, com.stock.xMarket.VO.OrderVO@1d14db46]
""2019-06-28 14:52:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4726ad1c]
""2019-06-28 14:52:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:52:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:52 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:52:52 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6dd0ad35, com.stock.xMarket.VO.OrderVO@458f65b7, com.stock.xMarket.VO.OrderVO@66a025f3, com.stock.xMarket.VO.OrderVO@4418d4a0, com.stock.xMarket.VO.OrderVO@2cc96013]
""2019-06-28 14:52:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@12551ae0]
""2019-06-28 14:52:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:52:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:52:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:52:55 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:52:55 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4ac99293, com.stock.xMarket.VO.OrderVO@3369a74c, com.stock.xMarket.VO.OrderVO@1b052f50, com.stock.xMarket.VO.OrderVO@22e35acc, com.stock.xMarket.VO.OrderVO@24b80909, com.stock.xMarket.VO.OrderVO@5a159915, com.stock.xMarket.VO.OrderVO@685852a8, com.stock.xMarket.VO.OrderVO@50554055]
""2019-06-28 14:52:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:52:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3441eb17]
""2019-06-28 14:52:55 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:00 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:00 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@ed8a6f8, com.stock.xMarket.VO.OrderVO@4289b37e, com.stock.xMarket.VO.OrderVO@632d7767, com.stock.xMarket.VO.OrderVO@771dd194, com.stock.xMarket.VO.OrderVO@3c3946e9]
""2019-06-28 14:53:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@33241053]
""2019-06-28 14:53:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@9a9af7f, com.stock.xMarket.VO.OrderVO@71df8600, com.stock.xMarket.VO.OrderVO@1c9ad705, com.stock.xMarket.VO.OrderVO@22cbb640, com.stock.xMarket.VO.OrderVO@66dd2731, com.stock.xMarket.VO.OrderVO@6bbf426c, com.stock.xMarket.VO.OrderVO@21d782e1, com.stock.xMarket.VO.OrderVO@5e51592d]
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@513a1979]
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3f4579af, com.stock.xMarket.VO.OrderVO@6c5c2c9f, com.stock.xMarket.VO.OrderVO@24d17442, com.stock.xMarket.VO.OrderVO@695ffd2e, com.stock.xMarket.VO.OrderVO@7dc369ab]
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@70769a58]
""2019-06-28 14:53:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:05 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:05 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@58d2c4fa, com.stock.xMarket.VO.OrderVO@77e70d84, com.stock.xMarket.VO.OrderVO@35da3ba7, com.stock.xMarket.VO.OrderVO@61c06272, com.stock.xMarket.VO.OrderVO@2f7b9fa4, com.stock.xMarket.VO.OrderVO@603f2ce2, com.stock.xMarket.VO.OrderVO@4dc2441, com.stock.xMarket.VO.OrderVO@66ed155a]
""2019-06-28 14:53:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1518209c]
""2019-06-28 14:53:05 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:10 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:10 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5e6e6c70, com.stock.xMarket.VO.OrderVO@595f4eaa, com.stock.xMarket.VO.OrderVO@786e7162, com.stock.xMarket.VO.OrderVO@37894a6e, com.stock.xMarket.VO.OrderVO@1aa9ad03]
""2019-06-28 14:53:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@39209ae2]
""2019-06-28 14:53:10 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2b570704, com.stock.xMarket.VO.OrderVO@581ee2a2, com.stock.xMarket.VO.OrderVO@28980607, com.stock.xMarket.VO.OrderVO@710d1bd8, com.stock.xMarket.VO.OrderVO@62714dda, com.stock.xMarket.VO.OrderVO@4dd5a8c4, com.stock.xMarket.VO.OrderVO@25953747, com.stock.xMarket.VO.OrderVO@3cdf2bf6]
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@54a8ae2a]
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3708ae7a, com.stock.xMarket.VO.OrderVO@237de209, com.stock.xMarket.VO.OrderVO@36327c0a, com.stock.xMarket.VO.OrderVO@12e06b9, com.stock.xMarket.VO.OrderVO@73a70398]
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3f86da4f]
""2019-06-28 14:53:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:15 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:15 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@21757241, com.stock.xMarket.VO.OrderVO@47f257b3, com.stock.xMarket.VO.OrderVO@7d8ecab4, com.stock.xMarket.VO.OrderVO@3472918a, com.stock.xMarket.VO.OrderVO@3e9f1a3f, com.stock.xMarket.VO.OrderVO@6b858d90, com.stock.xMarket.VO.OrderVO@60d5213e, com.stock.xMarket.VO.OrderVO@400b126f]
""2019-06-28 14:53:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@603b6b3]
""2019-06-28 14:53:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@53c7e973, com.stock.xMarket.VO.OrderVO@2a1c64b, com.stock.xMarket.VO.OrderVO@36cea5c5, com.stock.xMarket.VO.OrderVO@115897db, com.stock.xMarket.VO.OrderVO@7d3868f2]
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71277a80]
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@393a2b9d, com.stock.xMarket.VO.OrderVO@28d304a9, com.stock.xMarket.VO.OrderVO@41a318b8, com.stock.xMarket.VO.OrderVO@54bbcc1, com.stock.xMarket.VO.OrderVO@6dc51936, com.stock.xMarket.VO.OrderVO@5d03be6b, com.stock.xMarket.VO.OrderVO@4bc1bab, com.stock.xMarket.VO.OrderVO@5c490249]
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1980ac5f]
""2019-06-28 14:53:22 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:23 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:23 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4b4a25b3, com.stock.xMarket.VO.OrderVO@63a89f90, com.stock.xMarket.VO.OrderVO@1298368f, com.stock.xMarket.VO.OrderVO@6405ee7d, com.stock.xMarket.VO.OrderVO@7e7828f3]
""2019-06-28 14:53:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@590b7cb3]
""2019-06-28 14:53:23 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:26 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:26 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5d5eb932, com.stock.xMarket.VO.OrderVO@4070863a, com.stock.xMarket.VO.OrderVO@2734de25, com.stock.xMarket.VO.OrderVO@1f6a7a30, com.stock.xMarket.VO.OrderVO@3755d7c6, com.stock.xMarket.VO.OrderVO@7350c640, com.stock.xMarket.VO.OrderVO@7214fbf9, com.stock.xMarket.VO.OrderVO@3e63a471]
""2019-06-28 14:53:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2711af9c]
""2019-06-28 14:53:26 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2eb47455, com.stock.xMarket.VO.OrderVO@62394909, com.stock.xMarket.VO.OrderVO@54fb177f, com.stock.xMarket.VO.OrderVO@30f0dcb6, com.stock.xMarket.VO.OrderVO@3d6b1021, com.stock.xMarket.VO.OrderVO@15b27784, com.stock.xMarket.VO.OrderVO@197edaa2, com.stock.xMarket.VO.OrderVO@2fddb057]
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4ad24795]
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@13440bf2, com.stock.xMarket.VO.OrderVO@283dffd5, com.stock.xMarket.VO.OrderVO@15140b30, com.stock.xMarket.VO.OrderVO@6ea3d0f6, com.stock.xMarket.VO.OrderVO@5d0b4d4b]
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1a8fd268]
""2019-06-28 14:53:33 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:34 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:34 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3a07a203, com.stock.xMarket.VO.OrderVO@21d8202f, com.stock.xMarket.VO.OrderVO@2bf2fc5, com.stock.xMarket.VO.OrderVO@e03b250, com.stock.xMarket.VO.OrderVO@9930e29]
""2019-06-28 14:53:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@69aa8e6c]
""2019-06-28 14:53:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:36 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:36 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@252ef17d, com.stock.xMarket.VO.OrderVO@48e70318, com.stock.xMarket.VO.OrderVO@5664c197, com.stock.xMarket.VO.OrderVO@56d11f76, com.stock.xMarket.VO.OrderVO@4a6a9c8, com.stock.xMarket.VO.OrderVO@74298587, com.stock.xMarket.VO.OrderVO@4b18aec, com.stock.xMarket.VO.OrderVO@5a450fa3]
""2019-06-28 14:53:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6b1c15ca]
""2019-06-28 14:53:36 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:43 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:43 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:43 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:43 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4c50a11b, com.stock.xMarket.VO.OrderVO@56ef4a30, com.stock.xMarket.VO.OrderVO@6633f677, com.stock.xMarket.VO.OrderVO@1d00466, com.stock.xMarket.VO.OrderVO@4841353e, com.stock.xMarket.VO.OrderVO@64d348cc, com.stock.xMarket.VO.OrderVO@1d2a8a6f, com.stock.xMarket.VO.OrderVO@1cd84e98]
""2019-06-28 14:53:43 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:43 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5d7160f8]
""2019-06-28 14:53:43 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:44 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:44 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@73c92df9, com.stock.xMarket.VO.OrderVO@568341f1, com.stock.xMarket.VO.OrderVO@6dbcb5ca, com.stock.xMarket.VO.OrderVO@254830ee, com.stock.xMarket.VO.OrderVO@1f54675b]
""2019-06-28 14:53:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@53942189]
""2019-06-28 14:53:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:45 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:45 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6bcd350a, com.stock.xMarket.VO.OrderVO@de5d2eb, com.stock.xMarket.VO.OrderVO@4d1a1e76, com.stock.xMarket.VO.OrderVO@180c882, com.stock.xMarket.VO.OrderVO@3e7c8dd]
""2019-06-28 14:53:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@203630c0]
""2019-06-28 14:53:45 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:46 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:46 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1c767b53, com.stock.xMarket.VO.OrderVO@124a2feb, com.stock.xMarket.VO.OrderVO@572e25dd, com.stock.xMarket.VO.OrderVO@59d36a05, com.stock.xMarket.VO.OrderVO@76503e8f, com.stock.xMarket.VO.OrderVO@352662d9, com.stock.xMarket.VO.OrderVO@1300b96d, com.stock.xMarket.VO.OrderVO@51c16a4a]
""2019-06-28 14:53:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@261292bb]
""2019-06-28 14:53:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:53 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:53 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@11e8c0a6, com.stock.xMarket.VO.OrderVO@50cf6baf, com.stock.xMarket.VO.OrderVO@7a987cd5, com.stock.xMarket.VO.OrderVO@e0dfecf, com.stock.xMarket.VO.OrderVO@59b7f258, com.stock.xMarket.VO.OrderVO@720e68d2, com.stock.xMarket.VO.OrderVO@4b49dc92, com.stock.xMarket.VO.OrderVO@2a53b8b2]
""2019-06-28 14:53:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4c10aa92]
""2019-06-28 14:53:53 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:55 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:55 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@419f269, com.stock.xMarket.VO.OrderVO@1575b1ab, com.stock.xMarket.VO.OrderVO@1188c706, com.stock.xMarket.VO.OrderVO@5b75421b, com.stock.xMarket.VO.OrderVO@10b479a6]
""2019-06-28 14:53:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@28746af2]
""2019-06-28 14:53:55 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@49323056, com.stock.xMarket.VO.OrderVO@693b0246, com.stock.xMarket.VO.OrderVO@1316bf33, com.stock.xMarket.VO.OrderVO@71614193, com.stock.xMarket.VO.OrderVO@29896f69, com.stock.xMarket.VO.OrderVO@1811612c, com.stock.xMarket.VO.OrderVO@3ed8aa3a, com.stock.xMarket.VO.OrderVO@454e19ab]
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@275ed44c]
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7a249c01, com.stock.xMarket.VO.OrderVO@2e4e9d2a, com.stock.xMarket.VO.OrderVO@31639a04, com.stock.xMarket.VO.OrderVO@d59e391, com.stock.xMarket.VO.OrderVO@5343a2af]
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@93ec220]
""2019-06-28 14:53:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:04 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:04 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3082a4ea, com.stock.xMarket.VO.OrderVO@5cc3a671, com.stock.xMarket.VO.OrderVO@39c90e2c, com.stock.xMarket.VO.OrderVO@705e1ab9, com.stock.xMarket.VO.OrderVO@55de55ac, com.stock.xMarket.VO.OrderVO@146f9148, com.stock.xMarket.VO.OrderVO@65a65587, com.stock.xMarket.VO.OrderVO@652d1058]
""2019-06-28 14:54:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@42794a64]
""2019-06-28 14:54:04 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@19178c65, com.stock.xMarket.VO.OrderVO@12e301e6, com.stock.xMarket.VO.OrderVO@24e10902, com.stock.xMarket.VO.OrderVO@358051c1, com.stock.xMarket.VO.OrderVO@105187b0, com.stock.xMarket.VO.OrderVO@1a37486d, com.stock.xMarket.VO.OrderVO@3632fb30, com.stock.xMarket.VO.OrderVO@10bba6e]
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d7bc1f8]
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6813f4df, com.stock.xMarket.VO.OrderVO@648e102c, com.stock.xMarket.VO.OrderVO@7934c187, com.stock.xMarket.VO.OrderVO@2cff9201, com.stock.xMarket.VO.OrderVO@5bbd3e4d]
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4f264a66]
""2019-06-28 14:54:06 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:07 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:07 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5686d74e, com.stock.xMarket.VO.OrderVO@2508655c, com.stock.xMarket.VO.OrderVO@7ff4af36, com.stock.xMarket.VO.OrderVO@6242c75a, com.stock.xMarket.VO.OrderVO@21e40fb]
""2019-06-28 14:54:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@645af761]
""2019-06-28 14:54:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:14 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:14 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@23ceebd, com.stock.xMarket.VO.OrderVO@4e2eb444, com.stock.xMarket.VO.OrderVO@3cf318d6, com.stock.xMarket.VO.OrderVO@66c18b99, com.stock.xMarket.VO.OrderVO@36dc8fa, com.stock.xMarket.VO.OrderVO@38dac047, com.stock.xMarket.VO.OrderVO@1c4b4a22, com.stock.xMarket.VO.OrderVO@76bc9771]
""2019-06-28 14:54:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b7bab44]
""2019-06-28 14:54:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:16 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:16 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@a6f30f8, com.stock.xMarket.VO.OrderVO@7959efbc, com.stock.xMarket.VO.OrderVO@2397de54, com.stock.xMarket.VO.OrderVO@6952e01a, com.stock.xMarket.VO.OrderVO@1a49e538, com.stock.xMarket.VO.OrderVO@2c5bcdc2, com.stock.xMarket.VO.OrderVO@31a3d363, com.stock.xMarket.VO.OrderVO@4f8fa77d]
""2019-06-28 14:54:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1abafb91]
""2019-06-28 14:54:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:17 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:17 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@22314b83, com.stock.xMarket.VO.OrderVO@7254eec, com.stock.xMarket.VO.OrderVO@2d1936c2, com.stock.xMarket.VO.OrderVO@356463ca, com.stock.xMarket.VO.OrderVO@1d214bb6]
""2019-06-28 14:54:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@30de24d0]
""2019-06-28 14:54:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:18 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:18 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@43b83d58, com.stock.xMarket.VO.OrderVO@311ef323, com.stock.xMarket.VO.OrderVO@410722e4, com.stock.xMarket.VO.OrderVO@48c76b5a, com.stock.xMarket.VO.OrderVO@4a97cde7]
""2019-06-28 14:54:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@c56a87d]
""2019-06-28 14:54:18 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:24 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:24 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:25 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4e3a149d, com.stock.xMarket.VO.OrderVO@3523d886, com.stock.xMarket.VO.OrderVO@2f638ab6, com.stock.xMarket.VO.OrderVO@42176c51, com.stock.xMarket.VO.OrderVO@5c171672, com.stock.xMarket.VO.OrderVO@775b129e, com.stock.xMarket.VO.OrderVO@445e00f9, com.stock.xMarket.VO.OrderVO@3d5289c7]
""2019-06-28 14:54:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5912bc99]
""2019-06-28 14:54:25 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:26 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:26 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:26 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:26 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@13b31ca7, com.stock.xMarket.VO.OrderVO@62310b3a, com.stock.xMarket.VO.OrderVO@11335bf6, com.stock.xMarket.VO.OrderVO@5e5263c2, com.stock.xMarket.VO.OrderVO@558f0a8b, com.stock.xMarket.VO.OrderVO@3f8db3db, com.stock.xMarket.VO.OrderVO@346ab337, com.stock.xMarket.VO.OrderVO@796b8a0b]
""2019-06-28 14:54:26 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:26 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@549d0cff]
""2019-06-28 14:54:26 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:28 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:28 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@308d70b0, com.stock.xMarket.VO.OrderVO@73134368, com.stock.xMarket.VO.OrderVO@6d64c6ad, com.stock.xMarket.VO.OrderVO@762c7fac, com.stock.xMarket.VO.OrderVO@2d7f8929]
""2019-06-28 14:54:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@441e87ed]
""2019-06-28 14:54:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:29 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:29 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@421ddd34, com.stock.xMarket.VO.OrderVO@50f1f3b, com.stock.xMarket.VO.OrderVO@31d71b0e, com.stock.xMarket.VO.OrderVO@7915fbe0, com.stock.xMarket.VO.OrderVO@55cd7d8b]
""2019-06-28 14:54:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@284646ce]
""2019-06-28 14:54:29 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:35 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:35 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:35 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:35 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@51a77b3, com.stock.xMarket.VO.OrderVO@47b17168, com.stock.xMarket.VO.OrderVO@5697fe8a, com.stock.xMarket.VO.OrderVO@67fb922, com.stock.xMarket.VO.OrderVO@500ee1b1, com.stock.xMarket.VO.OrderVO@1c78e0e9, com.stock.xMarket.VO.OrderVO@75722e42, com.stock.xMarket.VO.OrderVO@ebf3f67]
""2019-06-28 14:54:35 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:35 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@299b5468]
""2019-06-28 14:54:35 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:36 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:36 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:36 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:36 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2d173742, com.stock.xMarket.VO.OrderVO@463c9fb7, com.stock.xMarket.VO.OrderVO@147add63, com.stock.xMarket.VO.OrderVO@510e8b54, com.stock.xMarket.VO.OrderVO@45b71b10, com.stock.xMarket.VO.OrderVO@6754e536, com.stock.xMarket.VO.OrderVO@2587ad7a, com.stock.xMarket.VO.OrderVO@76c6b5]
""2019-06-28 14:54:36 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:36 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7d643230]
""2019-06-28 14:54:36 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:39 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:39 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:39 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:39 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@40625ca, com.stock.xMarket.VO.OrderVO@6a8c7ccf, com.stock.xMarket.VO.OrderVO@132f2e06, com.stock.xMarket.VO.OrderVO@6320c5bc, com.stock.xMarket.VO.OrderVO@56bd8467]
""2019-06-28 14:54:39 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:39 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5fdee07b]
""2019-06-28 14:54:39 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:40 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:40 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5ba42600, com.stock.xMarket.VO.OrderVO@c300e25, com.stock.xMarket.VO.OrderVO@77258c49, com.stock.xMarket.VO.OrderVO@2f690c36, com.stock.xMarket.VO.OrderVO@5507abfd]
""2019-06-28 14:54:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@59cac65e]
""2019-06-28 14:54:40 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:45 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:45 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@50cfa148, com.stock.xMarket.VO.OrderVO@e0e772d, com.stock.xMarket.VO.OrderVO@39652f55, com.stock.xMarket.VO.OrderVO@3545d7a2, com.stock.xMarket.VO.OrderVO@18ade5a3, com.stock.xMarket.VO.OrderVO@65e75e84, com.stock.xMarket.VO.OrderVO@7568caea, com.stock.xMarket.VO.OrderVO@6e0beb22]
""2019-06-28 14:54:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@197c9bbd]
""2019-06-28 14:54:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:46 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:46 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@793fe64c, com.stock.xMarket.VO.OrderVO@5250eea3, com.stock.xMarket.VO.OrderVO@3c88fc95, com.stock.xMarket.VO.OrderVO@77b13c6, com.stock.xMarket.VO.OrderVO@1f088e3, com.stock.xMarket.VO.OrderVO@54805b88, com.stock.xMarket.VO.OrderVO@2f1769d9, com.stock.xMarket.VO.OrderVO@70adbade]
""2019-06-28 14:54:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@759f83b8]
""2019-06-28 14:54:46 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:50 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:50 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6e448a07, com.stock.xMarket.VO.OrderVO@5faf47f8, com.stock.xMarket.VO.OrderVO@3c5d9ab8, com.stock.xMarket.VO.OrderVO@55404277, com.stock.xMarket.VO.OrderVO@1f1eee6a]
""2019-06-28 14:54:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3aabfaf6]
""2019-06-28 14:54:50 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:54:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:51 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:54:51 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2a576e11, com.stock.xMarket.VO.OrderVO@675804c4, com.stock.xMarket.VO.OrderVO@2b27bbfc, com.stock.xMarket.VO.OrderVO@3775361a, com.stock.xMarket.VO.OrderVO@26c3e103]
""2019-06-28 14:54:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@11abf3b]
""2019-06-28 14:54:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@42140a74, com.stock.xMarket.VO.OrderVO@29a5552c, com.stock.xMarket.VO.OrderVO@587c74ed, com.stock.xMarket.VO.OrderVO@5d834259, com.stock.xMarket.VO.OrderVO@3f26a437, com.stock.xMarket.VO.OrderVO@3c298aca, com.stock.xMarket.VO.OrderVO@7c95abe, com.stock.xMarket.VO.OrderVO@401f5194]
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4a9252bc]
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@13933d14, com.stock.xMarket.VO.OrderVO@122b72e5, com.stock.xMarket.VO.OrderVO@620504ca, com.stock.xMarket.VO.OrderVO@2523cafe, com.stock.xMarket.VO.OrderVO@2fd228d3, com.stock.xMarket.VO.OrderVO@6627db96, com.stock.xMarket.VO.OrderVO@2c4eb0cc, com.stock.xMarket.VO.OrderVO@1701eb81]
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@29abdd02]
""2019-06-28 14:54:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:01 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:01 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1c939bcc, com.stock.xMarket.VO.OrderVO@5eab3b08, com.stock.xMarket.VO.OrderVO@57b0f297, com.stock.xMarket.VO.OrderVO@37f8037d, com.stock.xMarket.VO.OrderVO@37b5b3b5]
""2019-06-28 14:55:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@30c1bd30]
""2019-06-28 14:55:01 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:02 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:02 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@203db812, com.stock.xMarket.VO.OrderVO@6a33cf57, com.stock.xMarket.VO.OrderVO@63d7af6b, com.stock.xMarket.VO.OrderVO@1f7242c5, com.stock.xMarket.VO.OrderVO@52c29411]
""2019-06-28 14:55:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@26ffa069]
""2019-06-28 14:55:02 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5f90d548, com.stock.xMarket.VO.OrderVO@181340ee, com.stock.xMarket.VO.OrderVO@4b120c0a, com.stock.xMarket.VO.OrderVO@a21911c, com.stock.xMarket.VO.OrderVO@53c22f85, com.stock.xMarket.VO.OrderVO@51540123, com.stock.xMarket.VO.OrderVO@afd355f, com.stock.xMarket.VO.OrderVO@cd2ec6d]
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e2e4475]
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@41a865cc, com.stock.xMarket.VO.OrderVO@174b049, com.stock.xMarket.VO.OrderVO@6ff627c6, com.stock.xMarket.VO.OrderVO@579e8504, com.stock.xMarket.VO.OrderVO@551a0c3e, com.stock.xMarket.VO.OrderVO@71c8082c, com.stock.xMarket.VO.OrderVO@2f5ed9c4, com.stock.xMarket.VO.OrderVO@c4bcf8e]
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@9b559c5]
""2019-06-28 14:55:06 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:12 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:12 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5bd76e4, com.stock.xMarket.VO.OrderVO@1ef7ff01, com.stock.xMarket.VO.OrderVO@733311a5, com.stock.xMarket.VO.OrderVO@2296b046, com.stock.xMarket.VO.OrderVO@4c72e8a6]
""2019-06-28 14:55:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6d5c09de]
""2019-06-28 14:55:12 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:13 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:13 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@33eed78f, com.stock.xMarket.VO.OrderVO@7d120ad9, com.stock.xMarket.VO.OrderVO@322528ed, com.stock.xMarket.VO.OrderVO@4d8e7ce4, com.stock.xMarket.VO.OrderVO@8998875]
""2019-06-28 14:55:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@65300f7d]
""2019-06-28 14:55:13 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1b1caff8, com.stock.xMarket.VO.OrderVO@7e0653ef, com.stock.xMarket.VO.OrderVO@ae40cf6, com.stock.xMarket.VO.OrderVO@1c199eb8, com.stock.xMarket.VO.OrderVO@628481ac, com.stock.xMarket.VO.OrderVO@2e513f38, com.stock.xMarket.VO.OrderVO@4f805b8, com.stock.xMarket.VO.OrderVO@5444b7c1]
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@128bd504]
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@aea3089, com.stock.xMarket.VO.OrderVO@5e922afd, com.stock.xMarket.VO.OrderVO@7856109c, com.stock.xMarket.VO.OrderVO@261e13bd, com.stock.xMarket.VO.OrderVO@7dab018f, com.stock.xMarket.VO.OrderVO@32a11905, com.stock.xMarket.VO.OrderVO@7abb3d3d, com.stock.xMarket.VO.OrderVO@2cee5a2c]
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@9ec8147]
""2019-06-28 14:55:16 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:23 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:23 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@355c9b17, com.stock.xMarket.VO.OrderVO@1ab49989, com.stock.xMarket.VO.OrderVO@42d2586b, com.stock.xMarket.VO.OrderVO@760a64eb, com.stock.xMarket.VO.OrderVO@27dfdd1e]
""2019-06-28 14:55:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@191960bd]
""2019-06-28 14:55:23 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:24 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:24 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6ac43661, com.stock.xMarket.VO.OrderVO@10d183fc, com.stock.xMarket.VO.OrderVO@45ecb2eb, com.stock.xMarket.VO.OrderVO@6609854d, com.stock.xMarket.VO.OrderVO@2d35c0d3]
""2019-06-28 14:55:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@31e768ea]
""2019-06-28 14:55:24 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:26 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:26 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@46248119, com.stock.xMarket.VO.OrderVO@6975d133, com.stock.xMarket.VO.OrderVO@713a4160, com.stock.xMarket.VO.OrderVO@7525f475, com.stock.xMarket.VO.OrderVO@17eb8f81, com.stock.xMarket.VO.OrderVO@50d03806, com.stock.xMarket.VO.OrderVO@7342523d, com.stock.xMarket.VO.OrderVO@291e867c]
""2019-06-28 14:55:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@62c28359]
""2019-06-28 14:55:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:27 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:27 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4548ab05, com.stock.xMarket.VO.OrderVO@6e65fb96, com.stock.xMarket.VO.OrderVO@5596df2b, com.stock.xMarket.VO.OrderVO@433f7bfa, com.stock.xMarket.VO.OrderVO@43aff01b, com.stock.xMarket.VO.OrderVO@2d70ab3, com.stock.xMarket.VO.OrderVO@615bf245, com.stock.xMarket.VO.OrderVO@5983b53f]
""2019-06-28 14:55:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6590b93c]
""2019-06-28 14:55:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:34 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:34 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:34 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:34 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2d485b2c, com.stock.xMarket.VO.OrderVO@4915c59f, com.stock.xMarket.VO.OrderVO@c69071d, com.stock.xMarket.VO.OrderVO@7e00205, com.stock.xMarket.VO.OrderVO@689ea8ee]
""2019-06-28 14:55:34 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:34 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@fc0b15f]
""2019-06-28 14:55:34 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:35 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:35 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@75319f0d, com.stock.xMarket.VO.OrderVO@5c0db55e, com.stock.xMarket.VO.OrderVO@65294f0f, com.stock.xMarket.VO.OrderVO@776d3d95, com.stock.xMarket.VO.OrderVO@edd0d82]
""2019-06-28 14:55:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3fcbee42]
""2019-06-28 14:55:35 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:36 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:36 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@162a3c88, com.stock.xMarket.VO.OrderVO@84747ad, com.stock.xMarket.VO.OrderVO@6376282, com.stock.xMarket.VO.OrderVO@30b2f717, com.stock.xMarket.VO.OrderVO@773b43f5, com.stock.xMarket.VO.OrderVO@45f31890, com.stock.xMarket.VO.OrderVO@786d51de, com.stock.xMarket.VO.OrderVO@5fc01b8b]
""2019-06-28 14:55:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7249cf6d]
""2019-06-28 14:55:36 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:37 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:37 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1e1d708c, com.stock.xMarket.VO.OrderVO@487fd336, com.stock.xMarket.VO.OrderVO@f9a0862, com.stock.xMarket.VO.OrderVO@1e74a691, com.stock.xMarket.VO.OrderVO@6b183cc3, com.stock.xMarket.VO.OrderVO@5d48b4f5, com.stock.xMarket.VO.OrderVO@24e6e26, com.stock.xMarket.VO.OrderVO@393500d0]
""2019-06-28 14:55:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1361dd11]
""2019-06-28 14:55:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:45 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:45 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@525faa89, com.stock.xMarket.VO.OrderVO@437249db, com.stock.xMarket.VO.OrderVO@49d95011, com.stock.xMarket.VO.OrderVO@12146ee0, com.stock.xMarket.VO.OrderVO@3db085c9]
""2019-06-28 14:55:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6cdd3f35]
""2019-06-28 14:55:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5d52fa44, com.stock.xMarket.VO.OrderVO@6df92823, com.stock.xMarket.VO.OrderVO@340c9c4, com.stock.xMarket.VO.OrderVO@759b446d, com.stock.xMarket.VO.OrderVO@3fd11040]
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b4d8fa9]
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@57feaff3, com.stock.xMarket.VO.OrderVO@7f02ff7, com.stock.xMarket.VO.OrderVO@5c70d672, com.stock.xMarket.VO.OrderVO@55908eca, com.stock.xMarket.VO.OrderVO@77b332bc, com.stock.xMarket.VO.OrderVO@713a342a, com.stock.xMarket.VO.OrderVO@2b23af39, com.stock.xMarket.VO.OrderVO@7a149249]
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@145c7965]
""2019-06-28 14:55:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:47 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:47 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@781e1508, com.stock.xMarket.VO.OrderVO@3ccf2fc2, com.stock.xMarket.VO.OrderVO@2da1a376, com.stock.xMarket.VO.OrderVO@40b2e5b8, com.stock.xMarket.VO.OrderVO@480c1ef3, com.stock.xMarket.VO.OrderVO@d78890f, com.stock.xMarket.VO.OrderVO@2de221c5, com.stock.xMarket.VO.OrderVO@7a2a9ee4]
""2019-06-28 14:55:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5279ecd4]
""2019-06-28 14:55:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2c62c14c, com.stock.xMarket.VO.OrderVO@4fc7c6b9, com.stock.xMarket.VO.OrderVO@3f7ba37f, com.stock.xMarket.VO.OrderVO@399541ce, com.stock.xMarket.VO.OrderVO@3478f11]
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@724463ce]
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@68fbe1d1, com.stock.xMarket.VO.OrderVO@87c7f3a, com.stock.xMarket.VO.OrderVO@3237a981, com.stock.xMarket.VO.OrderVO@6379575b, com.stock.xMarket.VO.OrderVO@54bbd78c, com.stock.xMarket.VO.OrderVO@3fd5e78e, com.stock.xMarket.VO.OrderVO@30213a54, com.stock.xMarket.VO.OrderVO@19cb6084]
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@13c6c386]
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5a3a2ccc, com.stock.xMarket.VO.OrderVO@38b6ec38, com.stock.xMarket.VO.OrderVO@7393cbba, com.stock.xMarket.VO.OrderVO@465bf9d1, com.stock.xMarket.VO.OrderVO@4d0ce19a]
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4254132f]
""2019-06-28 14:55:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:55:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:55:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:55:58 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:55:58 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1f38a15c, com.stock.xMarket.VO.OrderVO@6250baa9, com.stock.xMarket.VO.OrderVO@551314a2, com.stock.xMarket.VO.OrderVO@559b3cb2, com.stock.xMarket.VO.OrderVO@ff3451c, com.stock.xMarket.VO.OrderVO@689133b9, com.stock.xMarket.VO.OrderVO@25ea9c0d, com.stock.xMarket.VO.OrderVO@29184aae]
""2019-06-28 14:55:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:55:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3c562134]
""2019-06-28 14:55:58 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:06 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:06 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@17f2f76a, com.stock.xMarket.VO.OrderVO@43dd520f, com.stock.xMarket.VO.OrderVO@9d061f2, com.stock.xMarket.VO.OrderVO@5c3364cc, com.stock.xMarket.VO.OrderVO@5c7a8187, com.stock.xMarket.VO.OrderVO@751eed2d, com.stock.xMarket.VO.OrderVO@7fcbcd8d, com.stock.xMarket.VO.OrderVO@3819d3bc]
""2019-06-28 14:56:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@30e70b81]
""2019-06-28 14:56:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@12dbf28c, com.stock.xMarket.VO.OrderVO@5042c9c6, com.stock.xMarket.VO.OrderVO@4ce16274, com.stock.xMarket.VO.OrderVO@6281c719, com.stock.xMarket.VO.OrderVO@2f831657]
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@69c9e698]
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1331b845, com.stock.xMarket.VO.OrderVO@4e18472f, com.stock.xMarket.VO.OrderVO@54eea70, com.stock.xMarket.VO.OrderVO@22e516a8, com.stock.xMarket.VO.OrderVO@3c886121]
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@302578a0]
""2019-06-28 14:56:07 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:08 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:08 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1e3e31b2, com.stock.xMarket.VO.OrderVO@6f6f1238, com.stock.xMarket.VO.OrderVO@3fefcdfc, com.stock.xMarket.VO.OrderVO@7b36a67f, com.stock.xMarket.VO.OrderVO@14eabb0a, com.stock.xMarket.VO.OrderVO@303957d, com.stock.xMarket.VO.OrderVO@42c238cc, com.stock.xMarket.VO.OrderVO@c096bb5]
""2019-06-28 14:56:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4d7aa3d5]
""2019-06-28 14:56:08 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:16 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:16 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@294c461e, com.stock.xMarket.VO.OrderVO@48154a, com.stock.xMarket.VO.OrderVO@380595ff, com.stock.xMarket.VO.OrderVO@3a0fe259, com.stock.xMarket.VO.OrderVO@71383fb0, com.stock.xMarket.VO.OrderVO@319a8698, com.stock.xMarket.VO.OrderVO@25245739, com.stock.xMarket.VO.OrderVO@60fc74ee]
""2019-06-28 14:56:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@500902fe]
""2019-06-28 14:56:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@72428905, com.stock.xMarket.VO.OrderVO@2db2feea, com.stock.xMarket.VO.OrderVO@2ba5b2e6, com.stock.xMarket.VO.OrderVO@4cad8444, com.stock.xMarket.VO.OrderVO@2ac13675]
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@10bec869]
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@252c7cee, com.stock.xMarket.VO.OrderVO@28fb325f, com.stock.xMarket.VO.OrderVO@1f00aba5, com.stock.xMarket.VO.OrderVO@651a7b4d, com.stock.xMarket.VO.OrderVO@2397a00c]
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@520f17eb]
""2019-06-28 14:56:18 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:19 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:19 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3b3ab05c, com.stock.xMarket.VO.OrderVO@9a18fe9, com.stock.xMarket.VO.OrderVO@2d7db8ee, com.stock.xMarket.VO.OrderVO@3256429a, com.stock.xMarket.VO.OrderVO@5c00bcdc, com.stock.xMarket.VO.OrderVO@595bae72, com.stock.xMarket.VO.OrderVO@19a1c77f, com.stock.xMarket.VO.OrderVO@19e30443]
""2019-06-28 14:56:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@405cadff]
""2019-06-28 14:56:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:26 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:26 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:26 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:26 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@13c0a9f3, com.stock.xMarket.VO.OrderVO@2c30f147, com.stock.xMarket.VO.OrderVO@5eba6a27, com.stock.xMarket.VO.OrderVO@4d52e784, com.stock.xMarket.VO.OrderVO@5b4b50ec, com.stock.xMarket.VO.OrderVO@705a380b, com.stock.xMarket.VO.OrderVO@7dbc8f75, com.stock.xMarket.VO.OrderVO@27082981]
""2019-06-28 14:56:26 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:26 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2645c1bc]
""2019-06-28 14:56:26 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3d1bb7d2, com.stock.xMarket.VO.OrderVO@23958763, com.stock.xMarket.VO.OrderVO@1c9e441a, com.stock.xMarket.VO.OrderVO@3320274a, com.stock.xMarket.VO.OrderVO@5365a3db, com.stock.xMarket.VO.OrderVO@5cc4884b, com.stock.xMarket.VO.OrderVO@3214b95d, com.stock.xMarket.VO.OrderVO@3cc222]
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7eb9d285]
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7d38a0f, com.stock.xMarket.VO.OrderVO@2b953063, com.stock.xMarket.VO.OrderVO@4b400840, com.stock.xMarket.VO.OrderVO@2cb6ddac, com.stock.xMarket.VO.OrderVO@372eb9c7]
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@353a9169]
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4654a17b, com.stock.xMarket.VO.OrderVO@4c228723, com.stock.xMarket.VO.OrderVO@1a44655b, com.stock.xMarket.VO.OrderVO@51c718ee, com.stock.xMarket.VO.OrderVO@327b24d4]
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a38a627]
""2019-06-28 14:56:29 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:36 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:36 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6e24071f, com.stock.xMarket.VO.OrderVO@72123be, com.stock.xMarket.VO.OrderVO@6877e1c8, com.stock.xMarket.VO.OrderVO@7d168e21, com.stock.xMarket.VO.OrderVO@33447263, com.stock.xMarket.VO.OrderVO@3df68b66, com.stock.xMarket.VO.OrderVO@6ad854b1, com.stock.xMarket.VO.OrderVO@23f6b84d]
""2019-06-28 14:56:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@33b1013a]
""2019-06-28 14:56:36 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:39 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:39 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2477c5ed, com.stock.xMarket.VO.OrderVO@11538749, com.stock.xMarket.VO.OrderVO@139155bc, com.stock.xMarket.VO.OrderVO@c90d5ca, com.stock.xMarket.VO.OrderVO@16d23118, com.stock.xMarket.VO.OrderVO@1b368544, com.stock.xMarket.VO.OrderVO@2930f2b, com.stock.xMarket.VO.OrderVO@8a7a436]
""2019-06-28 14:56:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@ffa1ecb]
""2019-06-28 14:56:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3c647eb0, com.stock.xMarket.VO.OrderVO@4e78d63c, com.stock.xMarket.VO.OrderVO@5ec8a280, com.stock.xMarket.VO.OrderVO@58e4a9f4, com.stock.xMarket.VO.OrderVO@47eadda6]
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4f2b2a51]
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@569ddf2b, com.stock.xMarket.VO.OrderVO@786c6d5d, com.stock.xMarket.VO.OrderVO@b330f9c, com.stock.xMarket.VO.OrderVO@66fe83d, com.stock.xMarket.VO.OrderVO@3eb30b5c]
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@252e9f52]
""2019-06-28 14:56:40 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:46 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:46 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@154dbb0c, com.stock.xMarket.VO.OrderVO@64eedb92, com.stock.xMarket.VO.OrderVO@49c76076, com.stock.xMarket.VO.OrderVO@19ec2d82, com.stock.xMarket.VO.OrderVO@61016068, com.stock.xMarket.VO.OrderVO@73211591, com.stock.xMarket.VO.OrderVO@1170f53, com.stock.xMarket.VO.OrderVO@79efa2ce]
""2019-06-28 14:56:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@13879fbb]
""2019-06-28 14:56:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:50 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:50 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:50 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:50 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4385b539, com.stock.xMarket.VO.OrderVO@40e42c77, com.stock.xMarket.VO.OrderVO@4a26fb39, com.stock.xMarket.VO.OrderVO@29c253bd, com.stock.xMarket.VO.OrderVO@478017c1, com.stock.xMarket.VO.OrderVO@26661cd2, com.stock.xMarket.VO.OrderVO@5be4c414, com.stock.xMarket.VO.OrderVO@60003b6e]
""2019-06-28 14:56:50 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:50 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@27f916b0]
""2019-06-28 14:56:50 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@44754a34, com.stock.xMarket.VO.OrderVO@ffbc2a7, com.stock.xMarket.VO.OrderVO@f8f03ed, com.stock.xMarket.VO.OrderVO@6daa2f59, com.stock.xMarket.VO.OrderVO@3e0fc32]
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@52dff813]
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@47083255, com.stock.xMarket.VO.OrderVO@5a7168a4, com.stock.xMarket.VO.OrderVO@8908806, com.stock.xMarket.VO.OrderVO@797e02a0, com.stock.xMarket.VO.OrderVO@7fe21d40]
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e077e50]
""2019-06-28 14:56:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:56:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:56:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:56:56 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:56:56 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4184b5c3, com.stock.xMarket.VO.OrderVO@52a85dc5, com.stock.xMarket.VO.OrderVO@62ded32d, com.stock.xMarket.VO.OrderVO@1fa47280, com.stock.xMarket.VO.OrderVO@7beae61a, com.stock.xMarket.VO.OrderVO@6bbccad7, com.stock.xMarket.VO.OrderVO@7f6f2b36, com.stock.xMarket.VO.OrderVO@43e36629]
""2019-06-28 14:56:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:56:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f959279]
""2019-06-28 14:56:56 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:00 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:00 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7c9d393e, com.stock.xMarket.VO.OrderVO@65721862, com.stock.xMarket.VO.OrderVO@12618c59, com.stock.xMarket.VO.OrderVO@28c63a3, com.stock.xMarket.VO.OrderVO@174dee05, com.stock.xMarket.VO.OrderVO@62095586, com.stock.xMarket.VO.OrderVO@7c140eda, com.stock.xMarket.VO.OrderVO@1d64fb80]
""2019-06-28 14:57:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@652103ef]
""2019-06-28 14:57:00 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@40df073f, com.stock.xMarket.VO.OrderVO@54a66583, com.stock.xMarket.VO.OrderVO@25ecbfe3, com.stock.xMarket.VO.OrderVO@38b72d1b, com.stock.xMarket.VO.OrderVO@6923cd]
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6704c43e]
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3794f75c, com.stock.xMarket.VO.OrderVO@20f0a5f2, com.stock.xMarket.VO.OrderVO@4aa9dc7e, com.stock.xMarket.VO.OrderVO@6444ecae, com.stock.xMarket.VO.OrderVO@74fac96d]
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@51802d35]
""2019-06-28 14:57:02 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:06 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:06 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5b064a79, com.stock.xMarket.VO.OrderVO@54b4b7a, com.stock.xMarket.VO.OrderVO@10a68774, com.stock.xMarket.VO.OrderVO@6f3a73ca, com.stock.xMarket.VO.OrderVO@606a9d6, com.stock.xMarket.VO.OrderVO@59c922f7, com.stock.xMarket.VO.OrderVO@7df0839d, com.stock.xMarket.VO.OrderVO@41e80bca]
""2019-06-28 14:57:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72934238]
""2019-06-28 14:57:06 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:10 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:10 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@b34b312, com.stock.xMarket.VO.OrderVO@6b8ee93c, com.stock.xMarket.VO.OrderVO@2807b63a, com.stock.xMarket.VO.OrderVO@5032ad32, com.stock.xMarket.VO.OrderVO@7e302805, com.stock.xMarket.VO.OrderVO@62ebf9f6, com.stock.xMarket.VO.OrderVO@774835f7, com.stock.xMarket.VO.OrderVO@32d64d11]
""2019-06-28 14:57:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4dd93b4e]
""2019-06-28 14:57:10 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2407bf6d, com.stock.xMarket.VO.OrderVO@5568b0f6, com.stock.xMarket.VO.OrderVO@4ac9954b, com.stock.xMarket.VO.OrderVO@7bd94023, com.stock.xMarket.VO.OrderVO@623c64e2]
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72c38753]
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@68ac252d, com.stock.xMarket.VO.OrderVO@4c89ce81, com.stock.xMarket.VO.OrderVO@2bd2c7e4, com.stock.xMarket.VO.OrderVO@1470fadf, com.stock.xMarket.VO.OrderVO@1d7c3031]
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1f0318d9]
""2019-06-28 14:57:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:16 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:16 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5e54d355, com.stock.xMarket.VO.OrderVO@22faac22, com.stock.xMarket.VO.OrderVO@28ffa86a, com.stock.xMarket.VO.OrderVO@62dd7def, com.stock.xMarket.VO.OrderVO@1a6bd49a, com.stock.xMarket.VO.OrderVO@6d07e049, com.stock.xMarket.VO.OrderVO@38eea97b, com.stock.xMarket.VO.OrderVO@31d5998c]
""2019-06-28 14:57:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@75de5428]
""2019-06-28 14:57:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:21 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:21 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@27eb062, com.stock.xMarket.VO.OrderVO@9304960, com.stock.xMarket.VO.OrderVO@6ea2d263, com.stock.xMarket.VO.OrderVO@61672942, com.stock.xMarket.VO.OrderVO@16ed68ac, com.stock.xMarket.VO.OrderVO@1d9d4858, com.stock.xMarket.VO.OrderVO@65d4a042, com.stock.xMarket.VO.OrderVO@3d21a883]
""2019-06-28 14:57:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@40740f83]
""2019-06-28 14:57:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@66460a9e, com.stock.xMarket.VO.OrderVO@53d4f2e1, com.stock.xMarket.VO.OrderVO@7dbff4a9, com.stock.xMarket.VO.OrderVO@67fe25b8, com.stock.xMarket.VO.OrderVO@313ac123]
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@450d6e1f]
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@18077f33, com.stock.xMarket.VO.OrderVO@2903cd6d, com.stock.xMarket.VO.OrderVO@10476a25, com.stock.xMarket.VO.OrderVO@2941d015, com.stock.xMarket.VO.OrderVO@a1cdce9]
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3d431062]
""2019-06-28 14:57:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:26 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:26 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3bd9b555, com.stock.xMarket.VO.OrderVO@4c95408a, com.stock.xMarket.VO.OrderVO@10493a5f, com.stock.xMarket.VO.OrderVO@804bbba, com.stock.xMarket.VO.OrderVO@7e81d4f2, com.stock.xMarket.VO.OrderVO@18764ab8, com.stock.xMarket.VO.OrderVO@4134002b, com.stock.xMarket.VO.OrderVO@6cc0badc]
""2019-06-28 14:57:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1c16d5f2]
""2019-06-28 14:57:26 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:31 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:31 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@39679767, com.stock.xMarket.VO.OrderVO@5ca5d543, com.stock.xMarket.VO.OrderVO@3b1edd18, com.stock.xMarket.VO.OrderVO@77c968d3, com.stock.xMarket.VO.OrderVO@729005e2, com.stock.xMarket.VO.OrderVO@6dc93e, com.stock.xMarket.VO.OrderVO@4d563236, com.stock.xMarket.VO.OrderVO@716544bf]
""2019-06-28 14:57:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@328f064]
""2019-06-28 14:57:31 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@136cc07c, com.stock.xMarket.VO.OrderVO@2c0b25d7, com.stock.xMarket.VO.OrderVO@406e1152, com.stock.xMarket.VO.OrderVO@24123fad, com.stock.xMarket.VO.OrderVO@51086473]
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@24d8c618]
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@f385b43, com.stock.xMarket.VO.OrderVO@2203cc96, com.stock.xMarket.VO.OrderVO@58be410c, com.stock.xMarket.VO.OrderVO@6bffc771, com.stock.xMarket.VO.OrderVO@26506b0e]
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1a0b742e]
""2019-06-28 14:57:35 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:36 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:36 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@fe50fb2, com.stock.xMarket.VO.OrderVO@7e0c6277, com.stock.xMarket.VO.OrderVO@7866a123, com.stock.xMarket.VO.OrderVO@31400c42, com.stock.xMarket.VO.OrderVO@16ff1d47, com.stock.xMarket.VO.OrderVO@b7dca35, com.stock.xMarket.VO.OrderVO@46df1dc0, com.stock.xMarket.VO.OrderVO@774c3b45]
""2019-06-28 14:57:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@193705ce]
""2019-06-28 14:57:36 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:41 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:41 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@152898c5, com.stock.xMarket.VO.OrderVO@6621422c, com.stock.xMarket.VO.OrderVO@50b3dae0, com.stock.xMarket.VO.OrderVO@218627e3, com.stock.xMarket.VO.OrderVO@70397da6, com.stock.xMarket.VO.OrderVO@1ce561af, com.stock.xMarket.VO.OrderVO@52cfcc09, com.stock.xMarket.VO.OrderVO@4266508c]
""2019-06-28 14:57:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7909d12b]
""2019-06-28 14:57:41 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@75880b39, com.stock.xMarket.VO.OrderVO@36465785, com.stock.xMarket.VO.OrderVO@53e8d448, com.stock.xMarket.VO.OrderVO@40ed9c7f, com.stock.xMarket.VO.OrderVO@75898698]
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71771dd3]
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@64bdac72, com.stock.xMarket.VO.OrderVO@55b372b6, com.stock.xMarket.VO.OrderVO@56c32566, com.stock.xMarket.VO.OrderVO@45a218bb, com.stock.xMarket.VO.OrderVO@4c75f241]
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@21d1fbb]
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@bc7b41c, com.stock.xMarket.VO.OrderVO@4e06873b, com.stock.xMarket.VO.OrderVO@6a38fb57, com.stock.xMarket.VO.OrderVO@7280e41, com.stock.xMarket.VO.OrderVO@31793dec, com.stock.xMarket.VO.OrderVO@4bbc5ba7, com.stock.xMarket.VO.OrderVO@6673e3c4, com.stock.xMarket.VO.OrderVO@216ea34d]
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@59007cd1]
""2019-06-28 14:57:46 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:52 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:52 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7295adb3, com.stock.xMarket.VO.OrderVO@af0ef02, com.stock.xMarket.VO.OrderVO@6913ca16, com.stock.xMarket.VO.OrderVO@45e1e783, com.stock.xMarket.VO.OrderVO@1ac622b9, com.stock.xMarket.VO.OrderVO@1743461c, com.stock.xMarket.VO.OrderVO@60f76d98, com.stock.xMarket.VO.OrderVO@2a6043fa]
""2019-06-28 14:57:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1187fe5]
""2019-06-28 14:57:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:57:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:56 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:57:56 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5ef96681, com.stock.xMarket.VO.OrderVO@4625fa4a, com.stock.xMarket.VO.OrderVO@562f5853, com.stock.xMarket.VO.OrderVO@7c7b9def, com.stock.xMarket.VO.OrderVO@69a3218f, com.stock.xMarket.VO.OrderVO@bd615b, com.stock.xMarket.VO.OrderVO@2cfc4cdf, com.stock.xMarket.VO.OrderVO@c48284a]
""2019-06-28 14:57:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7c17cf15]
""2019-06-28 14:57:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@22b61017, com.stock.xMarket.VO.OrderVO@57f8ead0, com.stock.xMarket.VO.OrderVO@38039702, com.stock.xMarket.VO.OrderVO@71ec6539, com.stock.xMarket.VO.OrderVO@63c8e5bb]
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@73f63d78]
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7e768f27, com.stock.xMarket.VO.OrderVO@6481fe70, com.stock.xMarket.VO.OrderVO@6821492b, com.stock.xMarket.VO.OrderVO@2403cd2, com.stock.xMarket.VO.OrderVO@4805840a]
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@231c8104]
""2019-06-28 14:57:57 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:02 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:02 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:02 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:02 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@46b3fe33, com.stock.xMarket.VO.OrderVO@ef5acd1, com.stock.xMarket.VO.OrderVO@500cfe17, com.stock.xMarket.VO.OrderVO@10e5e848, com.stock.xMarket.VO.OrderVO@49fece01, com.stock.xMarket.VO.OrderVO@6a4e70cb, com.stock.xMarket.VO.OrderVO@5d05c7d3, com.stock.xMarket.VO.OrderVO@629dd393]
""2019-06-28 14:58:02 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:02 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5dac8707]
""2019-06-28 14:58:02 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:07 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:07 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5cd321d9, com.stock.xMarket.VO.OrderVO@205bd761, com.stock.xMarket.VO.OrderVO@4e94b909, com.stock.xMarket.VO.OrderVO@51d40550, com.stock.xMarket.VO.OrderVO@14cc2b5a, com.stock.xMarket.VO.OrderVO@6a52167d, com.stock.xMarket.VO.OrderVO@165b6cf, com.stock.xMarket.VO.OrderVO@70eacd36]
""2019-06-28 14:58:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@509ae8a]
""2019-06-28 14:58:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5e20ed3e, com.stock.xMarket.VO.OrderVO@561a81df, com.stock.xMarket.VO.OrderVO@1768c65a, com.stock.xMarket.VO.OrderVO@23991251, com.stock.xMarket.VO.OrderVO@7a894201]
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@781f20f6]
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@524a7429, com.stock.xMarket.VO.OrderVO@1f1f694, com.stock.xMarket.VO.OrderVO@e7d111, com.stock.xMarket.VO.OrderVO@6bd2f464, com.stock.xMarket.VO.OrderVO@6ab82e0b]
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6473209e]
""2019-06-28 14:58:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:12 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:12 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:12 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:12 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1af02f00, com.stock.xMarket.VO.OrderVO@59f7f81f, com.stock.xMarket.VO.OrderVO@7c87c25e, com.stock.xMarket.VO.OrderVO@20007675, com.stock.xMarket.VO.OrderVO@3b13d55a, com.stock.xMarket.VO.OrderVO@5dc2f527, com.stock.xMarket.VO.OrderVO@1f1559f3, com.stock.xMarket.VO.OrderVO@3c8537ba]
""2019-06-28 14:58:12 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:12 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@19198c75]
""2019-06-28 14:58:12 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:17 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:17 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@11e6d041, com.stock.xMarket.VO.OrderVO@e0779d7, com.stock.xMarket.VO.OrderVO@27267327, com.stock.xMarket.VO.OrderVO@2727358f, com.stock.xMarket.VO.OrderVO@648df2, com.stock.xMarket.VO.OrderVO@351885e8, com.stock.xMarket.VO.OrderVO@21b36727, com.stock.xMarket.VO.OrderVO@3f26b5d3]
""2019-06-28 14:58:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b09b4d8]
""2019-06-28 14:58:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2a019cfd, com.stock.xMarket.VO.OrderVO@1b79bf36, com.stock.xMarket.VO.OrderVO@237407b5, com.stock.xMarket.VO.OrderVO@6e701f82, com.stock.xMarket.VO.OrderVO@483090c5]
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1e6616fa]
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2fe5339a, com.stock.xMarket.VO.OrderVO@17fa785c, com.stock.xMarket.VO.OrderVO@7cffea0, com.stock.xMarket.VO.OrderVO@6fcb23ab, com.stock.xMarket.VO.OrderVO@69b4b42b]
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2dc819d9]
""2019-06-28 14:58:19 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:23 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:23 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:23 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:23 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4334a652, com.stock.xMarket.VO.OrderVO@7c9e3ede, com.stock.xMarket.VO.OrderVO@6333bcd9, com.stock.xMarket.VO.OrderVO@5bce8d78, com.stock.xMarket.VO.OrderVO@3d2eb665, com.stock.xMarket.VO.OrderVO@304b07d0, com.stock.xMarket.VO.OrderVO@4e60b074, com.stock.xMarket.VO.OrderVO@61ea518d]
""2019-06-28 14:58:23 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:23 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@29bf5e4b]
""2019-06-28 14:58:23 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:27 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:27 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@dc48f82, com.stock.xMarket.VO.OrderVO@147d1d11, com.stock.xMarket.VO.OrderVO@726fb761, com.stock.xMarket.VO.OrderVO@46e64fe, com.stock.xMarket.VO.OrderVO@2d7f436e, com.stock.xMarket.VO.OrderVO@51965645, com.stock.xMarket.VO.OrderVO@5ecd27a9, com.stock.xMarket.VO.OrderVO@29f3f11a]
""2019-06-28 14:58:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7ec0a379]
""2019-06-28 14:58:27 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1e29f92e, com.stock.xMarket.VO.OrderVO@4b5a461c, com.stock.xMarket.VO.OrderVO@1f7ddd73, com.stock.xMarket.VO.OrderVO@7d757b04, com.stock.xMarket.VO.OrderVO@2cc41d0d]
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@35b7d42f]
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7cb3435a, com.stock.xMarket.VO.OrderVO@466ced7, com.stock.xMarket.VO.OrderVO@44e8dd1c, com.stock.xMarket.VO.OrderVO@4ffb5b9b, com.stock.xMarket.VO.OrderVO@29b478ad]
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b961b3a]
""2019-06-28 14:58:30 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:33 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:33 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@306afd1a, com.stock.xMarket.VO.OrderVO@42479296, com.stock.xMarket.VO.OrderVO@1ecbd972, com.stock.xMarket.VO.OrderVO@64d63340, com.stock.xMarket.VO.OrderVO@3b380ed, com.stock.xMarket.VO.OrderVO@7d1e712f, com.stock.xMarket.VO.OrderVO@3d5e37b7, com.stock.xMarket.VO.OrderVO@68474f6f]
""2019-06-28 14:58:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@776c1e62]
""2019-06-28 14:58:33 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@790057d8, com.stock.xMarket.VO.OrderVO@1c14a8ef, com.stock.xMarket.VO.OrderVO@74a54a0e, com.stock.xMarket.VO.OrderVO@400dd49a, com.stock.xMarket.VO.OrderVO@3bc8f5d4, com.stock.xMarket.VO.OrderVO@2a27192, com.stock.xMarket.VO.OrderVO@5c09bef2, com.stock.xMarket.VO.OrderVO@728e18ed]
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@e94253d]
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6fb5f7e3]
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a4f5594]
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d2ce32c]
""2019-06-28 14:58:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:43 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:43 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7e298f5b, com.stock.xMarket.VO.OrderVO@5b0bbcb, com.stock.xMarket.VO.OrderVO@3f632b17, com.stock.xMarket.VO.OrderVO@7e342f55, com.stock.xMarket.VO.OrderVO@4c55349f, com.stock.xMarket.VO.OrderVO@4cbba03d, com.stock.xMarket.VO.OrderVO@6a26012e, com.stock.xMarket.VO.OrderVO@3537d5b8]
""2019-06-28 14:58:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@50a3fe4d]
""2019-06-28 14:58:43 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:47 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:47 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@30f8baf6, com.stock.xMarket.VO.OrderVO@7f251ff4, com.stock.xMarket.VO.OrderVO@53167ae1, com.stock.xMarket.VO.OrderVO@40d73848, com.stock.xMarket.VO.OrderVO@358d15ae, com.stock.xMarket.VO.OrderVO@62807654, com.stock.xMarket.VO.OrderVO@2a1d997, com.stock.xMarket.VO.OrderVO@7b4db4f3]
""2019-06-28 14:58:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2630ee51]
""2019-06-28 14:58:47 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:54 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:54 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@133c5603, com.stock.xMarket.VO.OrderVO@35734ed8, com.stock.xMarket.VO.OrderVO@217add, com.stock.xMarket.VO.OrderVO@474d5333, com.stock.xMarket.VO.OrderVO@36b09997, com.stock.xMarket.VO.OrderVO@199a1417, com.stock.xMarket.VO.OrderVO@1266726b, com.stock.xMarket.VO.OrderVO@3f9f6fdf]
""2019-06-28 14:58:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@d51359a]
""2019-06-28 14:58:54 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:58:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:58:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:58:57 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:58:57 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2af0071e, com.stock.xMarket.VO.OrderVO@776fbbde, com.stock.xMarket.VO.OrderVO@16d95a49, com.stock.xMarket.VO.OrderVO@76daaed, com.stock.xMarket.VO.OrderVO@2d0f85e9, com.stock.xMarket.VO.OrderVO@27347add, com.stock.xMarket.VO.OrderVO@7b637760, com.stock.xMarket.VO.OrderVO@11b39023]
""2019-06-28 14:58:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:58:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@40c27f31]
""2019-06-28 14:58:57 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:04 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:04 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@10239495, com.stock.xMarket.VO.OrderVO@d69f542, com.stock.xMarket.VO.OrderVO@2615cd4c, com.stock.xMarket.VO.OrderVO@428f310a, com.stock.xMarket.VO.OrderVO@4e0482f2, com.stock.xMarket.VO.OrderVO@c05ad95, com.stock.xMarket.VO.OrderVO@4726ef4, com.stock.xMarket.VO.OrderVO@3f4e1811]
""2019-06-28 14:59:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@55370e18]
""2019-06-28 14:59:04 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:07 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:07 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5556e573, com.stock.xMarket.VO.OrderVO@1384417c, com.stock.xMarket.VO.OrderVO@120d2997, com.stock.xMarket.VO.OrderVO@1e4b73da, com.stock.xMarket.VO.OrderVO@7cd4601d, com.stock.xMarket.VO.OrderVO@4d6a415a, com.stock.xMarket.VO.OrderVO@365098f1, com.stock.xMarket.VO.OrderVO@7340e842]
""2019-06-28 14:59:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2c4baabf]
""2019-06-28 14:59:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:14 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:14 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@427dc499, com.stock.xMarket.VO.OrderVO@7f5a30db, com.stock.xMarket.VO.OrderVO@c18ad3d, com.stock.xMarket.VO.OrderVO@173749b0, com.stock.xMarket.VO.OrderVO@3bc21ec3, com.stock.xMarket.VO.OrderVO@15b03d88, com.stock.xMarket.VO.OrderVO@5c080b46, com.stock.xMarket.VO.OrderVO@71dfa3be]
""2019-06-28 14:59:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5a409f40]
""2019-06-28 14:59:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:17 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:17 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6eb53eb3, com.stock.xMarket.VO.OrderVO@19e33158, com.stock.xMarket.VO.OrderVO@3dd0ac8e, com.stock.xMarket.VO.OrderVO@2b55ee8f, com.stock.xMarket.VO.OrderVO@6c520df0, com.stock.xMarket.VO.OrderVO@6c3b98d3, com.stock.xMarket.VO.OrderVO@54b7fd06, com.stock.xMarket.VO.OrderVO@50124089]
""2019-06-28 14:59:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2cd3eaf6]
""2019-06-28 14:59:17 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:25 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:25 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:25 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:25 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@cd66aa, com.stock.xMarket.VO.OrderVO@925629f, com.stock.xMarket.VO.OrderVO@131e38be, com.stock.xMarket.VO.OrderVO@6f612a04, com.stock.xMarket.VO.OrderVO@472e974, com.stock.xMarket.VO.OrderVO@26e152ff, com.stock.xMarket.VO.OrderVO@44d84555, com.stock.xMarket.VO.OrderVO@228f66c0]
""2019-06-28 14:59:25 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:25 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@31a502ac]
""2019-06-28 14:59:25 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:27 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:27 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@135bd720, com.stock.xMarket.VO.OrderVO@390cb79f, com.stock.xMarket.VO.OrderVO@51fc46fc, com.stock.xMarket.VO.OrderVO@56c33299, com.stock.xMarket.VO.OrderVO@1bec0db6, com.stock.xMarket.VO.OrderVO@4780e11b, com.stock.xMarket.VO.OrderVO@747884b1, com.stock.xMarket.VO.OrderVO@3b60275d]
""2019-06-28 14:59:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@401a1c3a]
""2019-06-28 14:59:27 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:35 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:35 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:35 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:35 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@686ed005, com.stock.xMarket.VO.OrderVO@55b24cef, com.stock.xMarket.VO.OrderVO@5c8c55df, com.stock.xMarket.VO.OrderVO@d1a0b32, com.stock.xMarket.VO.OrderVO@136a1c6c, com.stock.xMarket.VO.OrderVO@54f8efda, com.stock.xMarket.VO.OrderVO@6ae47a37, com.stock.xMarket.VO.OrderVO@377abfc2]
""2019-06-28 14:59:35 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:35 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@74304c3d]
""2019-06-28 14:59:35 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:37 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:37 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6c618a9b, com.stock.xMarket.VO.OrderVO@25dad126, com.stock.xMarket.VO.OrderVO@3f459cf1, com.stock.xMarket.VO.OrderVO@56f65275, com.stock.xMarket.VO.OrderVO@36a32f62, com.stock.xMarket.VO.OrderVO@45838b71, com.stock.xMarket.VO.OrderVO@56b22524, com.stock.xMarket.VO.OrderVO@32b3b07d]
""2019-06-28 14:59:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1dc45176]
""2019-06-28 14:59:37 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:45 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:45 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@544ddd3d, com.stock.xMarket.VO.OrderVO@331b1085, com.stock.xMarket.VO.OrderVO@2b4d3acd, com.stock.xMarket.VO.OrderVO@23c5dbaf, com.stock.xMarket.VO.OrderVO@19db5edf, com.stock.xMarket.VO.OrderVO@722ffa59, com.stock.xMarket.VO.OrderVO@30763d83, com.stock.xMarket.VO.OrderVO@3de39081]
""2019-06-28 14:59:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7e0d1c44]
""2019-06-28 14:59:45 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:47 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:47 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@d2c195f, com.stock.xMarket.VO.OrderVO@251ddd44, com.stock.xMarket.VO.OrderVO@584f699d, com.stock.xMarket.VO.OrderVO@12274448, com.stock.xMarket.VO.OrderVO@7fac41b2, com.stock.xMarket.VO.OrderVO@349044fe, com.stock.xMarket.VO.OrderVO@17b0d070, com.stock.xMarket.VO.OrderVO@3f9dc3ca]
""2019-06-28 14:59:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2221a45a]
""2019-06-28 14:59:47 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:56 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:56 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@113b2002, com.stock.xMarket.VO.OrderVO@2640252e, com.stock.xMarket.VO.OrderVO@bc30e7, com.stock.xMarket.VO.OrderVO@1f163c08, com.stock.xMarket.VO.OrderVO@57e534d8, com.stock.xMarket.VO.OrderVO@70ab125f, com.stock.xMarket.VO.OrderVO@11f13fa5, com.stock.xMarket.VO.OrderVO@3fa9a7ef]
""2019-06-28 14:59:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@41141736]
""2019-06-28 14:59:56 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 14:59:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 14:59:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 14:59:57 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 14:59:57 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6d852d62, com.stock.xMarket.VO.OrderVO@cee1146, com.stock.xMarket.VO.OrderVO@2a2c37c7, com.stock.xMarket.VO.OrderVO@4ecc31d1, com.stock.xMarket.VO.OrderVO@a66eb57, com.stock.xMarket.VO.OrderVO@76feaf7c, com.stock.xMarket.VO.OrderVO@3d272c6b, com.stock.xMarket.VO.OrderVO@124ac0a7]
""2019-06-28 14:59:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 14:59:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2f4bbdea]
""2019-06-28 14:59:57 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:06 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:06 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6a53ad1b, com.stock.xMarket.VO.OrderVO@68fb1469, com.stock.xMarket.VO.OrderVO@2c1dfade, com.stock.xMarket.VO.OrderVO@5af3a552, com.stock.xMarket.VO.OrderVO@2dbff062, com.stock.xMarket.VO.OrderVO@1dd7e1e0, com.stock.xMarket.VO.OrderVO@5edf338e, com.stock.xMarket.VO.OrderVO@1941d432]
""2019-06-28 15:00:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4b2f0b98]
""2019-06-28 15:00:06 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:07 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:07 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3f1607f0, com.stock.xMarket.VO.OrderVO@17df2f57, com.stock.xMarket.VO.OrderVO@3e168262, com.stock.xMarket.VO.OrderVO@466f934e, com.stock.xMarket.VO.OrderVO@494935f4, com.stock.xMarket.VO.OrderVO@27020e1d, com.stock.xMarket.VO.OrderVO@2d0d8d0d, com.stock.xMarket.VO.OrderVO@17c28e01]
""2019-06-28 15:00:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1724ef98]
""2019-06-28 15:00:07 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:16 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:16 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@e0a3d60, com.stock.xMarket.VO.OrderVO@2bd4fe84, com.stock.xMarket.VO.OrderVO@171e9442, com.stock.xMarket.VO.OrderVO@1b71a802, com.stock.xMarket.VO.OrderVO@444f7731, com.stock.xMarket.VO.OrderVO@48e391e2, com.stock.xMarket.VO.OrderVO@2bbca038, com.stock.xMarket.VO.OrderVO@3d1b3cf5]
""2019-06-28 15:00:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2523298]
""2019-06-28 15:00:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:17 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:17 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6b312731, com.stock.xMarket.VO.OrderVO@f3554d9, com.stock.xMarket.VO.OrderVO@6a74f1f1, com.stock.xMarket.VO.OrderVO@f5933cd, com.stock.xMarket.VO.OrderVO@6d3395b8, com.stock.xMarket.VO.OrderVO@4805975b, com.stock.xMarket.VO.OrderVO@5330cd3, com.stock.xMarket.VO.OrderVO@433290e3]
""2019-06-28 15:00:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@325d4368]
""2019-06-28 15:00:17 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@66f5bb32, com.stock.xMarket.VO.OrderVO@1a27248f, com.stock.xMarket.VO.OrderVO@3893c9fd, com.stock.xMarket.VO.OrderVO@3c968b80, com.stock.xMarket.VO.OrderVO@77719b0b, com.stock.xMarket.VO.OrderVO@5451ca36, com.stock.xMarket.VO.OrderVO@72ab3d60, com.stock.xMarket.VO.OrderVO@7a69723e]
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@13b17bb]
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@68ee0d84, com.stock.xMarket.VO.OrderVO@39f0f1f6, com.stock.xMarket.VO.OrderVO@752914ee, com.stock.xMarket.VO.OrderVO@390b4fc6, com.stock.xMarket.VO.OrderVO@2111f74e, com.stock.xMarket.VO.OrderVO@1f50cddb, com.stock.xMarket.VO.OrderVO@226324bb, com.stock.xMarket.VO.OrderVO@41f53a4e]
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6ff01eb9]
""2019-06-28 15:00:27 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:00:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:00:28 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:00:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1ff1ab0c]
""2019-06-28 15:00:28 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:00:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:00:31 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:00:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e575163]
""2019-06-28 15:00:31 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 15:00:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:00:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3c194c94]
""2019-06-28 15:00:33 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@484b533b, com.stock.xMarket.VO.OrderVO@371fcb57, com.stock.xMarket.VO.OrderVO@6ef9d592, com.stock.xMarket.VO.OrderVO@4a1214fe, com.stock.xMarket.VO.OrderVO@5852440c, com.stock.xMarket.VO.OrderVO@11de6922, com.stock.xMarket.VO.OrderVO@31ab7bce, com.stock.xMarket.VO.OrderVO@6bc42ce1]
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@21fc67b1]
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@12c825d3, com.stock.xMarket.VO.OrderVO@41ecee30, com.stock.xMarket.VO.OrderVO@4c9ba7b2, com.stock.xMarket.VO.OrderVO@408ae6d8, com.stock.xMarket.VO.OrderVO@13bfa5a7, com.stock.xMarket.VO.OrderVO@3584548e, com.stock.xMarket.VO.OrderVO@2433d3bb, com.stock.xMarket.VO.OrderVO@33185dc3]
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5d64549a]
""2019-06-28 15:00:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:47 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:47 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1870043f, com.stock.xMarket.VO.OrderVO@76eb8f2a, com.stock.xMarket.VO.OrderVO@6b8a3af9, com.stock.xMarket.VO.OrderVO@439065d, com.stock.xMarket.VO.OrderVO@1c70ab19, com.stock.xMarket.VO.OrderVO@3648e562, com.stock.xMarket.VO.OrderVO@caf5ca0, com.stock.xMarket.VO.OrderVO@4068b886]
""2019-06-28 15:00:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@59d9ebf1]
""2019-06-28 15:00:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:48 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:48 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@44d0b923, com.stock.xMarket.VO.OrderVO@6536bc00, com.stock.xMarket.VO.OrderVO@25131a4d, com.stock.xMarket.VO.OrderVO@1e3ff24f, com.stock.xMarket.VO.OrderVO@5fe7590a, com.stock.xMarket.VO.OrderVO@fe1384a, com.stock.xMarket.VO.OrderVO@321d9a89, com.stock.xMarket.VO.OrderVO@53d1ab0f]
""2019-06-28 15:00:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@369b9776]
""2019-06-28 15:00:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5606b537]
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@395456ae, com.stock.xMarket.VO.OrderVO@1247cfbe, com.stock.xMarket.VO.OrderVO@527d197e, com.stock.xMarket.VO.OrderVO@2b505f5a, com.stock.xMarket.VO.OrderVO@302a9db8, com.stock.xMarket.VO.OrderVO@1c3c8e3c, com.stock.xMarket.VO.OrderVO@26b0c22c, com.stock.xMarket.VO.OrderVO@fb3f32f]
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6b90683c]
""2019-06-28 15:00:57 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:00:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:00:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:00:58 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:00:58 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@cafbf73, com.stock.xMarket.VO.OrderVO@6017a552, com.stock.xMarket.VO.OrderVO@2c507fad, com.stock.xMarket.VO.OrderVO@71bb390a, com.stock.xMarket.VO.OrderVO@9e5469, com.stock.xMarket.VO.OrderVO@5d7e4c1d, com.stock.xMarket.VO.OrderVO@72fcfd08, com.stock.xMarket.VO.OrderVO@5aa7e934]
""2019-06-28 15:00:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:00:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@28e8c315]
""2019-06-28 15:00:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7752ae6a]
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d92449c]
""2019-06-28 15:01:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 15:01:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:05 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 15:01:05 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@5d6bed64, com.stock.xMarket.VO.OrderVO@636de1e8, com.stock.xMarket.VO.OrderVO@74e9a28e, com.stock.xMarket.VO.OrderVO@371fecc0, com.stock.xMarket.VO.OrderVO@359d278a, com.stock.xMarket.VO.OrderVO@3973f270]
""2019-06-28 15:01:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@b7da02]
""2019-06-28 15:01:05 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:07 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:07 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1983fc64, com.stock.xMarket.VO.OrderVO@b209904, com.stock.xMarket.VO.OrderVO@70c30c59, com.stock.xMarket.VO.OrderVO@27ee1a72, com.stock.xMarket.VO.OrderVO@2188b237, com.stock.xMarket.VO.OrderVO@2e6ff7bb, com.stock.xMarket.VO.OrderVO@46a687eb, com.stock.xMarket.VO.OrderVO@114c28c7]
""2019-06-28 15:01:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@75b139d3]
""2019-06-28 15:01:07 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:08 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:08 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7ac528cf, com.stock.xMarket.VO.OrderVO@205e161, com.stock.xMarket.VO.OrderVO@48864c58, com.stock.xMarket.VO.OrderVO@74990828, com.stock.xMarket.VO.OrderVO@27c9c524, com.stock.xMarket.VO.OrderVO@a6a2655, com.stock.xMarket.VO.OrderVO@70745fcc, com.stock.xMarket.VO.OrderVO@4c90c1a2]
""2019-06-28 15:01:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2519cdf1]
""2019-06-28 15:01:08 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5ac024a4]
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@303eca87]
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4bce6eb0]
""2019-06-28 15:01:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:01:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:01:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@13a5561c]
""2019-06-28 15:01:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:17 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:17 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@64178870, com.stock.xMarket.VO.OrderVO@50b79dbf, com.stock.xMarket.VO.OrderVO@1cd631a0, com.stock.xMarket.VO.OrderVO@6a1ace2e, com.stock.xMarket.VO.OrderVO@32168f15, com.stock.xMarket.VO.OrderVO@5e20a68d, com.stock.xMarket.VO.OrderVO@73d6d7d8, com.stock.xMarket.VO.OrderVO@4f810c32]
""2019-06-28 15:01:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@49e94cf0]
""2019-06-28 15:01:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3b7c8962, com.stock.xMarket.VO.OrderVO@728aabca, com.stock.xMarket.VO.OrderVO@6752719e, com.stock.xMarket.VO.OrderVO@7965fd04, com.stock.xMarket.VO.OrderVO@260d5cd3, com.stock.xMarket.VO.OrderVO@1fe7723, com.stock.xMarket.VO.OrderVO@75542803, com.stock.xMarket.VO.OrderVO@238f7670]
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f285d16]
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@70c8c002]
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@48064f38]
""2019-06-28 15:01:19 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayExchange?userId=1013", parameters={masked}
""2019-06-28 15:01:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.todayExchange(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:01:26 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1013
""2019-06-28 15:01:26 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[{"actualAmount":0.0,"cancelNumber":100,"date":1561680000000,"exchangeAmount":0,"orderId":1561704281806,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":5600,"stockId":"600000","stockName":"浦发银行","time":24293000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64207,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":100,"date":1561680000000,"exchangeAmount":0,"orderId":1561704244841,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":5600,"stockId":"600000","stockName":"浦发银行","time":24267000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64206,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":100,"date":1561680000000,"exchangeAmount":0,"orderId":1561704085854,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":5600,"stockId":"600000","stockName":"浦发银行","time":24214000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64205,"transferFee":0.0,"type":0},{"actualAmount":18905.03,"cancelNumber":0,"date":1561680000000,"exchangeAmount":1500,"orderId":1561701983349,"ownerId":1013,"serviceTax":5.0,"stampTax":0.0,"stockBalance":5600,"stockId":"600000","stockName":"浦发银行","time":21982000,"totalExchangeMoney":18900.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64197,"transferFee":0.030000000000000002,"type":0},{"actualAmount":0.0,"cancelNumber":1500,"date":1561680000000,"exchangeAmount":0,"orderId":1561701587942,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":4100,"stockId":"600000","stockName":"浦发银行","time":21612000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64192,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":6600,"date":1561680000000,"exchangeAmount":0,"orderId":1561700552896,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":0,"stockId":"000858","stockName":"五 粮 液","time":20582000,"totalExchangeMoney":0.0,"tradeMarket":0,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64189,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":6600,"date":1561680000000,"exchangeAmount":0,"orderId":1561700552896,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":0,"stockId":"000858","stockName":"五 粮 液","time":20582000,"totalExchangeMoney":0.0,"tradeMarket":0,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64188,"transferFee":0.0,"type":0}]
""2019-06-28 15:01:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@270ad889]
""2019-06-28 15:01:26 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:27 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:27 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@42e0b46f, com.stock.xMarket.VO.OrderVO@3d3d84c2, com.stock.xMarket.VO.OrderVO@534aa81f, com.stock.xMarket.VO.OrderVO@ff888f3, com.stock.xMarket.VO.OrderVO@487c06af, com.stock.xMarket.VO.OrderVO@193690f6, com.stock.xMarket.VO.OrderVO@1fbad99f, com.stock.xMarket.VO.OrderVO@54ce758b]
""2019-06-28 15:01:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7caf58c3]
""2019-06-28 15:01:27 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 15:01:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:28 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 15:01:28 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@114d6361, com.stock.xMarket.VO.OrderVO@12a44ac6, com.stock.xMarket.VO.OrderVO@5845c1c9, com.stock.xMarket.VO.OrderVO@61e5810, com.stock.xMarket.VO.OrderVO@7c3275d9, com.stock.xMarket.VO.OrderVO@4c70e2e3]
""2019-06-28 15:01:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3a4d292d]
""2019-06-28 15:01:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:29 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:29 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@204acaa6, com.stock.xMarket.VO.OrderVO@1d0f9eee, com.stock.xMarket.VO.OrderVO@51ea4349, com.stock.xMarket.VO.OrderVO@4adad8e1, com.stock.xMarket.VO.OrderVO@3cb324e6, com.stock.xMarket.VO.OrderVO@5daa2570, com.stock.xMarket.VO.OrderVO@5ed9d587, com.stock.xMarket.VO.OrderVO@42d8036d]
""2019-06-28 15:01:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@67699bc4]
""2019-06-28 15:01:29 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:37 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:37 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4f77967b, com.stock.xMarket.VO.OrderVO@342f8754, com.stock.xMarket.VO.OrderVO@6159b81c, com.stock.xMarket.VO.OrderVO@46b0ead1, com.stock.xMarket.VO.OrderVO@35877832, com.stock.xMarket.VO.OrderVO@7dda4cf1, com.stock.xMarket.VO.OrderVO@51ef820e, com.stock.xMarket.VO.OrderVO@10481c80]
""2019-06-28 15:01:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1e00a053]
""2019-06-28 15:01:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@69ddc6c8, com.stock.xMarket.VO.OrderVO@5a8857c6, com.stock.xMarket.VO.OrderVO@7902edec, com.stock.xMarket.VO.OrderVO@6a30fb32, com.stock.xMarket.VO.OrderVO@6d5c8b3a, com.stock.xMarket.VO.OrderVO@7572d730]
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b7139ff]
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4e3e1284, com.stock.xMarket.VO.OrderVO@67347684, com.stock.xMarket.VO.OrderVO@2d1d4f82, com.stock.xMarket.VO.OrderVO@13d733b2, com.stock.xMarket.VO.OrderVO@2d43b97e, com.stock.xMarket.VO.OrderVO@69077a04, com.stock.xMarket.VO.OrderVO@2ea149f9, com.stock.xMarket.VO.OrderVO@4c1b53c]
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@34f96493]
""2019-06-28 15:01:39 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:47 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:47 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@e6ba38a, com.stock.xMarket.VO.OrderVO@5ee105bf, com.stock.xMarket.VO.OrderVO@5e52d7d9, com.stock.xMarket.VO.OrderVO@249f6fbd, com.stock.xMarket.VO.OrderVO@77bbef57, com.stock.xMarket.VO.OrderVO@21a1d0e2, com.stock.xMarket.VO.OrderVO@69853710, com.stock.xMarket.VO.OrderVO@36b85f1a]
""2019-06-28 15:01:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1ed1dfcd]
""2019-06-28 15:01:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1013", parameters={masked}
""2019-06-28 15:01:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:49 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1013
""2019-06-28 15:01:49 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@7e4b1f9, com.stock.xMarket.VO.OrderVO@66a79090, com.stock.xMarket.VO.OrderVO@78117eb7, com.stock.xMarket.VO.OrderVO@58f2a712, com.stock.xMarket.VO.OrderVO@7a3bbe8c, com.stock.xMarket.VO.OrderVO@20c2924b]
""2019-06-28 15:01:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@53d5b422]
""2019-06-28 15:01:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:50 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:50 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@20d556e, com.stock.xMarket.VO.OrderVO@da8476a, com.stock.xMarket.VO.OrderVO@5bf67f32, com.stock.xMarket.VO.OrderVO@1f0225e2, com.stock.xMarket.VO.OrderVO@77cca549, com.stock.xMarket.VO.OrderVO@38102fcd, com.stock.xMarket.VO.OrderVO@5077c812, com.stock.xMarket.VO.OrderVO@5e54dacb]
""2019-06-28 15:01:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4ca0daa5]
""2019-06-28 15:01:50 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:55 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayExchange?userId=1013", parameters={masked}
""2019-06-28 15:01:55 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.todayExchange(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:01:55 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1013
""2019-06-28 15:01:55 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[{"actualAmount":0.0,"cancelNumber":100,"date":1561680000000,"exchangeAmount":0,"orderId":1561704281806,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":5600,"stockId":"600000","stockName":"浦发银行","time":24293000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64207,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":100,"date":1561680000000,"exchangeAmount":0,"orderId":1561704244841,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":5600,"stockId":"600000","stockName":"浦发银行","time":24267000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64206,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":100,"date":1561680000000,"exchangeAmount":0,"orderId":1561704085854,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":5600,"stockId":"600000","stockName":"浦发银行","time":24214000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64205,"transferFee":0.0,"type":0},{"actualAmount":18905.03,"cancelNumber":0,"date":1561680000000,"exchangeAmount":1500,"orderId":1561701983349,"ownerId":1013,"serviceTax":5.0,"stampTax":0.0,"stockBalance":5600,"stockId":"600000","stockName":"浦发银行","time":21982000,"totalExchangeMoney":18900.0,"tradeMarket":1,"tradePrice":12.6,"tradeType":false,"transactionOrderId":64197,"transferFee":0.030000000000000002,"type":0},{"actualAmount":0.0,"cancelNumber":1500,"date":1561680000000,"exchangeAmount":0,"orderId":1561701587942,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":4100,"stockId":"600000","stockName":"浦发银行","time":21612000,"totalExchangeMoney":0.0,"tradeMarket":1,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64192,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":6600,"date":1561680000000,"exchangeAmount":0,"orderId":1561700552896,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":0,"stockId":"000858","stockName":"五 粮 液","time":20582000,"totalExchangeMoney":0.0,"tradeMarket":0,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64189,"transferFee":0.0,"type":0},{"actualAmount":0.0,"cancelNumber":6600,"date":1561680000000,"exchangeAmount":0,"orderId":1561700552896,"ownerId":1013,"serviceTax":0.0,"stampTax":0.0,"stockBalance":0,"stockId":"000858","stockName":"五 粮 液","time":20582000,"totalExchangeMoney":0.0,"tradeMarket":0,"tradePrice":0.0,"tradeType":false,"transactionOrderId":64188,"transferFee":0.0,"type":0}]
""2019-06-28 15:01:55 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:55 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@17aa3476]
""2019-06-28 15:01:55 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:01:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:01:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:01:57 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:01:57 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@d9d329e, com.stock.xMarket.VO.OrderVO@6d3c383a, com.stock.xMarket.VO.OrderVO@69bd5ec9, com.stock.xMarket.VO.OrderVO@78bd51d4, com.stock.xMarket.VO.OrderVO@1cd0959f, com.stock.xMarket.VO.OrderVO@10a183d7, com.stock.xMarket.VO.OrderVO@13e9cc1c, com.stock.xMarket.VO.OrderVO@1481c44]
""2019-06-28 15:01:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:01:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@19ac0d9f]
""2019-06-28 15:01:57 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:00 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:00 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:00 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:00 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6edf7966, com.stock.xMarket.VO.OrderVO@6407a685, com.stock.xMarket.VO.OrderVO@b682d32, com.stock.xMarket.VO.OrderVO@5622ba94, com.stock.xMarket.VO.OrderVO@43a3fd7f, com.stock.xMarket.VO.OrderVO@1a494800, com.stock.xMarket.VO.OrderVO@5002e7c6, com.stock.xMarket.VO.OrderVO@13371148]
""2019-06-28 15:02:00 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:00 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4f235e54]
""2019-06-28 15:02:00 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:07 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:07 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@70a9e2, com.stock.xMarket.VO.OrderVO@7562e1fb, com.stock.xMarket.VO.OrderVO@451c8e63, com.stock.xMarket.VO.OrderVO@573c2634, com.stock.xMarket.VO.OrderVO@5286ba88, com.stock.xMarket.VO.OrderVO@3009e41a, com.stock.xMarket.VO.OrderVO@11c70bee, com.stock.xMarket.VO.OrderVO@27fc8264]
""2019-06-28 15:02:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@40c92ee9]
""2019-06-28 15:02:07 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:10 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:10 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1a164f47, com.stock.xMarket.VO.OrderVO@3e8dbb81, com.stock.xMarket.VO.OrderVO@6e27a0c3, com.stock.xMarket.VO.OrderVO@d739fbf, com.stock.xMarket.VO.OrderVO@25b78521, com.stock.xMarket.VO.OrderVO@763573a5, com.stock.xMarket.VO.OrderVO@2547e418, com.stock.xMarket.VO.OrderVO@34580968]
""2019-06-28 15:02:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2ddf0c4f]
""2019-06-28 15:02:10 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:02:12 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:02:12 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@65d746ba]
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@667cef52]
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@31583a35]
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@46f2dde0]
""2019-06-28 15:02:13 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2d940008]
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@74d88bdc]
""2019-06-28 15:02:14 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4ebb2414]
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1a9ba800]
""2019-06-28 15:02:15 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@52f52f2a]
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1013", parameters={masked}
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1013
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@409c6bf1]
""2019-06-28 15:02:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:17 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:17 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4b15df2f, com.stock.xMarket.VO.OrderVO@51769192, com.stock.xMarket.VO.OrderVO@8e373be, com.stock.xMarket.VO.OrderVO@4dc1e66b, com.stock.xMarket.VO.OrderVO@2848b45b, com.stock.xMarket.VO.OrderVO@4d575ac1, com.stock.xMarket.VO.OrderVO@5ebaae56, com.stock.xMarket.VO.OrderVO@1c8af954]
""2019-06-28 15:02:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@718d7cf2]
""2019-06-28 15:02:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:21 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:21 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@15ffabc3, com.stock.xMarket.VO.OrderVO@4cf986f, com.stock.xMarket.VO.OrderVO@6e2a2b39, com.stock.xMarket.VO.OrderVO@22975924, com.stock.xMarket.VO.OrderVO@4a5e5f06, com.stock.xMarket.VO.OrderVO@32aaaac2, com.stock.xMarket.VO.OrderVO@d663c4d, com.stock.xMarket.VO.OrderVO@15200abc]
""2019-06-28 15:02:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2dbed171]
""2019-06-28 15:02:21 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6aeefa4b]
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1013", parameters={masked}
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@284bd991]
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@391518c3]
""2019-06-28 15:02:26 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:27 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:27 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6c6a0200, com.stock.xMarket.VO.OrderVO@3e204283, com.stock.xMarket.VO.OrderVO@6c6d1306, com.stock.xMarket.VO.OrderVO@602a3f1f, com.stock.xMarket.VO.OrderVO@5cec5b18, com.stock.xMarket.VO.OrderVO@60643e5c, com.stock.xMarket.VO.OrderVO@6495f475, com.stock.xMarket.VO.OrderVO@55f6fd3f]
""2019-06-28 15:02:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6bfc5802]
""2019-06-28 15:02:27 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:31 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:31 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:02:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@65a35a6d]
""2019-06-28 15:02:31 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:37 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:37 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:02:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2ef5b048]
""2019-06-28 15:02:37 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:41 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:41 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:41 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:41 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:02:41 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:41 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5e9d268e]
""2019-06-28 15:02:41 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1013", parameters={masked}
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1013", parameters={masked}
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1013", parameters={masked}
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1013
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3f8d0432]
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2bdd625f]
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a5fc0bc]
""2019-06-28 15:02:42 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1013", parameters={masked}
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1013", parameters={masked}
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2ebc875a]
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@14dd03c2]
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1013", parameters={masked}
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1013
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@525049c0]
""2019-06-28 15:02:46 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2ab81719]
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7a698201]
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@312bcea7]
""2019-06-28 15:02:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:02:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:02:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:02:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:02:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@24f85bc0]
""2019-06-28 15:02:48 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:48 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:52 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:52 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:02:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@348bb3cf]
""2019-06-28 15:02:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:02:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:02:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:02:58 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:02:58 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:02:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:02:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@180cedc5]
""2019-06-28 15:02:58 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:03:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:03:02 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:03:02 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:03:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7c6cedf5]
""2019-06-28 15:03:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:03:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:03:08 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:03:08 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:03:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5cb65d85]
""2019-06-28 15:03:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:03:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:03:12 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:03:12 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:03:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7fe20f9a]
""2019-06-28 15:03:12 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:18 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:03:18 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:03:18 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:03:18 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:03:18 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:18 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5f767b39]
""2019-06-28 15:03:18 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:03:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:03:23 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:03:23 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:03:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@99e6485]
""2019-06-28 15:03:23 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:03:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:03:28 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:03:28 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:03:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3d624495]
""2019-06-28 15:03:28 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@395caf70]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@553f420d]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6eba11ae]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@76df3c9d]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@20a072d3]
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:52 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:03:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:03:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:03:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:03:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:03:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@569d6b8f]
""2019-06-28 15:03:53 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:03:53 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3efff2d5]
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@35ad3e04]
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@787c4b58]
""2019-06-28 15:04:21 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@79aed1b8]
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@d599a10]
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5621b0c1]
""2019-06-28 15:04:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5ed7937b]
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e4a5ae8]
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@eaecbe6]
""2019-06-28 15:04:51 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b30c56]
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5e87567c]
""2019-06-28 15:04:52 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:04:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:04:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:04:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:04:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2f1c78af]
""2019-06-28 15:04:53 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@62a2f581]
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7b21e25c]
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2ffe8733]
""2019-06-28 15:05:11 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:05:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:12 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:05:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@10badc36]
""2019-06-28 15:05:12 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@482306ff]
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7e1403af]
""2019-06-28 15:05:13 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@24645eae]
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6caebcf8]
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@13adac24]
""2019-06-28 15:05:14 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5b3222a4]
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5d3fb2d2]
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f2ed41e]
""2019-06-28 15:05:16 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6e2bada3]
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7948089c]
""2019-06-28 15:05:17 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:05:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:05:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@79d69da3]
""2019-06-28 15:05:18 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@496548e9]
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5dad5cae]
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1c525f45]
""2019-06-28 15:05:19 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5d7f8d51]
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@64b81c03]
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7fcda6]
""2019-06-28 15:05:24 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7f98c561]
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@65c2776a]
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71327888]
""2019-06-28 15:05:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4f605445]
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:05:58 [taskExecutor-2] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新股票可用余额
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@49d2b1e5]
""2019-06-28 15:05:58 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:05:59 [taskExecutor-2] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 股票可用余额更新完毕
""2019-06-28 15:05:59 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561705559000,"sellPoint":false,"tradeOrderId":1561705559000,"buyPoint":true,"exchangeAmount":100,"buyerId":1013,"sellOrderId":1561705560000,"sellerId":1008,"buyOrderId":1561705234049,"stockId":"600000","time":1561705559000,"tradePrice":11.88,"tradeType":1} 
""2019-06-28 15:05:59 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@2426cb9a 
""2019-06-28 15:05:59 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561705560000 的委托卖单未完成交易，存入redis
""2019-06-28 15:05:59 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561705234049 的委托买单完成交易，成交单存入数据库
""2019-06-28 15:05:59 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561705560000 的内容(buy):{"actualAmount":1193.002,"cancelNumber":0,"date":1561705559000,"exchangeAmount":100,"orderId":1561705234049,"ownerId":1013,"serviceTax":5.0,"stampTax":0.0,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561705559000,"totalExchangeMoney":1188.0,"tradeMarket":1,"tradePrice":11.88,"tradeType":true,"transactionOrderId":0,"transferFee":0.002,"type":0}
""2019-06-28 15:05:59 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1013  股票id:600000 开始更新持仓信息
""2019-06-28 15:05:59 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1013  股票id:600000 持仓信息更新完毕
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@8a18e03]
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@44abc85e]
""2019-06-28 15:06:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:06:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:06:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:06:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:06:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@356d71dc]
""2019-06-28 15:06:59 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7026447f]
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@41eda91]
""2019-06-28 15:07:11 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71e190df]
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@12a0bd25]
""2019-06-28 15:07:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:07:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:07:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:07:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1df32617]
""2019-06-28 15:07:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@459ab1c0]
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@270c411e]
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:07:56 [taskExecutor-19] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新股票可用余额
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@b78e57b]
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561705676846,"sellPoint":true,"tradeOrderId":1561705676846,"buyPoint":false,"exchangeAmount":100,"buyerId":1008,"sellOrderId":1561705677850,"sellerId":1008,"buyOrderId":1561705632392,"stockId":"600000","time":1561705676846,"tradePrice":11.0,"tradeType":1} 
""2019-06-28 15:07:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@64c81412 
""2019-06-28 15:07:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561705677850 的委托卖单完成交易，成交单存入数据库
""2019-06-28 15:07:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561705677850 的内容(sell):{"actualAmount":1093.8980000000001,"cancelNumber":0,"date":1561705676846,"exchangeAmount":100,"orderId":1561705677850,"ownerId":1008,"serviceTax":5.0,"stampTax":1.1,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561705676846,"totalExchangeMoney":1100.0,"tradeMarket":1,"tradePrice":11.0,"tradeType":true,"transactionOrderId":0,"transferFee":0.002,"type":1}
""2019-06-28 15:07:56 [taskExecutor-19] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 股票可用余额更新完毕
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3e69f97]
""2019-06-28 15:07:56 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:07:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新持仓信息
""2019-06-28 15:07:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 持仓信息更新完毕
""2019-06-28 15:07:56 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561705632392 的委托买单未完成交易，存入redis
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=000725", parameters={masked}
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：000725
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] ERROR c.s.x.controller.KlineController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] ERROR c.s.x.controller.BaseApiController - K线图数据获取失败，没有查询到历史信息
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@78fcc0e6]
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 15:08:05 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=000725", parameters={masked}
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=000725", parameters={masked}
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@17c76496]
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7e512f13]
""2019-06-28 15:08:06 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5b3cc224]
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@b08a001]
""2019-06-28 15:08:08 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=600000", parameters={masked}
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：600000
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@d798cc8]
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=600000", parameters={masked}
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5ca9b593]
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@179f0c1e]
""2019-06-28 15:08:15 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/KlineDiagramDisplay?stockId=600000", parameters={masked}
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.KlineController.KlineDiagramDisplay(java.lang.String) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.KlineController - 后端接收到建立K线图请求 股票：600000
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/firstTimeSharingDisplay?stockId=600000", parameters={masked}
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.firstTimeShareDisplay(java.lang.String)
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@349cae62]
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/isSelfSelectStock?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.isSelfSelectStock(java.lang.String,java.lang.Integer)
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3216cba5]
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@850265b]
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@75b840da]
""2019-06-28 15:09:49 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@396b644f]
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7a46fde9]
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@38fd5276]
""2019-06-28 15:10:12 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6d64ce0b]
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4bb599b7]
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1ef58546]
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:20 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@468d941b]
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@16927230]
""2019-06-28 15:10:38 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5932adec]
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@270f9fc9]
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4ef21b24]
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:41 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@31e517db]
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1af141de]
""2019-06-28 15:10:43 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7ea4e13d]
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6d9a9da1]
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3eb8ff46]
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:45 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6766010c]
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5a95949f]
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@50f0842b]
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:10:58 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@33a6aa00]
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@616fccb2]
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3c0b1831]
""2019-06-28 15:11:30 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@db6ead0]
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@436055b7]
""2019-06-28 15:11:31 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1011", parameters={masked}
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@73c287f0]
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1011
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@682d29fc]
""2019-06-28 15:11:38 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4591e19a]
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1d949269]
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/realTimeInfo?stockId=600000", parameters={masked}
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.RealTimeAPIController.findRealTime(java.lang.String)
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4556fbbf]
""2019-06-28 15:11:47 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7e90fd30]
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@199a0bcf]
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@26a787cf]
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:11:51 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/QueryStockInformation?stockId=600000&userId=1008", parameters={masked}
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.QueryStockInformation(java.lang.String,int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.controller.OrderController - 后端接收到查询请求查询股票600000查询用户1008
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@71455e8b]
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/buyOrSale", parameters={masked}
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.buyOrSale(com.stock.xMarket.VO.OrderVO,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:12:00 [taskExecutor-15] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新股票可用余额
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@333808bf]
""2019-06-28 15:12:00 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:12:00 [taskExecutor-15] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 股票可用余额更新完毕
""2019-06-28 15:12:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: {"date":1561705920573,"sellPoint":true,"tradeOrderId":1561705920573,"buyPoint":false,"exchangeAmount":100,"buyerId":1011,"sellOrderId":1561705921556,"sellerId":1008,"buyOrderId":1561705899457,"stockId":"600000","time":1561705920573,"tradePrice":11.88,"tradeType":1} 
""2019-06-28 15:12:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.c.listener.TradeOrderListener - 交易单监听器监听到交易单: com.stock.xMarket.model.TradeOrder@28bb8250 
""2019-06-28 15:12:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561705921556 的委托卖单完成交易，成交单存入数据库
""2019-06-28 15:12:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 1561705921556 的内容(sell):{"actualAmount":1181.81,"cancelNumber":0,"date":1561705920573,"exchangeAmount":100,"orderId":1561705921556,"ownerId":1008,"serviceTax":5.0,"stampTax":1.188,"stockBalance":100,"stockId":"600000","stockName":"浦发银行","time":1561705920573,"totalExchangeMoney":1188.0,"tradeMarket":1,"tradePrice":11.88,"tradeType":true,"transactionOrderId":0,"transferFee":0.002,"type":1}
""2019-06-28 15:12:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 开始更新持仓信息
""2019-06-28 15:12:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 用户id：1008  股票id:600000 持仓信息更新完毕
""2019-06-28 15:12:00 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 委托单号：1561705899457 的委托买单未完成交易，存入redis
""2019-06-28 15:12:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:12:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:12:11 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:12:11 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@673aa79f, com.stock.xMarket.VO.OrderVO@6d64deaa, com.stock.xMarket.VO.OrderVO@409c42b1, com.stock.xMarket.VO.OrderVO@79661c92]
""2019-06-28 15:12:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:12:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4bd25a7e]
""2019-06-28 15:12:11 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:12:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:12:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:12:21 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:12:21 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@41ae12b4, com.stock.xMarket.VO.OrderVO@22003168, com.stock.xMarket.VO.OrderVO@708a9351, com.stock.xMarket.VO.OrderVO@3bc9708b]
""2019-06-28 15:12:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:12:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@a43eef4]
""2019-06-28 15:12:21 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:12:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:12:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:12:32 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:12:32 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@15938691, com.stock.xMarket.VO.OrderVO@4fccf54e, com.stock.xMarket.VO.OrderVO@640d883f, com.stock.xMarket.VO.OrderVO@478d7f20]
""2019-06-28 15:12:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:12:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4e23de4e]
""2019-06-28 15:12:32 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:12:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:12:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:12:42 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:12:42 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@141efd55, com.stock.xMarket.VO.OrderVO@c810296, com.stock.xMarket.VO.OrderVO@4bd1d5ed, com.stock.xMarket.VO.OrderVO@3fadb342]
""2019-06-28 15:12:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:12:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5cba05b7]
""2019-06-28 15:12:42 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:12:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:12:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:12:53 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:12:53 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@44802389, com.stock.xMarket.VO.OrderVO@1fd3a6f9, com.stock.xMarket.VO.OrderVO@342c8f3, com.stock.xMarket.VO.OrderVO@371f5ac4]
""2019-06-28 15:12:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:12:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@72c6abc5]
""2019-06-28 15:12:53 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/login", parameters={masked}
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserApiController.login(com.stock.xMarket.model.User,javax.servlet.http.HttpSession,java.lang.String,javax.servlet.http.HttpServletResponse) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.UserApiController - id为0的用户输入验证码：u657   正确验证码：U657
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 获取1006的信息
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.s.s.TransactionOrderServiceImpl - 获取1006的信息成功
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.UserApiController - id为1006的用户登录成功
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@94250f0]
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@27fd9ee1]
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@155829d]
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4459bfd6]
""2019-06-28 15:13:01 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@38a76faa, com.stock.xMarket.VO.OrderVO@35a2b4f5, com.stock.xMarket.VO.OrderVO@29ea812c, com.stock.xMarket.VO.OrderVO@44ea8cc1]
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@47b361c9]
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1006", parameters={masked}
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1006
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[]
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@32b0b3b9]
""2019-06-28 15:13:03 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:13:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:13:13 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:13:13 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3cd9354, com.stock.xMarket.VO.OrderVO@3dc375d4, com.stock.xMarket.VO.OrderVO@21100b3f, com.stock.xMarket.VO.OrderVO@518df940]
""2019-06-28 15:13:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3e359716]
""2019-06-28 15:13:13 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:14 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:13:14 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:13:14 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:14 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@666d3441]
""2019-06-28 15:13:14 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@588cdcff]
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7c388e8d]
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3d7da09b]
""2019-06-28 15:13:15 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@28a84836]
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6f8395c5]
""2019-06-28 15:13:17 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:13:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:13:24 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:13:24 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@14df830c, com.stock.xMarket.VO.OrderVO@7f27c345, com.stock.xMarket.VO.OrderVO@2b21ed72, com.stock.xMarket.VO.OrderVO@5325382f]
""2019-06-28 15:13:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3b8a06a4]
""2019-06-28 15:13:24 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:13:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:13:34 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:13:34 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@72312b74, com.stock.xMarket.VO.OrderVO@52a46a95, com.stock.xMarket.VO.OrderVO@2c51525d, com.stock.xMarket.VO.OrderVO@5c9a33a3]
""2019-06-28 15:13:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@270bc9cf]
""2019-06-28 15:13:34 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/selfSelectStockList?userId=1006", parameters={masked}
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllSelfSelectStock(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@70089497]
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6ea904c3]
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@f16a17c]
""2019-06-28 15:13:37 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/presentHoldPositionInfo?userId=1006", parameters={masked}
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.findHoldPosition(int)
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getFunds?userId=1006", parameters={masked}
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/userFundLineDisplay?userId=1006", parameters={masked}
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.HoldPositionController.getFunds(int)
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.UserFundLineController.KlineDiagramDisplay(int) throws com.stock.xMarket.error.BusinessException,java.text.ParseException
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.KlineController - 后端接收到建立资金曲线请求 用户：1006
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] ERROR c.s.x.controller.KlineController - 用户资金曲线数据获取失败，没有查询到此用户的历史资金信息
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler public java.lang.Object com.stock.xMarket.controller.BaseApiController.handleException(javax.servlet.http.HttpServletRequest,java.lang.Exception)
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] ERROR c.s.x.controller.BaseApiController - 暂无资金曲线
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@46d713b]
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.stock.xMarket.error.BusinessException]
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4058db40]
""2019-06-28 15:13:44 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2302d09]
""2019-06-28 15:13:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:46 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:13:46 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:13:46 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:13:46 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@71d5a31f, com.stock.xMarket.VO.OrderVO@4919352e, com.stock.xMarket.VO.OrderVO@3edbe0e3, com.stock.xMarket.VO.OrderVO@1d0a5f9f]
""2019-06-28 15:13:46 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:46 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@411bca7a]
""2019-06-28 15:13:46 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getCondition", parameters={}
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.getCondition()
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@a569277]
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7a76c77b]
""2019-06-28 15:13:47 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/rankList?type=1", parameters={masked}
""2019-06-28 15:13:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.rankList(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:13:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@560aff79]
""2019-06-28 15:13:49 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/rankList?type=2", parameters={masked}
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.rankList(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/rankList?type=3", parameters={masked}
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.rankList(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/rankList?type=4", parameters={masked}
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.rankList(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@42f11249]
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@f468765]
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3a2af491]
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:50 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:13:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:13:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:13:56 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:13:56 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@498cc627, com.stock.xMarket.VO.OrderVO@2517bb5d, com.stock.xMarket.VO.OrderVO@3a0f49be, com.stock.xMarket.VO.OrderVO@1187b33]
""2019-06-28 15:13:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:13:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2e0a28c9]
""2019-06-28 15:13:56 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:14:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:14:07 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:14:07 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@34f5a3ed, com.stock.xMarket.VO.OrderVO@ff246a0, com.stock.xMarket.VO.OrderVO@469d101b, com.stock.xMarket.VO.OrderVO@4720624f]
""2019-06-28 15:14:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5e534b8d]
""2019-06-28 15:14:07 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:14:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:14:17 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:14:17 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@507c1a59, com.stock.xMarket.VO.OrderVO@6b2882df, com.stock.xMarket.VO.OrderVO@781fb139, com.stock.xMarket.VO.OrderVO@48e3c00]
""2019-06-28 15:14:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3410501a]
""2019-06-28 15:14:17 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:28 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:14:28 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:14:28 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:14:28 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@ac104e9, com.stock.xMarket.VO.OrderVO@49983ce8, com.stock.xMarket.VO.OrderVO@b956a2e, com.stock.xMarket.VO.OrderVO@72c537ff]
""2019-06-28 15:14:28 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:28 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@70218302]
""2019-06-28 15:14:28 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7ddb314a]
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@5e98ff3a]
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@15209c54]
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:33 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:14:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:14:38 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:14:38 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@20fa5979, com.stock.xMarket.VO.OrderVO@60289af, com.stock.xMarket.VO.OrderVO@31bd4186, com.stock.xMarket.VO.OrderVO@18512ae9]
""2019-06-28 15:14:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6a12990b]
""2019-06-28 15:14:38 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7029718b]
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@365fb306]
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1b01023d]
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:46 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:14:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:14:48 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:14:48 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@4d9989cf, com.stock.xMarket.VO.OrderVO@70baf24c, com.stock.xMarket.VO.OrderVO@47566a22, com.stock.xMarket.VO.OrderVO@75bfe30a]
""2019-06-28 15:14:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7469cb83]
""2019-06-28 15:14:48 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayExchange?userId=1008", parameters={masked}
""2019-06-28 15:14:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.todayExchange(int) throws com.stock.xMarket.error.BusinessException
""2019-06-28 15:14:49 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1008
""2019-06-28 15:14:49 [http-nio-0.0.0.0-8090-exec-3] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[{"actualAmount":1181.81,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561705921556,"ownerId":1008,"serviceTax":5.0,"stampTax":1.188,"stockBalance":11697200,"stockId":"600000","stockName":"浦发银行","time":25920000,"totalExchangeMoney":1188.0,"tradeMarket":1,"tradePrice":11.88,"tradeType":true,"transactionOrderId":64211,"transferFee":0.002,"type":1},{"actualAmount":1093.8980000000001,"cancelNumber":0,"date":1561680000000,"exchangeAmount":100,"orderId":1561705677850,"ownerId":1008,"serviceTax":5.0,"stampTax":1.1,"stockBalance":11697300,"stockId":"600000","stockName":"浦发银行","time":25676000,"totalExchangeMoney":1100.0,"tradeMarket":1,"tradePrice":11.0,"tradeType":true,"transactionOrderId":64210,"transferFee":0.002,"type":1}]
""2019-06-28 15:14:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@77274e69]
""2019-06-28 15:14:49 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1008", parameters={masked}
""2019-06-28 15:14:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 15:14:56 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1008
""2019-06-28 15:14:56 [http-nio-0.0.0.0-8090-exec-5] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[com.stock.xMarket.VO.TransactionOrderVO@1a2bd875, com.stock.xMarket.VO.TransactionOrderVO@cbf29c6]
""2019-06-28 15:14:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@55d86bb8]
""2019-06-28 15:14:56 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:14:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:14:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:14:59 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:14:59 [http-nio-0.0.0.0-8090-exec-6] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@21c8b968, com.stock.xMarket.VO.OrderVO@7194bf43, com.stock.xMarket.VO.OrderVO@28a03c2d, com.stock.xMarket.VO.OrderVO@70d1987c]
""2019-06-28 15:14:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:14:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@14367cf7]
""2019-06-28 15:14:59 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:15:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:15:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:15:09 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:15:09 [http-nio-0.0.0.0-8090-exec-2] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@2457717a, com.stock.xMarket.VO.OrderVO@2fd4293e, com.stock.xMarket.VO.OrderVO@46ae31a9, com.stock.xMarket.VO.OrderVO@29bc92be]
""2019-06-28 15:15:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:15:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@36ffea52]
""2019-06-28 15:15:09 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:15:20 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:15:20 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:15:20 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:15:20 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@51dfefa6, com.stock.xMarket.VO.OrderVO@752a39e4, com.stock.xMarket.VO.OrderVO@61ce750d, com.stock.xMarket.VO.OrderVO@270ccdca]
""2019-06-28 15:15:20 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:15:20 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@980a452]
""2019-06-28 15:15:20 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:15:31 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:15:31 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:15:31 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:15:31 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3ad87c59, com.stock.xMarket.VO.OrderVO@35f1b154, com.stock.xMarket.VO.OrderVO@4253322b, com.stock.xMarket.VO.OrderVO@36ab2fd7]
""2019-06-28 15:15:31 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:15:31 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4fe8a7ef]
""2019-06-28 15:15:31 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:15:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:15:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:15:41 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:15:41 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@750e9296, com.stock.xMarket.VO.OrderVO@7dcf9ef2, com.stock.xMarket.VO.OrderVO@4f667ac, com.stock.xMarket.VO.OrderVO@1975c5b3]
""2019-06-28 15:15:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:15:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@18ee7e29]
""2019-06-28 15:15:41 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:15:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:15:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:15:52 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:15:52 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@6ad7b040, com.stock.xMarket.VO.OrderVO@62bb595, com.stock.xMarket.VO.OrderVO@2fa39caf, com.stock.xMarket.VO.OrderVO@211867d8]
""2019-06-28 15:15:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:15:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@769a860b]
""2019-06-28 15:15:52 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:16:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:16:02 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:16:02 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@a1dbfb0, com.stock.xMarket.VO.OrderVO@3cae9742, com.stock.xMarket.VO.OrderVO@16d9cfc2, com.stock.xMarket.VO.OrderVO@72720305]
""2019-06-28 15:16:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@1575d2c4]
""2019-06-28 15:16:02 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:16:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:16:13 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:16:13 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@50c04d80, com.stock.xMarket.VO.OrderVO@4cfe2a10, com.stock.xMarket.VO.OrderVO@62dd085b, com.stock.xMarket.VO.OrderVO@2944729a]
""2019-06-28 15:16:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@7b3a867f]
""2019-06-28 15:16:13 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getNews", parameters={}
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.NewsController.getNews()
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@2705ce3c]
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/getIndex", parameters={}
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.IndexController.getIndex()
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4aa444cf]
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/validateCode", parameters={}
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public java.lang.String com.stock.xMarket.controller.UserApiController.validate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/stockList", parameters={}
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.StockListController.findAllRealTime()
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@38ecb86a]
""2019-06-28 15:16:16 [http-nio-0.0.0.0-8090-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:16:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:16:23 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:16:23 [http-nio-0.0.0.0-8090-exec-10] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@3306ed4f, com.stock.xMarket.VO.OrderVO@fdd8e39, com.stock.xMarket.VO.OrderVO@d878a93, com.stock.xMarket.VO.OrderVO@7593432]
""2019-06-28 15:16:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@3b1dd03]
""2019-06-28 15:16:23 [http-nio-0.0.0.0-8090-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:16:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:16:34 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:16:34 [http-nio-0.0.0.0-8090-exec-1] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@1db71d8b, com.stock.xMarket.VO.OrderVO@71e46206, com.stock.xMarket.VO.OrderVO@2634ddaa, com.stock.xMarket.VO.OrderVO@4ed9331f]
""2019-06-28 15:16:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6b27340a]
""2019-06-28 15:16:34 [http-nio-0.0.0.0-8090-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1011", parameters={masked}
""2019-06-28 15:16:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 15:16:40 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1011
""2019-06-28 15:16:40 [http-nio-0.0.0.0-8090-exec-7] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[]
""2019-06-28 15:16:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@519ab2d0]
""2019-06-28 15:16:40 [http-nio-0.0.0.0-8090-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:16:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:16:45 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:16:45 [http-nio-0.0.0.0-8090-exec-9] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@73827ab, com.stock.xMarket.VO.OrderVO@12c59357, com.stock.xMarket.VO.OrderVO@619a2dd7, com.stock.xMarket.VO.OrderVO@88367ce]
""2019-06-28 15:16:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@4ec00c0a]
""2019-06-28 15:16:45 [http-nio-0.0.0.0-8090-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:16:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/todayOrder?userId=1008", parameters={masked}
""2019-06-28 15:16:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.OrderController.findAllTodayOrder(int)
""2019-06-28 15:16:55 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传进来的用户ownerId：1008
""2019-06-28 15:16:55 [http-nio-0.0.0.0-8090-exec-8] INFO  c.s.x.controller.OrderController - 传出去的结果：[com.stock.xMarket.VO.OrderVO@101523de, com.stock.xMarket.VO.OrderVO@635b0f0, com.stock.xMarket.VO.OrderVO@ba17e24, com.stock.xMarket.VO.OrderVO@52424b04]
""2019-06-28 15:16:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:16:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@6bf09941]
""2019-06-28 15:16:55 [http-nio-0.0.0.0-8090-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
""2019-06-28 15:17:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/historyExchangeInfo?userId=1008", parameters={masked}
""2019-06-28 15:17:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to public com.stock.xMarket.response.CommonReturnType com.stock.xMarket.controller.TransactionOrderController.findAllHisExcInfo(int)
""2019-06-28 15:17:02 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.c.TransactionOrderController - 传进来的用户ownerId：1008
""2019-06-28 15:17:02 [http-nio-0.0.0.0-8090-exec-4] INFO  c.s.x.c.TransactionOrderController - 传出去的结果：[com.stock.xMarket.VO.TransactionOrderVO@6940ce9e, com.stock.xMarket.VO.TransactionOrderVO@638e0a89]
""2019-06-28 15:17:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2019-06-28 15:17:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.stock.xMarket.response.CommonReturnType@49cfd7ae]
""2019-06-28 15:17:02 [http-nio-0.0.0.0-8090-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
"